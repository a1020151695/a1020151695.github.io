<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>802.11ax Wi-Fi</title>
    <url>/2021/03/13/802-11ax-Wi-Fi/</url>
    <content><![CDATA[<p><a href="https://en.wikipedia.org/wiki/IEEE_802.11ax">Wikipedia</a></p>
<table>
<thead>
<tr>
<th align="center">Feature</th>
<th align="center"><a href="https://en.wikipedia.org/wiki/802.11ac">802.11ac</a></th>
<th align="center">802.11ax</th>
<th align="center">Comment</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><a href="https://en.wikipedia.org/wiki/OFDMA">OFDMA</a></td>
<td align="center">Not available</td>
<td align="center">Centrally controlled medium access with dynamic assignment of 26, 52, 106, 242(?), 484(?), or 996(?) tones per station. Each tone consists of a single subcarrier of 78.125 kHz bandwidth. Therefore, bandwidth occupied by a single OFDMA transmission is between 2.03125 MHz and ca. 80 MHz bandwidth.</td>
<td align="center">OFDMA segregates the spectrum in time-frequency <a href="https://en.wikipedia.org/wiki/Resource_Unit">resource units (RUs)</a>. A central coordinating entity (the AP in 802.11ax) assigns RUs for reception or transmission to associated stations. Through the central scheduling of the RUs contention overhead can be avoided, which increases efficiency in scenarios of dense deployments.</td>
</tr>
<tr>
<td align="center"><a href="https://en.wikipedia.org/wiki/Multi-user_MIMO">Multi-user MIMO (MU-MIMO)</a></td>
<td align="center">Available in <a href="https://en.wikipedia.org/wiki/Telecommunications_link#Downlink">Downlink</a> direction</td>
<td align="center">Available in Downlink and <a href="https://en.wikipedia.org/wiki/Telecommunications_link#Uplink">Uplink</a> direction</td>
<td align="center">With Downlink MU MIMO an AP may transmit concurrently to multiple stations and with Uplink MU MIMO an AP may simultaneously receive from multiple stations. Whereas OFDMA separates receivers to different RUs, with MU MIMO the devices are separated to different spatial streams. In 802.11ax, MU MIMO and OFDMA technologies can be used simultaneously. To enable uplink MU transmissions, the AP transmits a new control frame (Trigger) which contains scheduling information (RUs allocations for stations, modulation and coding scheme (MCS) that shall be used for each station). Furthermore, Trigger also provides synchronization for an uplink transmission, since the transmission starts <a href="https://en.wikipedia.org/wiki/Short_Interframe_Space">SIFS</a> after the end of Trigger.</td>
</tr>
<tr>
<td align="center">Trigger-based Random Access</td>
<td align="center">Not available</td>
<td align="center">Allows performing UL OFDMA transmissions by stations which are not allocated RUs directly.</td>
<td align="center">In Trigger frame, the AP specifies scheduling information about subsequent UL MU transmission. However, several RUs can be assigned for random access. Stations which are not assigned RUs directly can perform transmissions within RUs assigned for random access. To reduce collision probability (i.e. situation when two or more stations select the same <a href="https://en.wikipedia.org/wiki/Resource_Unit">RU</a> for transmission), the 802.11ax amendment specifies special OFDMA back-off procedure. Random access is favorable for transmitting buffer status reports when the AP has no information about pending UL traffic at a station.</td>
</tr>
<tr>
<td align="center">Spatial frequency reuse</td>
<td align="center">Not available</td>
<td align="center">Coloring enables devices to differentiate transmissions in their own network from transmissions in neighboring networks.Adaptive Power and Sensitivity Thresholds allows dynamically adjusting transmit power and signal detection threshold to increase spatial reuse.</td>
<td align="center">Without spatial reuse capabilities devices refuse transmitting concurrently to transmissions ongoing in other, neighboring networks. With coloring, a wireless transmission is marked at its very beginning helping surrounding devices to decide if a simultaneous use of the wireless medium is permissible or not. A station is allowed to consider the wireless medium as idle and start a new transmission even if the detected signal level from a neighboring network exceeds legacy signal detection threshold, provided that the transmit power for the new transmission is appropriately decreased.</td>
</tr>
<tr>
<td align="center"><a href="https://en.wikipedia.org/wiki/Network_allocation_vector">NAV</a></td>
<td align="center">Single NAV</td>
<td align="center">Two NAVs</td>
<td align="center">In dense deployment scenarios, NAV value set by a frame originated from one network may be easily reset by a frame originated from another network, which leads to misbehavior and collisions. To avoid this, each 802.11ax station will maintain two separate NAVs — one NAV is modified by frames originated from a network the station is associated with, the other NAV is modified by frames originated from overlapped networks.</td>
</tr>
<tr>
<td align="center"><a href="https://en.wikipedia.org/wiki/IEEE_802.11ah#Target_Wake_Time">Target Wake Time (TWT)</a></td>
<td align="center">Not available</td>
<td align="center">TWT reduces power consumption and medium access contention.</td>
<td align="center">TWT is a concept developed in <a href="https://en.wikipedia.org/wiki/802.11ah">802.11ah</a>. It allows devices to wake up at other periods than the beacon transmission period. Furthermore, the AP may group device to different TWT period thereby reducing the number of devices contending simultaneously for the wireless medium.</td>
</tr>
<tr>
<td align="center">Fragmentation</td>
<td align="center">Static fragmentation</td>
<td align="center">Dynamic fragmentation</td>
<td align="center">With static fragmentation all fragments of a data packet are of equal size except for the last fragment. With dynamic fragmentation a device may fill available RUs of other opportunities to transmit up to the available maximum duration. Thus, dynamic fragmentation helps reduce overhead.</td>
</tr>
<tr>
<td align="center"><a href="https://en.wikipedia.org/wiki/Guard_interval">Guard interval</a> duration</td>
<td align="center">0.4 µs or 0.8 µs</td>
<td align="center">0.8 µs, 1.6 µs or 3.2 µs</td>
<td align="center">Extended guard interval durations allow for better protection against signal delay spread as it occurs in outdoor environments.</td>
</tr>
<tr>
<td align="center">Symbol duration</td>
<td align="center">3.2 µs</td>
<td align="center">12.8 µs</td>
<td align="center">Since the subcarrier spacing is reduced by a factor of 4, the OFDM symbol duration is increased by a factor of 4 as well. Extended symbol durations allow for increased efficiency.[<a href="https://en.wikipedia.org/wiki/IEEE_802.11ax#cite_note-LongerSymbolDuration-14">11]</a></td>
</tr>
</tbody></table>
<p>OFDMA</p>
<p>BSS Color</p>
]]></content>
      <categories>
        <category>Network</category>
        <category>Wi-Fi</category>
      </categories>
      <tags>
        <tag>Wi-Fi6</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Add Views</title>
    <url>/2021/01/06/Android-Add-Views/</url>
    <content><![CDATA[<p>Example</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">signDataView = SuperTextView(requireContext())</span><br><span class="line">buildSignDataView(signDataView, signData)</span><br><span class="line">activity?.runOnUiThread &#123;</span><br><span class="line">	signDataListLayout?.addView(signDataView)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Android</category>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Tutorial</tag>
      </tags>
  </entry>
  <entry>
    <title>Ajax Tutorial</title>
    <url>/2021/05/11/Ajax-Tutorial/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">            type: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">            url: <span class="string">&quot;http://localhost:8080/getRecord?area=&quot;</span>+area,</span><br><span class="line">            dataType: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">            jsonp: <span class="string">&quot;callback&quot;</span>,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">json</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(json);</span><br><span class="line">                <span class="keyword">let</span> mainBody = <span class="built_in">document</span>.getElementById(<span class="string">&quot;main-body&quot;</span>);</span><br><span class="line">                <span class="keyword">let</span> table = <span class="string">&quot;&lt;table class=&#x27;table&#x27;&gt;&quot;</span>;</span><br><span class="line">                <span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">const</span> key <span class="keyword">in</span> json</span>)</span>&#123;</span><br><span class="line">                    table += <span class="string">&quot;&lt;tr&gt;&lt;td&gt;&quot;</span>+key+<span class="string">&quot;&lt;/td&gt;&lt;td&gt;&quot;</span>+json[key]+<span class="string">&quot;&lt;/td&gt;&lt;/tr&gt;&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">                table+=<span class="string">&quot;&lt;/table&gt;&quot;</span></span><br><span class="line">                mainBody.innerHTML=table;</span><br><span class="line">            &#125;,</span><br><span class="line">            error: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                alert(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure>



<hr>
<h4 id="ajax不发送请求"><a href="#ajax不发送请求" class="headerlink" title="ajax不发送请求"></a>ajax不发送请求</h4><p>原因：没有正确引入jquery</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>虽然某些别的js脚本也有引入jquery</p>
<p>但是那个版本可能不支持ajax</p>
<p>以导致ajax失效</p>
]]></content>
  </entry>
  <entry>
    <title>Android Back Button</title>
    <url>/2021/01/04/Android-Back-Button/</url>
    <content><![CDATA[<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onBackPressed</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.onBackPressed()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>This function is what your Android do when you press the back button</p>
<p>If you don’t want user use back button somewhere</p>
<p>Just do like this</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onBackPressed</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// super.onBackPressed()</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>Android</category>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Tutorial</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Bundle</title>
    <url>/2021/01/04/Android-Bundle/</url>
    <content><![CDATA[<p>Bundle can be  use for transport data between Fragment</p>
<p>Send</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> bundle = Bundle()</span><br><span class="line">bundle.putString(<span class="string">&quot;key1&quot;</span>, <span class="string">&quot;GFG :- Main Activity&quot;</span>)</span><br><span class="line">NavUtil.navController?.navigate(R.id.signStateForStudent,bundle)</span><br><span class="line"><span class="comment">// When you use navigation</span></span><br></pre></td></tr></table></figure>

<p>Get</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> bundle = Intent.getExtras()</span><br><span class="line">bundle.getString(<span class="string">&quot;key1&quot;</span>, <span class="string">&quot;Default&quot;</span>) </span><br><span class="line"><span class="comment">// arg2 will be return when &quot;key1&quot; can&#x27;t be foud in bundle</span></span><br></pre></td></tr></table></figure>

<p>But it can just be transported one time ! !</p>
<p>When you back to the fragment, the bundle will gone </p>
<p>Bundle just can be use for the “one-time” issue</p>
<hr>
<p>For the data you need to use many time </p>
<p>You can use companion object {} to solve that problem</p>
<p>All fragments can get the data directly from the companion object {} within an activity</p>
]]></content>
      <categories>
        <category>Android</category>
        <category>Transport Data</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Android DeviceId</title>
    <url>/2021/01/04/Android-DeviceId/</url>
    <content><![CDATA[<p>Example</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var deviceId&#x3D; Settings.System.getString(contentResolver, Settings.System.ANDROID_ID);</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Android</category>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Tutorial</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Dialog Processing</title>
    <url>/2021/01/04/Android-Dialog-Processing/</url>
    <content><![CDATA[<p>Display a circle in dialog when loading something</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">configLoadingProgress</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> loadingDialogBuilder = AlertDialog.Builder(<span class="keyword">this</span>)</span><br><span class="line">    <span class="keyword">val</span> loadingProgress = ProgressBar(<span class="keyword">this</span>)</span><br><span class="line">    loadingDialogBuilder.setView(loadingProgress)</span><br><span class="line">    loadingDialogBuilder.setTitle(<span class="string">&quot;正在登陆...&quot;</span>)</span><br><span class="line">    runOnUiThread &#123;</span><br><span class="line">        loadingDialog = loadingDialogBuilder.create()</span><br><span class="line">        loadingDialog!!.show()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>The circle is just a ProgressBar widget in dialog</p>
<p>Note !</p>
<p>1.Create and show a dialog should be done by UI Thread</p>
<p>2.There are some callback functions about the dialog, you can check the document</p>
<p>If you want to close the dialog by program </p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">loadingDialog?.cancel()</span><br></pre></td></tr></table></figure>

<p>Note !</p>
<p>1.You should invoke cancel() from dialog but not dialogBuilder</p>
<p>2.dialog = dialogBuilder.create()</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> loadingDialogBuilder = AlertDialog.Builder(<span class="keyword">this</span>)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Android</category>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Tutorial</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Intent Transport Data</title>
    <url>/2021/01/04/Android-Intent-Transport-Data/</url>
    <content><![CDATA[<p>Example:</p>
<p>Send data</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">toStudentPage</span><span class="params">(loginInfo: <span class="type">JSONObject</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> intent = Intent(<span class="keyword">this</span>, StudentActivity::<span class="keyword">class</span>.java).apply &#123;&#125;</span><br><span class="line">    intent.putExtra(<span class="string">&quot;studentId&quot;</span>, loginInfo[<span class="string">&quot;studentId&quot;</span>].toString())</span><br><span class="line">    intent.putExtra(<span class="string">&quot;studentName&quot;</span>, loginInfo[<span class="string">&quot;studentName&quot;</span>].toString())</span><br><span class="line">    intent.putExtra(<span class="string">&quot;classId&quot;</span>, loginInfo[<span class="string">&quot;classId&quot;</span>].toString())</span><br><span class="line">    intent.putExtra(<span class="string">&quot;className&quot;</span>, loginInfo[<span class="string">&quot;className&quot;</span>].toString())</span><br><span class="line">    startActivity(intent)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Get data</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> studentId = intent.getStringExtra(<span class="string">&quot;studentId&quot;</span>)</span><br><span class="line"><span class="keyword">val</span> studentName = intent.getStringExtra(<span class="string">&quot;studentName&quot;</span>)</span><br><span class="line"><span class="keyword">val</span> classId = intent.getStringExtra(<span class="string">&quot;classId&quot;</span>)</span><br><span class="line"><span class="keyword">val</span> className = intent.getStringExtra(<span class="string">&quot;className&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>Note:</p>
<p>Intent is like a build-in object in Kotlin</p>
]]></content>
      <categories>
        <category>Android</category>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Tutorial</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Fragment Tutorial</title>
    <url>/2021/01/06/Android-Fragment-Tutorial/</url>
    <content><![CDATA[<p>1.New A Fragment</p>
<p>“New” – “Fragment” – “Fragment Blank”</p>
<p>Then we can get an fragment activity and relative layout file</p>
<p>2.Add Fragment To Activity</p>
<p>In target xml file</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/xxx&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">&quot;xxx&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<p> Note !</p>
<p>Name and Id is essential ! ! !</p>
<p>Name is the fragment activity you just created</p>
<p>(Just the class name of the fragment activity)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">com.exmaple.BlankFragment</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class BlankFragment : Fragment()</span><br></pre></td></tr></table></figure>

<p>Then you can name id as you like, but do not forget it, it is really important ! !</p>
<hr>
<p>After two steps, you can see a fragment is added to an activity</p>
]]></content>
      <categories>
        <category>Android</category>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Tutorial</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Fragment And Activity</title>
    <url>/2021/01/04/Android-Fragment-And-Activity/</url>
    <content><![CDATA[<p>Fragment’s feature is reusable</p>
<p>A fragment is a completed page, and you can use a fragment tag(&lt;fragment/&gt;) to insert it to any Layout</p>
<p>The code in fragment activity and normal activity is different</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yes, fragment also has it&#39;s activity called &quot;Fragment Activity&quot;</span><br></pre></td></tr></table></figure>

<p>Difference</p>
<p>1.You can use “applicationContext” directly in normal activity </p>
<p>But in Fragment Activity, you can’t !</p>
<p>You need to invoke a method — getContext()</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kotlin can use &quot;context&quot; directly, but in fact, it invoke the method getContext()</span><br></pre></td></tr></table></figure>

<p>2.You can use “runOnUiThread” directly in normal activity </p>
<p>But in Fragment Activity,  you can’t !</p>
<p>You need to get the Activity which is connected to UI Thread</p>
<p>Then </p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">activity?.runOnUiThread &#123;</span><br><span class="line">	...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Conclusion:</p>
<p>There are some difference, but that’s not a big deal</p>
<p>Android SDK has solved that problem for us  </p>
]]></content>
      <categories>
        <category>Android</category>
        <category>Fragment</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Layout Parameter</title>
    <url>/2021/01/06/Android-Layout-Parameter/</url>
    <content><![CDATA[<p>Build</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> layoutParamsForInfoUnit: LinearLayout.LayoutParams? = <span class="literal">null</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">buildLayoutParamsForInfoUnit</span><span class="params">(context: <span class="type">Context</span>?)</span></span>&#123;</span><br><span class="line">layoutParamsForInfoUnit =</span><br><span class="line">                LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, DpUtil.dip2px(context,<span class="number">100f</span>))</span><br><span class="line">layoutParamsForInfoUnit?.setMargins(DpUtil.dip2px(context, <span class="number">10f</span>), DpUtil.dip2px(context,<span class="number">10f</span>), DpUtil.dip2px(context,<span class="number">10f</span>), <span class="number">0</span>) <span class="comment">// left,top,right,bottom</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Use</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">signDataView!!.layoutParams &#x3D; LayoutUtil.layoutParamsForInfoUnit</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Android</category>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Tutorial</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Layout Rule</title>
    <url>/2021/01/04/Android-Layout-Rule/</url>
    <content><![CDATA[<p>1.About Weight</p>
<p>Allocate the rest space by it’s weight</p>
<p>Pay attention to the “Rest Space”</p>
<p>So it’s not right to use weight for all widgets</p>
<p>For widget like TextView, we should give it a fixed value of height</p>
<p>So that the text will not be strange</p>
<p>But for the widget like ScrollView we’d better use weight</p>
<p>because they should can be stretched</p>
<p>Note !</p>
<p>weight can be decimal ~</p>
<hr>
<p>2.Center</p>
<p>If you want to put a image in the center of the whole page</p>
<p>Do like this </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;9&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;0dp&quot;</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">            <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;0dp&quot;</span>/&gt;</span></span><br><span class="line">            </span><br><span class="line">            <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:src</span>=<span class="string">&quot;@drawable/success_sign&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;0dp&quot;</span>/&gt;</span></span><br><span class="line">            </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>That’s the power of weight</p>
<p>With weight, the view can be stretched to fill the blank</p>
<p>Beside this center </p>
<p>If You just want to put a view to the center of a layout</p>
<p>Then use the attribute “layout_gravity”, assign it “center”</p>
<p>“layout_gravity”, decide the position of a widget within a layout</p>
<p>“gravity”, decide the text position within a widget</p>
<hr>
<p>3.ViewGroup</p>
<p>Like </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>&lt;LinearLayout&gt;&lt;/LinearLayout&gt; is allow to add view into it</p>
<p>&lt;/LinearLayout&gt; is not allow add view into it</p>
]]></content>
      <categories>
        <category>Android</category>
        <category>Layout</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Lifecycle Of Activity</title>
    <url>/2021/01/04/Android-Lifecycle-Of-Activity/</url>
    <content><![CDATA[<p><a href="https://developer.android.com/guide/components/activities/activity-lifecycle">Document</a></p>
<p>onCreate() just be invoked one time</p>
<p>onStart() will be </p>
]]></content>
      <categories>
        <category>Android</category>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Turorial</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Request</title>
    <url>/2021/01/04/Android-Request/</url>
    <content><![CDATA[<p>How get data by request in Android?</p>
<p>Here is an example</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">    Thread()&#123;</span><br><span class="line">        <span class="keyword">val</span> url = URL(<span class="string">&quot;https://api.thecatapi.com/v1/images/search&quot;</span>)</span><br><span class="line">        <span class="keyword">val</span> connection = url.openConnection() <span class="keyword">as</span> HttpURLConnection</span><br><span class="line">        connection.requestMethod = <span class="string">&quot;GET&quot;</span></span><br><span class="line">        <span class="keyword">val</span> inputstream = connection.inputStream</span><br><span class="line">        <span class="keyword">val</span> reader = inputstream.bufferedReader()</span><br><span class="line">        <span class="keyword">var</span> response = StringBuilder()</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">val</span> line = reader.readLine()</span><br><span class="line">            <span class="keyword">if</span> (line == <span class="literal">null</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            response.append(line)</span><br><span class="line">        &#125;</span><br><span class="line">        reader.close()</span><br><span class="line">        connection.disconnect()</span><br><span class="line">        <span class="keyword">val</span> jsons = JSONArray(response.toString())</span><br><span class="line">        runOnUiThread&#123;</span><br><span class="line">...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;.start()</span><br></pre></td></tr></table></figure>

<p>Note:</p>
<p>1.You can’t request in UI thread, so you need to create a new thread to do this job</p>
<p>2.The connection is actually established when you get inputStream from connection</p>
<p>3.You can use try-catch here to deal with the issue that connect time out </p>
<p>4.You can’t update UI in this new thread directly, you must use runOnUiThread{} to update UI</p>
<p>5.Every time you establish a connection remember to close it, it’s a good habit</p>
<hr>
<p>How to deal with JsonArray in Android</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> signDataList = responseJson[<span class="string">&quot;activityInfo&quot;</span>] <span class="keyword">as</span> JSONArray</span><br><span class="line"><span class="keyword">for</span>(index <span class="keyword">in</span> <span class="number">0</span> until signDataList.length())&#123;</span><br><span class="line">	signDataList[index]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<hr>
<p>Note</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The request codes can be integrated into a util class</span><br><span class="line">So that you don&#39;t need to write the repeat codes again and again</span><br><span class="line">That&#39;s the power of Refactor !</span><br></pre></td></tr></table></figure>

<p>Just like this</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">getDataByRequest</span><span class="params">(activity:<span class="type">Activity</span>?, context:<span class="type">Context</span>, urlForLogin:<span class="type">URL</span>?)</span></span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        getDataByUrl(urlForLogin)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e: Exception) &#123;</span><br><span class="line">        e.printStackTrace()</span><br><span class="line">        buildConnectFailDialog(context)</span><br><span class="line">        activity?.runOnUiThread &#123;</span><br><span class="line">            connectFailDialog = connectFailDialogBuilder?.create()</span><br><span class="line">            connectFailDialog?.show()</span><br><span class="line">        &#125;</span><br><span class="line">        Thread.currentThread().join()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">getDataByUrl</span><span class="params">(url: <span class="type">URL</span>?)</span></span>&#123;</span><br><span class="line">    connection = url?.openConnection() <span class="keyword">as</span> HttpURLConnection</span><br><span class="line">    connection?.requestMethod = <span class="string">&quot;GET&quot;</span></span><br><span class="line">    inputStream = connection?.inputStream</span><br><span class="line">    reader = inputStream?.bufferedReader()</span><br><span class="line">    response = StringBuilder()</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="keyword">val</span> line = reader?.readLine() ?: <span class="keyword">break</span></span><br><span class="line">        response?.append(line)</span><br><span class="line">    &#125;</span><br><span class="line">    reader?.close()</span><br><span class="line">    connection?.disconnect()</span><br><span class="line">    responseJson = JSONObject(response.toString())</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">buildConnectFailDialog</span><span class="params">(context: <span class="type">Context</span>?)</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (connectFailDialogBuilder == <span class="literal">null</span>) &#123;</span><br><span class="line">        connectFailDialogBuilder = AlertDialog.Builder(context!!)</span><br><span class="line">        connectFailDialogBuilder?.setTitle(<span class="string">&quot;提示信息&quot;</span>)</span><br><span class="line">        connectFailDialogBuilder?.setMessage(<span class="string">&quot;连接服务器失败&quot;</span>)</span><br><span class="line">        connectFailDialogBuilder?.setPositiveButton(<span class="string">&quot;确定&quot;</span>) &#123; dialog, id -&gt; &#123;&#125; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>There is a problem — in a separate util class how can util get the application’s context or activity ?</p>
<p>Solution:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Just pass them as parameters !</span><br></pre></td></tr></table></figure>

<p>Context, activity they are not something special</p>
<p>In program, they are can be represent just with memory address</p>
<p>So pass their address as parameter is the way to access them !</p>
]]></content>
      <categories>
        <category>Android</category>
        <category>HTTP</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Kotlin</tag>
        <tag>HTTP</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Navigation Tutorial</title>
    <url>/2021/01/06/Android-Navigation-Tutorial/</url>
    <content><![CDATA[<p>1.New A Navigation</p>
<p>“res” – “New” – “Android Resource File” – “Resource Type” – “Navigation”</p>
<p>Give your navigation a name, then click “OK”</p>
<p>Then you will got a xml file of your navigation</p>
<p>2.Add A NavHost To Your Activity</p>
<p>Go to the xml file of your activity</p>
<p>Use “Design” model </p>
<p>“Palette” – “Container” – “NavHostFragment”</p>
<p>Drag it to the phone</p>
<p>And choose a navigation xml file for the container</p>
<p>Then we finish the basic of navigation</p>
<p>3.Add Fragments To Navigation</p>
<p>Go to the xml file of your navigation </p>
<p>Still use “Design” model</p>
<p>Then “New Destination”</p>
<p>4.Use Navigation</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> navHostFragment =supportFragmentManager?.findFragmentById(R.id.fragment) <span class="keyword">as</span> NavHostFragment</span><br><span class="line"><span class="keyword">val</span> navController = navHostFragment?.navController</span><br><span class="line">navController.navigate(R.id.hello)</span><br></pre></td></tr></table></figure>

<p>Then you will be navigate to a fragment named “hello”</p>
<hr>
<p>supportFragmentManager</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">the FragmentManager for interacting with fragments associated with this activity.</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Android</category>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Tutorial</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Studio SDK config</title>
    <url>/2021/03/08/Android-Studio-SDK-config/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Emulator: emulator: ERROR: Unknown AVD name [Pixel_2_API_29], use -list-avds</span><br></pre></td></tr></table></figure>



<p>出现这种情况一般是.android文件不在ANDROID_SDK_HOME目录下<br>只需要将系统默认的存放文件的地方：C:/用户/***/.android 复制到你ANDROID_SDK_HOME所指目录下即可</p>
]]></content>
  </entry>
  <entry>
    <title>Android Swip Refresh</title>
    <url>/2021/01/06/Android-Swip-Refresh/</url>
    <content><![CDATA[<p>XML</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">androidx.swiperefreshlayout.widget.SwipeRefreshLayout</span></span></span><br><span class="line"><span class="tag">	<span class="attr">android:id</span>=<span class="string">&quot;@+id/location_swipe_for_student&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.swiperefreshlayout.widget.SwipeRefreshLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>Config</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">configSwipeRefresh</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> swipe =</span><br><span class="line">        view?.findViewById&lt;SwipeRefreshLayout&gt;(R.id.location_swipe_for_student)</span><br><span class="line">    swipe?.setOnRefreshListener &#123;</span><br><span class="line">        MapUtil.mLocationClient?.startLocation()</span><br><span class="line">        refreshActivity()</span><br><span class="line">        swipe.isRefreshing = <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Android</category>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Tutorial</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Thread</title>
    <url>/2021/01/04/Android-Thread/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Android px dp sp</title>
    <url>/2021/01/04/Android-px-dp-sp/</url>
    <content><![CDATA[<p>px is for the general unit</p>
<p>Note !</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">devices only know px</span><br><span class="line">dp and sp is just use for display the appropriate views on different screen</span><br></pre></td></tr></table></figure>



<p>dp is usually use for layout</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">density-independent pixels (dip,dp)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">px &#x3D; dp * (dpi &#x2F; 160)</span><br></pre></td></tr></table></figure>

<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">dip2px</span><span class="params">(context: <span class="type">Context</span>?, dpValue: <span class="type">Float</span>)</span></span>: <span class="built_in">Int</span> &#123;</span><br><span class="line">    <span class="keyword">val</span> scale = context?.resources?.displayMetrics?.density</span><br><span class="line">    <span class="keyword">return</span> (dpValue * scale!! + <span class="number">0.5f</span>).toInt()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Note </p>
<p>You can pass context as a parameter</p>
<blockquote>
<p>dpi: Dots Per Inch</p>
</blockquote>
<p>sp is usually use for text size</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scale-independent pixels</span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>Android</category>
        <category>Layout</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Version</title>
    <url>/2021/01/04/Android-Version/</url>
    <content><![CDATA[<p>The API version and Android version are different</p>
<p>API version is Android SDK version</p>
<p>It’s usually for developer</p>
<p>Developer need Android SDK when making App</p>
<p>And different SDK version will have usage, developer need to check the relative document</p>
<p>And Android version is usually for user</p>
<p>Like we can check our Android version of our mobile phone</p>
<hr>
<p>Generally, Android version is associated with SDK version</p>
<p>example:</p>
<table>
<thead>
<tr>
<th>API Level</th>
<th>Android Version</th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>30</td>
<td>11</td>
<td></td>
<td></td>
</tr>
<tr>
<td>29</td>
<td>10</td>
<td></td>
<td></td>
</tr>
<tr>
<td>28</td>
<td>9</td>
<td></td>
<td></td>
</tr>
<tr>
<td>27</td>
<td>8.1</td>
<td></td>
<td></td>
</tr>
<tr>
<td>26</td>
<td>8.0</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<p>If you use lower version of API to write an App</p>
<p>It will have better compatibility</p>
<p>But you can’t use the new feature of the SDK</p>
<p>It depends on you</p>
<p>Haha</p>
]]></content>
      <categories>
        <category>Android</category>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Tutorial</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Tool Bar (On Top)</title>
    <url>/2021/01/06/Android-Tool-Bar-On-Top/</url>
    <content><![CDATA[<p>XML</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Toolbar</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/tool_bar_for_student_signState&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:navigationIcon</span>=<span class="string">&quot;@drawable/back&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;@color/xui_config_color_titlebar&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:titleTextColor</span>=<span class="string">&quot;@color/white&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;打卡&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;@color/white&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;20sp&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Toolbar</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>ConfigBackButton</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">configBackButton</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> backBtn = view?.findViewById&lt;Toolbar&gt;(R.id.tool_bar_for_student_signState)</span><br><span class="line">    backBtn?.setNavigationOnClickListener &#123;</span><br><span class="line">        SignDataForStudent.DISPLAY_TYPE = SignDataForStudent.DISPLAY_SIGN_FIRST</span><br><span class="line">        StudentActivity.tabSegment?.selectTab(<span class="number">1</span>)</span><br><span class="line">        NavUtil.navController?.popBackStack()</span><br><span class="line">        NavUtil.navController?.navigate(R.id.signDataForStudent)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Android</category>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Tutorial</tag>
      </tags>
  </entry>
  <entry>
    <title>Blockchain Digital Signature</title>
    <url>/2021/03/20/Blockchain-Digital-Signature/</url>
    <content><![CDATA[<p>Store key</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"><span class="keyword">from</span> Crypto.Hash <span class="keyword">import</span> SHA256, SHA, SHA512</span><br><span class="line"><span class="keyword">from</span> Crypto.Signature <span class="keyword">import</span> PKCS1_PSS</span><br><span class="line">key = RSA.generate(<span class="number">2048</span>)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;mykey.pem&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(key.exportKey(<span class="string">&#x27;PEM&#x27;</span>))</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;mykey.pub&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(key.publickey().exportKey(<span class="string">&#x27;PEM&#x27;</span>))</span><br></pre></td></tr></table></figure>



<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"><span class="keyword">from</span> Crypto.Hash <span class="keyword">import</span> SHA256, SHA, SHA512</span><br><span class="line"><span class="keyword">from</span> Crypto.Signature <span class="keyword">import</span> PKCS1_PSS</span><br><span class="line"></span><br><span class="line"><span class="comment"># Now is Sender&#x27;s turn</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;message.txt&#x27;</span>) <span class="keyword">as</span> f:  <span class="comment"># get message file</span></span><br><span class="line">    message = f.read().encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;mykey.pem&#x27;</span>) <span class="keyword">as</span> f:  <span class="comment"># get private key</span></span><br><span class="line">    key = RSA.importKey(f.read())</span><br><span class="line">h = SHA256.new()</span><br><span class="line">h.update(message)  <span class="comment"># hash the message</span></span><br><span class="line">sgn = PKCS1_PSS.new(key)  <span class="comment"># RSA digital signature protocol</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;mesg.sgn&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:  <span class="comment"># new a signed message file</span></span><br><span class="line">    f.write(sgn.sign(h))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Now is the Receiver&#x27;s turn</span></span><br><span class="line">fname = <span class="string">&#x27;message.txt&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(fname) <span class="keyword">as</span> f:</span><br><span class="line">    message = f.read().encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">h = SHA256.new()</span><br><span class="line">h.update(message)  <span class="comment"># hash message with the same method as the sender</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;mesg.sgn&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    signature = f.read()</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;mykey.pub&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    key = RSA.importKey(f.read())</span><br><span class="line">vfy = PKCS1_PSS.new(key)  <span class="comment"># verify the signed file whether valid</span></span><br><span class="line"><span class="keyword">if</span> vfy.verify(h, signature):</span><br><span class="line">    print(<span class="string">&#x27;signture matches.&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&#x27;signature problem.&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>







]]></content>
  </entry>
  <entry>
    <title>Blockchain Example In JS</title>
    <url>/2021/03/11/Blockchain-Example-In-JS/</url>
    <content><![CDATA[<h2 id="Preparation"><a href="#Preparation" class="headerlink" title="Preparation"></a>Preparation</h2><h4 id="npm"><a href="#npm" class="headerlink" title="npm"></a>npm</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Open source developers from every continent use npm to share and borrow packages</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">It&#39;s like &quot;pip&quot; in Python, which is use for installing moudle</span><br></pre></td></tr></table></figure>

<h4 id="node-js"><a href="#node-js" class="headerlink" title="node.js"></a>node.js</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">As an asynchronous event-driven JavaScript runtime</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Use for running js program </span><br></pre></td></tr></table></figure>

<p><a href="https://www.runoob.com/nodejs/nodejs-install-setup.html">Tutorial of installing node.js </a> （Support Windows、Linux、Mac, but  recommend Windows ）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">由于新版的nodejs已经集成了npm，所以npm也一并安装好了</span><br></pre></td></tr></table></figure>

<p><a href="https://www.runoob.com/nodejs/nodejs-npm.html">Config npm</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install npm -g</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Note:</p>
<p>This mirror is use for us to download modules with high speed</p>
</blockquote>
<h4 id="Necessary-Module"><a href="#Necessary-Module" class="headerlink" title="Necessary Module"></a>Necessary Module</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cnpm install --save crypto-js</span><br></pre></td></tr></table></figure>

<p>Recommended Editor – <a href="https://code.visualstudio.com/">Vscode</a>（Support Windows、Linux、Mac）</p>
<hr>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><p>Blockchain Valid (check whether the blockchain is valid)</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">SHA256 = <span class="built_in">require</span>(<span class="string">&#x27;crypto-js/sha256&#x27;</span>)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Block</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">index,timestamp,data,previousHash=<span class="string">&#x27;&#x27;</span></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.index = index;</span><br><span class="line">        <span class="built_in">this</span>.timestamp = timestamp;</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">        <span class="built_in">this</span>.previousHash = previousHash;</span><br><span class="line">        <span class="built_in">this</span>.hash = <span class="built_in">this</span>.caculateHash();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">caculateHash</span>(<span class="params"></span>)</span>&#123;  <span class="comment">// hash all elements in a block</span></span><br><span class="line">        <span class="keyword">return</span> SHA256(<span class="built_in">this</span>.index+<span class="built_in">this</span>.previousHash+<span class="built_in">this</span>.timestamp+<span class="built_in">JSON</span>.stringify(<span class="built_in">this</span>.data)).toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Blockchain</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.chain = [<span class="built_in">this</span>.createGenesisBlock()];  <span class="comment">// the first block called &quot;Genesis&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">createGenesisBlock</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Block(<span class="number">0</span>,<span class="string">&quot;01/01/2020&quot;</span>,<span class="string">&quot;Genesis block&quot;</span>,<span class="string">&quot;0&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">getLatesBlock</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.chain[<span class="built_in">this</span>.chain.length-<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">addBlock</span>(<span class="params">newBlock</span>)</span>&#123; </span><br><span class="line">        newBlock.previousHash = <span class="built_in">this</span>.getLatesBlock().hash;</span><br><span class="line">        newBlock.hash = newBlock.caculateHash();</span><br><span class="line">        <span class="built_in">this</span>.chain.push(newBlock);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">isChainValid</span>(<span class="params"></span>)</span>&#123;  	</span><br><span class="line">        <span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">let</span> i=<span class="number">1</span>; i&lt;<span class="built_in">this</span>.chain.length; i++</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">const</span> currentBlock = <span class="built_in">this</span>.chain[i];</span><br><span class="line">            <span class="keyword">const</span> previousBlock = <span class="built_in">this</span>.chain[i-<span class="number">1</span>];</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (currentBlock.caculateHash() !== currentBlock.hash)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;		<span class="comment">// check current block</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (currentBlock.previousHash !== previousBlock.hash)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;      <span class="comment">// check previous block along the chain</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> jtcoin = <span class="keyword">new</span> Blockchain();</span><br><span class="line">jtcoin.addBlock(<span class="keyword">new</span> Block(<span class="number">1</span>,<span class="string">&quot;01/02/2020&quot;</span>,&#123;<span class="attr">amount</span>:<span class="number">4</span>&#125;));</span><br><span class="line">jtcoin.addBlock(<span class="keyword">new</span> Block(<span class="number">2</span>,<span class="string">&quot;01/03/2020&quot;</span>,&#123;<span class="attr">amount</span>:<span class="number">10</span>&#125;));</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(jtcoin,<span class="literal">null</span>,<span class="number">4</span>));</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;Is the chain valid? &#x27;</span> + jtcoin.isChainValid());</span><br><span class="line"></span><br><span class="line">jtcoin.chain[<span class="number">1</span>].data = &#123;<span class="attr">amount</span>:<span class="number">5</span>&#125;;</span><br><span class="line">jtcoin.chain[<span class="number">1</span>].hash = jtcoin.chain[<span class="number">1</span>].caculateHash();</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;tamper&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;Is the chain valid? &#x27;</span> + jtcoin.isChainValid());</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(jtcoin,<span class="literal">null</span>,<span class="number">4</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>proof-of-work (It can also be called “mine”)</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">SHA256 = <span class="built_in">require</span>(<span class="string">&#x27;crypto-js/sha256&#x27;</span>)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Block</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">index,timestamp,data,previousHash=<span class="string">&#x27;&#x27;</span></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.index = index;</span><br><span class="line">        <span class="built_in">this</span>.timestamp = timestamp;</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">        <span class="built_in">this</span>.previousHash = previousHash;</span><br><span class="line">        <span class="built_in">this</span>.hash = <span class="built_in">this</span>.caculateHash();</span><br><span class="line">        <span class="built_in">this</span>.nonce = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">caculateHash</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> SHA256(<span class="built_in">this</span>.index+<span class="built_in">this</span>.previousHash+<span class="built_in">this</span>.timestamp+<span class="built_in">JSON</span>.stringify(<span class="built_in">this</span>.data)+<span class="built_in">this</span>.nonce).toString();</span><br><span class="line">        <span class="comment">// you need to update this hash method,</span></span><br><span class="line">        <span class="comment">// because you change the content of block</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">mineBlock</span>(<span class="params">difficulty</span>)</span>&#123;  <span class="comment">// proof of work</span></span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">this</span>.hash.substring(<span class="number">0</span>,difficulty) !== <span class="built_in">Array</span>(difficulty+<span class="number">1</span>).join(<span class="string">&#x27;0&#x27;</span>))&#123;</span><br><span class="line">            <span class="built_in">this</span>.nonce++;   <span class="comment">// try to get correct hash by changing this variable  </span></span><br><span class="line">            <span class="built_in">this</span>.hash = <span class="built_in">this</span>.caculateHash();  </span><br><span class="line">            <span class="comment">// &quot;correct hash&quot; is the correct amount &#x27;0&#x27; in the head of the hash value </span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;Block mined hash:&quot;</span> + <span class="built_in">this</span>.hash);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Blockchain</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.chain = [<span class="built_in">this</span>.createGenesisBlock()];</span><br><span class="line">        <span class="built_in">this</span>.difficulty = <span class="number">5</span> </span><br><span class="line">        <span class="comment">// which means five &#x27;0&#x27; in the head of the hash</span></span><br><span class="line">        <span class="comment">// when &#x27;difficulty&#x27; get bigger,</span></span><br><span class="line">        <span class="comment">// miner will spent more time to mine</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">createGenesisBlock</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Block(<span class="number">0</span>,<span class="string">&quot;01/01/2020&quot;</span>,<span class="string">&quot;Genesis block&quot;</span>,<span class="string">&quot;0&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">getLatesBlock</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.chain[<span class="built_in">this</span>.chain.length-<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">addBlock</span>(<span class="params">newBlock</span>)</span>&#123;</span><br><span class="line">        newBlock.previousHash = <span class="built_in">this</span>.getLatesBlock().hash;</span><br><span class="line">        newBlock.mineBlock(<span class="built_in">this</span>.difficulty);</span><br><span class="line">        <span class="built_in">this</span>.chain.push(newBlock);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">isChainValid</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">let</span> i=<span class="number">1</span>; i&lt;<span class="built_in">this</span>.chain.length; i++</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">const</span> currentBlock = <span class="built_in">this</span>.chain[i]; </span><br><span class="line">            <span class="keyword">const</span> previousBlock = <span class="built_in">this</span>.chain[i-<span class="number">1</span>];</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (currentBlock.caculateHash() !== currentBlock.hash)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (currentBlock.previousHash !== previousBlock.hash)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> jtcoin = <span class="keyword">new</span> Blockchain();</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;Mining...&quot;</span>);</span><br><span class="line">jtcoin.addBlock(<span class="keyword">new</span> Block(<span class="number">1</span>,<span class="string">&quot;01/02/2020&quot;</span>,&#123;<span class="attr">amount</span>:<span class="number">4</span>&#125;));</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;Mining...&quot;</span>);</span><br><span class="line">jtcoin.addBlock(<span class="keyword">new</span> Block(<span class="number">2</span>,<span class="string">&quot;01/03/2020&quot;</span>,&#123;<span class="attr">amount</span>:<span class="number">10</span>&#125;));</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Balance (how many coins in you account)</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">SHA256 = <span class="built_in">require</span>(<span class="string">&#x27;crypto-js/sha256&#x27;</span>)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Transaction</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">fromAddress,toAddress,amount</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.fromAddress = fromAddress;</span><br><span class="line">        <span class="built_in">this</span>.toAddress = toAddress;</span><br><span class="line">        <span class="built_in">this</span>.amount = amount;  <span class="comment">// the amount of money</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Block</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">timestamp,transactions,previousHash=<span class="string">&#x27;&#x27;</span></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.timestamp = timestamp;</span><br><span class="line">        <span class="built_in">this</span>.transactions = transactions;</span><br><span class="line">        <span class="built_in">this</span>.previousHash = previousHash;</span><br><span class="line">        <span class="built_in">this</span>.hash = <span class="built_in">this</span>.caculateHash();</span><br><span class="line">        <span class="built_in">this</span>.nonce = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">caculateHash</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> SHA256(<span class="built_in">this</span>.previousHash+<span class="built_in">this</span>.timestamp+<span class="built_in">JSON</span>.stringify(<span class="built_in">this</span>.transactions)+<span class="built_in">this</span>.nonce).toString(); </span><br><span class="line">        <span class="comment">// you need to update this hash method,</span></span><br><span class="line">        <span class="comment">// because you change the content of block</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">mineBlock</span>(<span class="params">difficulty</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">this</span>.hash.substring(<span class="number">0</span>,difficulty) !== <span class="built_in">Array</span>(difficulty+<span class="number">1</span>).join(<span class="string">&#x27;0&#x27;</span>))&#123;</span><br><span class="line">            <span class="built_in">this</span>.nonce++;</span><br><span class="line">            <span class="built_in">this</span>.hash = <span class="built_in">this</span>.caculateHash();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;Block mined hash:&quot;</span> + <span class="built_in">this</span>.hash);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Blockchain</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.chain = [<span class="built_in">this</span>.createGenesisBlock()];</span><br><span class="line">        <span class="built_in">this</span>.difficulty = <span class="number">2</span>;</span><br><span class="line">        <span class="built_in">this</span>.pendingTransactions = [];</span><br><span class="line">        <span class="built_in">this</span>.mineReward = <span class="number">100</span>; <span class="comment">// reward for miner</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">createGenesisBlock</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Block(<span class="string">&quot;01/01/2020&quot;</span>,<span class="string">&quot;Genesis block&quot;</span>,<span class="string">&quot;0&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">getLatesBlock</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.chain[<span class="built_in">this</span>.chain.length-<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">addBlock</span>(<span class="params">newBlock</span>)</span>&#123;</span><br><span class="line">        newBlock.previousHash = <span class="built_in">this</span>.getLatesBlock().hash;</span><br><span class="line">        newBlock.mineBlock(<span class="built_in">this</span>.difficulty);</span><br><span class="line">        <span class="built_in">this</span>.chain.push(newBlock);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">isChainValid</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">let</span> i=<span class="number">1</span>; i&lt;<span class="built_in">this</span>.chain.length; i++</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">const</span> currentBlock = <span class="built_in">this</span>.chain[i];</span><br><span class="line">            <span class="keyword">const</span> previousBlock = <span class="built_in">this</span>.chain[i-<span class="number">1</span>];</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (currentBlock.caculateHash() !== currentBlock.hash)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (currentBlock.previousHash !== previousBlock.hash)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">minePendingTransactions</span>(<span class="params">mineRewardAddress</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">let</span> block = <span class="keyword">new</span> Block(<span class="keyword">new</span> <span class="built_in">Date</span>(), <span class="built_in">this</span>.pendingTransactions);</span><br><span class="line">        block.mineBlock(<span class="built_in">this</span>.difficulty);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;Block successfully minded!&#x27;</span>);</span><br><span class="line">        <span class="built_in">this</span>.chain.push(block);</span><br><span class="line">        <span class="built_in">this</span>.pendingTransactions = [<span class="keyword">new</span> Transaction(<span class="literal">null</span>,mineRewardAddress,<span class="built_in">this</span>.mineReward)];</span><br><span class="line">        <span class="comment">// send mineReward to miner</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">createTransaction</span>(<span class="params">transaction</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.pendingTransactions.push(transaction);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">getBalanceOfAddress</span>(<span class="params">address</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">let</span> balance = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">const</span> block <span class="keyword">of</span> <span class="built_in">this</span>.chain</span>)</span>&#123;  </span><br><span class="line">            <span class="comment">// balance should be caculated everytime from the beginning of the chain</span></span><br><span class="line">            <span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">const</span> trans <span class="keyword">of</span> block.transactions</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (trans.fromAddress == address)&#123;</span><br><span class="line">                    balance -= trans.amount;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="function"><span class="title">if</span>(<span class="params">trans.toAddress == address</span>)</span>&#123;</span><br><span class="line">                    balance += trans.amount;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> balance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> jtcoin = <span class="keyword">new</span> Blockchain();</span><br><span class="line">jtcoin.createTransaction(<span class="keyword">new</span> Transaction(<span class="string">&#x27;address1&#x27;</span>,<span class="string">&#x27;address2&#x27;</span>,<span class="number">100</span>));</span><br><span class="line">jtcoin.createTransaction(<span class="keyword">new</span> Transaction(<span class="string">&#x27;address2&#x27;</span>,<span class="string">&#x27;address1&#x27;</span>,<span class="number">50</span>));</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;\n Starting the miner...&#x27;</span>);</span><br><span class="line"></span><br><span class="line">jtcoin.minePendingTransactions(<span class="string">&#x27;jtaddress&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;jtaddress balance is &#x27;</span> + jtcoin.getBalanceOfAddress(<span class="string">&#x27;jtaddress&#x27;</span>));</span><br><span class="line"></span><br><span class="line">jtcoin.minePendingTransactions(<span class="string">&#x27;jtaddress&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;jtaddress new balance is &#x27;</span> + jtcoin.getBalanceOfAddress(<span class="string">&#x27;jtaddress&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;address1 balance is &#x27;</span> + jtcoin.getBalanceOfAddress(<span class="string">&#x27;address2&#x27;</span>));</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Tutorial</category>
        <category>Blockchain</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>Blockchain</tag>
      </tags>
  </entry>
  <entry>
    <title>Blockchain In Python</title>
    <url>/2021/03/20/Blockchain-In-Python/</url>
    <content><![CDATA[<p>Hash a object</p>
<p>Wrong example</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha256</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">t</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">print(<span class="built_in">len</span>(sha256(<span class="built_in">str</span>(t()).encode(<span class="string">&#x27;utf-8&#x27;</span>)).hexdigest()))  <span class="comment"># wrong!</span></span><br><span class="line">													 <span class="comment"># str(t()) is just a address</span></span><br></pre></td></tr></table></figure>

<p>Correct example</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha256  <span class="comment"># need string</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">t</span>():</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span>  </span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">print(sha256(<span class="built_in">str</span>(t().__hash__()).encode(<span class="string">&#x27;utf-8&#x27;</span>)).hexdigest()) <span class="comment"># display in hex</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">output:   &#x2F;&#x2F; string length &#x3D; 64</span><br><span class="line">58c32e31cc29e9164710dc7571d83200d5f6ff044170e4b299ed8096b4de529e  </span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>Blockchain Doubt</title>
    <url>/2021/03/20/Blockchain-Doubt/</url>
    <content><![CDATA[<p>What if received two new, different block at the same time</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Nodes always consider the longest chain to be the correct one and will keep working on</span><br><span class="line">extending it.</span><br><span class="line"></span><br><span class="line">If two nodes broadcast different versions of the next block simultaneously, some</span><br><span class="line">nodes may receive one or the other first. In that case, they work on the first one they received,but save the other branch in case it becomes longer.</span><br><span class="line"></span><br><span class="line">The tie will be broken when the next proof-of-work is found and one branch becomes longer; the nodes that were working on the other</span><br><span class="line">branch will then switch to the longer one.</span><br></pre></td></tr></table></figure>

<p>When to mine</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">After validating transactions, a bitcoin node will add them to the memory pool, or transaction pool, where transactions await until they can be included (mined) into a block.</span><br></pre></td></tr></table></figure>

<p>The connection between transaction, block and miner</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">New transactions are broadcast to all nodes</span><br><span class="line">Each node collects new transactions into a block.</span><br><span class="line">Each node works on finding a difficult proof-of-work for its block.</span><br><span class="line">When a node finds a proof-of-work, it broadcasts the block to all nodes.</span><br><span class="line">Nodes accept the block only if all transactions in it are valid and not already spent.</span><br><span class="line">Nodes express their acceptance of the block by working on creating the next block in the chain, using the hash of the accepted block as the previous hash.</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Public distributed ledger: A distributed ledger is a record of all transactions maintained in the blockchain network across the globe. In the network, the validation of transactions is done by bitcoin users.</span><br></pre></td></tr></table></figure>

<p>Digital key</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The digital keys are not actually stored in the network, but are instead created and stored by users in a file, or simple database, called a wallet. </span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The digital keys in a user’s wallet are completely independent of the bitcoin protocol and can be generated and managed by the user’s wallet software without reference to the blockchain or access to the internet. </span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">That&#39;s true, beacuse the validation is decryption with public key string</span><br></pre></td></tr></table></figure>



<p>What is public key and private key</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">help understand:</span><br><span class="line"></span><br><span class="line">Think of the public key as similar to a bank account number and the private key as similar to the secret PIN, or signature on a check, that provides control over the account. </span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Relation between private key, public key and bitcoin address:</span><br><span class="line"></span><br><span class="line">From the private key, we use elliptic curve multiplication, a one-way cryptographic function, to generate a public key (K). From the public key (K), we use a one-way cryptographic hash function to generate a bitcoin address (A).</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">beneficiaries:</span><br><span class="line"></span><br><span class="line">However, not all bitcoin addresses represent public keys; they can also represent other beneficiaries such as scripts, as we will see later in this chapter. </span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">key store:</span><br><span class="line"></span><br><span class="line">In most wallet implementations, the private and public keys are stored together as a key pair for convenience. However, the public key can be calculated from the private key, so storing only the private key is also possible.</span><br></pre></td></tr></table></figure>



<p>How to make public key and private key</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">private key:</span><br><span class="line"></span><br><span class="line">The bitcoin private key is just a number. You can pick your private keys randomly using just a coin, pencil, and paper: toss a coin 256 times and you have the binary digits of a random private key you can use in a bitcoin wallet. The public key can then be generated from the private key.</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The public key is calculated from the private key using elliptic curve multiplication</span><br><span class="line"></span><br><span class="line">Elliptic curve multiplication is a type of function that cryptographers </span><br><span class="line">call a &quot;one-way&quot; function: it is easy to do in one direction and </span><br><span class="line">impossible to do in the reverse direction</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<p>Then how verify signature with only public key?</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>





<p>What is “beneficiaries”</p>
<p><a href="https://www.novixys.com/blog/python-crypto-basics-building-blockchain/">Digital Signature Tutorial</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Digital Signature:</span><br><span class="line">A digital signature is a method of cryptographically assuring a receiver (Bob) that the message is from a specified party (Alice). </span><br><span class="line"></span><br><span class="line">Alice prepares a data buffer, computes a secure checksum, encrypts the checksum using her private key, and sends the data buffer and the encrypted checksum to Bob. </span><br><span class="line"></span><br><span class="line">Bob unencrypts the checksum using Alice’s public key, computes the checksum of the data buffer with the same algorithm as used by Alice and compares the two checksums.</span><br><span class="line"></span><br><span class="line">If they match, the data buffer was prepared by Alice and has not been modified in-transit.</span><br></pre></td></tr></table></figure>





<p>Blockchain is visual, is it unsecured?</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The visible information is just public key, so don&#39;t worry</span><br></pre></td></tr></table></figure>



<p>Hack boardcast?</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;boardcast&quot; is a action</span><br></pre></td></tr></table></figure>



<p>How to get real-time balance</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">double spend</span><br></pre></td></tr></table></figure>



<p>What is timestamp use for?</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The timestamp proves that the data must have existed at the</span><br><span class="line">time, obviously, in order to get into the hash. Each timestamp includes the previous timestamp in</span><br><span class="line">its hash, forming a chain, with each additional timestamp reinforcing the ones before it.</span><br><span class="line"> -- from &quot;Bitcoin: A Peer-to-Peer Electronic Cash System&quot;</span><br></pre></td></tr></table></figure>

<p>What if hack p2p server</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">useless, beacuse blockchain use public key and private key, not real ip address</span><br></pre></td></tr></table></figure>



<p>When valid transaction, do we need send so many requests?</p>
<p>save ip address in a table</p>
<p>a transaction a block?</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Good miners accept all transactions with the standard 0.0001 BTC fee (which is mainly a spam prevention measure). Bad miners are selfish and avoid including transactions to decrease their propogation time. For example, look at this block to see an example where a miner didn&#39;t include any transactions except for their own reward transaction.</span><br></pre></td></tr></table></figure>

<p><a href="https://www.blockchain.com/explorer">Trade Info</a></p>
<p>Language</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">点对点网络的实现和并发处理才是开发的难点，所以对于那些网络编程能力强，对并发处理简单的语言，人们就特别偏爱。也因此，Nodejs开发区块链应用，逐渐变得更加流行，Go语言也在逐渐兴起。</span><br></pre></td></tr></table></figure>



<p>Why say</p>
<blockquote>
<p>Wallets are really keychains containing pairs of private/public keys</p>
</blockquote>
<h4 id="Nondeterministic-Random-Wallets"><a href="#Nondeterministic-Random-Wallets" class="headerlink" title="Nondeterministic (Random) Wallets"></a>Nondeterministic (Random) Wallets</h4><p>from:<a href="https://github.com/bitcoinbook/bitcoinbook/blob/develop/ch05.asciidoc">https://github.com/bitcoinbook/bitcoinbook/blob/develop/ch05.asciidoc</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The disadvantage of random keys is that if you generate many of them you must keep copies of all of them, meaning that the wallet must be backed up frequently.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">A Type-0 nondeterministic wallet is a poor choice of wallet, especially if you want to avoid address reuse because it means managing many keys</span><br></pre></td></tr></table></figure>

<h4 id="HD-Wallets-BIP-32-BIP-44"><a href="#HD-Wallets-BIP-32-BIP-44" class="headerlink" title="HD Wallets (BIP-32/BIP-44)"></a>HD Wallets (BIP-32/BIP-44)</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HD wallets contain keys derived in a tree structure, such that a parent key can derive a sequence of children keys, each of which can derive a sequence of grandchildren keys, and so on, to an infinite depth. </span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/20/Blockchain-Doubt/Blog\source_posts\Blockchain-Doubt\Snipaste_2021-03-21_16-15-50.png"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">The second advantage of HD wallets is that users can create a sequence of public keys without having access to the corresponding private keys.</span><br><span class="line">this allows HD wallets to be used on an insecure server</span><br><span class="line">server doesn’t have the private keys that can spend the funds.</span><br></pre></td></tr></table></figure>

<p>WTF???</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">you may notice a few things about this transaction, mostly the things that are missing! </span><br><span class="line">Where is Alice’s address? Where is Bob’s address? </span><br><span class="line">Where is the 0.1 input &quot;sent&quot; by Alice? </span><br><span class="line"></span><br><span class="line">In bitcoin, there are no coins, no senders, no recipients, no balances, no accounts, and no addresses. </span><br><span class="line"></span><br><span class="line">All those things are constructed at a higher level for the benefit of the user, to make things easier to understand.</span><br></pre></td></tr></table></figure>



<h2 id="What-Is-UTXO"><a href="#What-Is-UTXO" class="headerlink" title="What Is UTXO?"></a>What Is UTXO?</h2><p>The term UTXO refers to the amount of digital <a href="https://www.investopedia.com/terms/c/currency.asp">currency</a> someone has left remaining after executing a <a href="https://www.investopedia.com/terms/c/cryptocurrency.asp">cryptocurrency</a> transaction such as <a href="https://www.investopedia.com/terms/b/bitcoin.asp">bitcoin</a>. The letters stand for unspent transaction output.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">When we say that a user’s wallet has &quot;received&quot; bitcoin, what we mean is that the wallet has detected an UTXO that can be spent with one of the keys controlled by that wallet. Thus, a user’s bitcoin &quot;balance&quot; is the sum of all UTXO that user’s wallet can spend and which may be scattered among hundreds of transactions and hundreds of blocks.</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Conclusion, &quot;balance&quot; should be calculate from the blockchain</span><br></pre></td></tr></table></figure>

<p>Will it hard to calculate the balance?</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Most wallets maintain a database or use a database service to store a quick reference set of all the UTXO they can spend with the keys they control.</span><br></pre></td></tr></table></figure>

<p>Understand “Soft Fork” after the “Consensus”</p>
<p>Fee</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yes. Transaction fees cover the mining network fees and the Blockchain infrastructure necessary to ensure fast and reliable transaction confirmation times. Miners prioritize transactions based on fees, so the higher the fee, the greater chance your transaction has of being completed quickly. A fee that’s too low runs the risk of never being confirmed. Your Blockchain wallet will recommend a fee for you to use based on the current network conditions and the size of your transaction. You can choose to set your own fee for bitcoin, but we only recommend that for more advanced users.</span><br></pre></td></tr></table></figure>



<p>What distributed ledger</p>
<p>amount of bitcoin </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">approximately the year 2140, when all bitcoin (20.99999998 million) will have been issued. After 2140, no new bitcoin will be issued.</span><br></pre></td></tr></table></figure>

<p>what is public ledger</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bitcoin has no central authority, yet somehow every full node has a complete copy of a public ledger that it can trust as the authoritative record. </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>what is “script “in blockchain</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<p>Mining pool</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Their mining hardware remains connected to the pool server while mining, synchronizing their efforts with the other miners. Thus, the pool miners share the effort to mine a block and then share in the rewards.</span><br><span class="line"></span><br><span class="line">Successful blocks pay the reward to a pool bitcoin address, rather than individual miners. The pool server will periodically make payments to the miners&#39; bitcoin addresses</span><br></pre></td></tr></table></figure>

<p>defect of pool server</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">If the pool server is down or is slowed by a denial-of-service attack, the pool miners cannot mine. In 2011, to resolve these issues of centralization, a new pool mining method was proposed and implemented: P2Pool, a peer-to-peer mining pool without a central operator.</span><br></pre></td></tr></table></figure>

<p>p2Pool</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">implementing a parallel blockchain-like system called a share chain</span><br><span class="line"></span><br><span class="line">the share chain allows all pool miners to keep track of all shares using a decentralized consensus mechanism like bitcoin’s blockchain consensus mechanism.</span><br><span class="line"></span><br><span class="line">undetermined...</span><br></pre></td></tr></table></figure>

<p>what is Consensus Attacks</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>



<p>solo mining</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Or he might not find a block for 5 years and suffer a big financial loss. </span><br></pre></td></tr></table></figure>

<p>“block height”</p>
<p>“Bitcoin Core”</p>
<p>“full node”</p>
<p>output</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Transaction outputs consist of two parts:</span><br><span class="line"></span><br><span class="line">An amount of bitcoin, denominated in satoshis, the smallest bitcoin unit</span><br><span class="line"></span><br><span class="line">A cryptographic puzzle that determines the conditions required to spend the output</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Blockchain Reference</title>
    <url>/2021/03/20/Blockchain-Reference/</url>
    <content><![CDATA[<p><a href="https://github.com/chaozh/awesome-blockchain-cn">Github1</a></p>
<p><a href="https://github.com/LiuBoyu/blockchain">Github2</a></p>
<p>BIP</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">A Bitcoin Improvement Proposal (BIP) is a design document for introducing features or information to Bitcoin. This is the standard way of communicating ideas since Bitcoin has no formal structure.</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Blockchain Transaction</title>
    <url>/2021/03/22/Blockchain-Transaction/</url>
    <content><![CDATA[<p>UTXO(unspend transaction output)</p>
<p>Bitcoin Core decoded</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;version&quot;</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">&quot;locktime&quot;</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;vin&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;txid&quot;</span>: <span class="string">&quot;7957a35fe64f80d234d76d83a2a8f1a0d8149a41d81de548f0a65a8a999f6f18&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;vout&quot;</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">&quot;scriptSig&quot;</span> : <span class="string">&quot;3045022100884d142d86652a3f47ba4746ec719bbfbd040a570b1deccbb6498c75c4ae24cb02204b9f039ff08df09cbe9f6addac960298cad530a863ea8f53982c09db8f6e3813[ALL] 0484ecc0d46f1918b30928fa0e4ed99f16a0fb4fde0735e7ade8416ab9fe423cc5412336376789d172787ec3457eee41c04f4938de5cc17b4a10fa336a8d752adf&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;sequence&quot;</span>: <span class="number">4294967295</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;vout&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;value&quot;</span>: <span class="number">0.01500000</span>,</span><br><span class="line">      <span class="attr">&quot;scriptPubKey&quot;</span>: <span class="string">&quot;OP_DUP OP_HASH160 ab68025513c3dbd2f7b92a94e0581f5d50f654e7 OP_EQUALVERIFY OP_CHECKSIG&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;value&quot;</span>: <span class="number">0.08450000</span>,</span><br><span class="line">      <span class="attr">&quot;scriptPubKey&quot;</span>: <span class="string">&quot;OP_DUP OP_HASH160 7f9b1a7fb68d60c536c2fd8aeaa53a8f3cc025a8 OP_EQUALVERIFY OP_CHECKSIG&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Note</p>
<p>The cryptographic puzzle is also known as a <em>locking script</em>, a <em>witness script</em>, or a scriptPubKey.</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The bitcoin transaction script language, called Script, is a Forth-like reverse-polish notation stack-based execution language. </span><br></pre></td></tr></table></figure>

<p>validate transaction</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bitcoin transaction validation is not based on a static pattern, but instead is achieved through the execution of a scripting language.</span><br></pre></td></tr></table></figure>

<p>Script</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">A limited language prevents the transaction validation mechanism from being used as a vulnerability.</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Therefore, all the information needed to execute a script is contained within the script. A script will predictably execute the same way on any system. </span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bitcoin’s transaction validation engine relies on two types of scripts to validate transactions: a locking script and an unlocking script.</span><br></pre></td></tr></table></figure>



<p>why “UTXO back” </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if you have an UTXO worth 20 bitcoin and want to pay only 1 bitcoin, </span><br><span class="line">your transaction must consume the entire 20-bitcoin UTXO and produce two outputs: </span><br><span class="line">one paying 1 bitcoin to your desired recipient and </span><br><span class="line">another paying 19 bitcoin in change back to your wallet.</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Transaction outputs consist of two parts:</span><br><span class="line"></span><br><span class="line">An amount of bitcoin, denominated in satoshis, the smallest bitcoin unit</span><br><span class="line">A cryptographic puzzle that determines the conditions required to spend the output</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Bootstrap Tutorial</title>
    <url>/2021/05/11/Bootstrap-Tutorial/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-wEmeIV1mKuiNpC+IOBjI7aAzPcEZeedi5yW5f2yOq55WWLwNGmvvx4Um1vskeMj0&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-p34f1UUtsS3wqzfto5wAAmdvj+osOnFyQFpp4Ua3gs/ZVWx6oOypYoCJhGGScy+8&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>Chinese Chess Conclusion</title>
    <url>/2021/01/02/Chinese-Chess-Conclusion/</url>
    <content><![CDATA[<p>1.Alpha-Beta Search</p>
<p>Understand this algorithm in this way</p>
<p>First is a question — how computer know the best move?</p>
<p>Answer: This algorithm will evaluate the score, which represent the chance the computer will win</p>
<p>So the best move is the move that make the highest score</p>
<p>Second question — how computer know to protect it’s King?</p>
<p>Answer: This algorithm will simulate the move for both red and black</p>
<p>and it will simulate at least 2 depth, the algorithm will do the things follow:</p>
<p>evaluate the current score then start to search (simulate)</p>
<p>Simulate① – computer legal move “A”</p>
<p>Keep on simulate② – people legal move “B”</p>
<p>When reach the depth, start to evaluate the score again</p>
<p>If Simulate② make the score reduce,</p>
<p>Which means that the computer’s Simulate① move “A” makes computer be in dangerous</p>
<p>And computer will avoid this kind of move</p>
<p>That’s why computer knows to protect it’s King</p>
<p>If it’s King is killed, it’s score will be super low</p>
<p>Then the algorithm will tell the computer do not move in that way</p>
<p>So that avoid the King be killed</p>
<p>I learn the implement of the algorithm from this <a href="https://github.com/dengl11/ChineseChessAI">github project</a></p>
<hr>
<p>2.Object Oriented is a very idea</p>
<p>It’s the project will be pretty clear when you encapsulate the relative functions in a .py file as a class</p>
<hr>
<p>3.Cooperation </p>
<p>The most important thing is responsibility</p>
<p>Then is the ability to solve the problem</p>
<hr>
<p>4.Refactor</p>
<p>If you always think implement first and refactor in the end</p>
<p>The refactor will be pretty pretty hard</p>
<p>The best solution is do the refactor job when you are coding</p>
<p>And remember, don’t straightly coding</p>
<p>Think more about efficiency, readability, maintainability</p>
<hr>
<p>5.Record</p>
<p>It’s a good habit to record the bug when you meet with it</p>
<p> And you can create two files</p>
<p>“Bugs” record the bug waiting for solving</p>
<p>“Solved Bugs” record the bug and the solution</p>
<p>Maybe you can record other things more than bug</p>
<p>Whatever, it’s a good habit</p>
<hr>
<p>6.Rest</p>
<p>Do not keep coding for a long time</p>
<p>It’s will make you brain numb</p>
<p>And the efficiency will be lower</p>
<hr>
<p>7.Intresting Experience</p>
<p>When the .txt file is big enough</p>
<p>It will cost a long time to open the file</p>
<p>You will think “Wow ! My computer can’t even deal with a txt file”</p>
<p>And when you trying to modify some contents</p>
<p>It also cost a long time ! Haha</p>
<hr>
<p>8.Debug</p>
<p>With a long time apart with C and C++</p>
<p>I almost forget the efficient way to find a bug — “Debug”</p>
<p> Step by step, checking the variable to find the bug</p>
]]></content>
      <categories>
        <category>Project Conclusion</category>
      </categories>
      <tags>
        <tag>Project Conclusion</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker Basic</title>
    <url>/2021/03/28/Docker-Basic/</url>
    <content><![CDATA[<p>start docker daemon</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo service docker start</span><br></pre></td></tr></table></figure>

<p>images list</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure>

<p>delete images</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker rmi id</span><br></pre></td></tr></table></figure>

<p>container status</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure>

<hr>
<p>Container</p>
<p>run container</p>
<p>1.check images</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure>

<p>2.run images and attach it</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -i -t rastasheep&#x2F;ubuntu-sshd:18.04 &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-t: 在新容器内指定一个伪终端或终端。</span><br><span class="line"></span><br><span class="line">-i: 允许你对容器内的标准输入 (STDIN) 进行交互。</span><br></pre></td></tr></table></figure>

<p>3.exit</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure>

<p>4.daemon model</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -itd --name ubuntu-test ubuntu &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-d daemon</span><br></pre></td></tr></table></figure>

<hr>
<p>container operation </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker start (container id)</span><br><span class="line">docker stop (container id)</span><br><span class="line">docker restart (container id)</span><br></pre></td></tr></table></figure>

<hr>
<p>Image</p>
<p>Reuse</p>
<p>1.export container</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker export 1e560fca3906 &gt; ubuntu.tar</span><br></pre></td></tr></table></figure>

<p>2.import </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat .&#x2F;ubuntu.tar | docker import - test&#x2F;ubuntu:v1</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker import http:&#x2F;&#x2F;example.com&#x2F;exampleimage.tgz example&#x2F;imagerepo</span><br></pre></td></tr></table></figure>



<hr>
]]></content>
  </entry>
  <entry>
    <title>Daily Doubt</title>
    <url>/2021/03/22/Daily-Doubt/</url>
    <content><![CDATA[<p>bash is different env with cmd</p>
]]></content>
  </entry>
  <entry>
    <title>Dockerfile Basic</title>
    <url>/2021/03/28/Dockerfile-Basic/</url>
    <content><![CDATA[<p>new a file named “Dockerfile”</p>
<p>then</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker build .  &#x2F;&#x2F; will exec the dockerfile auto</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure>

<p>will show the container id and container  name</p>
<p>with name, you can start the container</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker start container_name</span><br></pre></td></tr></table></figure>

<p>then</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker stop container_name</span><br><span class="line">docker restart container_name</span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>Dockerfile Error</title>
    <url>/2021/03/28/Dockerfile-Error/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Temporary failure resolving ‘archive.ubuntu.com’</span><br></pre></td></tr></table></figure>

<p><strong>快速解决方法：</strong></p>
<p>修改/etc/default/docker文件，取消如下行前边的注释：</p>
<blockquote>
<p>DOCKER_OPTS=”–dns 8.8.8.8 –dns 8.8.4.4”</p>
</blockquote>
<p>结果：</p>
<p>修改配置并重新启动docker服务后，docker build命令正常。</p>
<blockquote>
<p>service docker restart</p>
</blockquote>
<hr>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">when docker build error</span><br><span class="line">when you fix it</span><br><span class="line">it will continue, not from begining</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>ECC</title>
    <url>/2021/03/22/ECC/</url>
    <content><![CDATA[<p><a href="https://cryptobook.nakov.com/asymmetric-key-ciphers/elliptic-curve-cryptography-ecc">Algorithm Reference</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Elliptic Curve Digital Signature Algorithm(ECDSA) is a cryptographic algorithm used by Bitcoin to ensure that funds can only be spent by their rightful owners.</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Elliptic Curve</span><br><span class="line"></span><br><span class="line">y^2 &#x3D; (x^3 + 7) </span><br><span class="line">and ECDSA get dots scattered with Elliptic Curve</span><br><span class="line"></span><br><span class="line">y^2 \mod p &#x3D; (x^3 + 7) this is dots scattered</span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/22/ECC/Snipaste_2021-03-21_18-40-09.png"></p>
<p>These dots are use to generate key !</p>
<blockquote>
<p>Note:</p>
<p>mod 17 make it map to the integer from 0 to16</p>
</blockquote>
<p><img src="/2021/03/22/ECC/Snipaste_2021-03-21_18-41-26.png"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from start point to end point, need how many operations</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cryptographers carefully select one of them, which generates the entire group (or subgroup) and is suitable for performance optimizations in the computations. This is the generator known as &quot;G&quot;.</span><br></pre></td></tr></table></figure>

<p>If a point in the curve</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The point P &#123;5, 8&#125; belongs to the curve, because (5**3 + 7 - 8**2) % 17 &#x3D;&#x3D; 0</span><br></pre></td></tr></table></figure>

<p>EC point addition</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Two points over an elliptic curve (EC points) can be added and the result is another point. </span><br></pre></td></tr></table></figure>

<p>EC point multiplication</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">If we add a point G to itself, the result is G + G &#x3D; 2 * G. If we add G again to the result, we will obtain 3 * G and so on</span><br><span class="line"></span><br><span class="line">then you will know what is &quot;P &#x3D; k * G&quot;</span><br><span class="line">(do that operation k times)</span><br></pre></td></tr></table></figure>

<p>infinity</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Multiplying an EC point by 0 returns a special EC point called &quot;infinity&quot;.</span><br></pre></td></tr></table></figure>



<p>Order, cofactor</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Аn elliptic curve over a finite field can form a finite cyclic algebraic group, </span><br><span class="line">which consists of all the points on the curve. </span><br><span class="line">In a cyclic group, if two EC points are added or an EC point is multiplied to an integer, the result is another EC point from the same cyclic group </span><br><span class="line">(and on the same curve). </span><br><span class="line">The order of the curve is the total number of all EC points on the curve. </span><br></pre></td></tr></table></figure>

<ul>
<li><strong>h</strong> = <strong>n</strong> / <strong>r</strong></li>
</ul>
<p>where</p>
<ul>
<li><strong>n</strong> is the <strong>order of the curve</strong> (the number of all its points)</li>
<li><strong>h</strong> is the curve <strong>cofactor</strong> (the number of non-overlapping <strong>subgroups</strong> of points, which together hold all curve points)</li>
<li><strong>r</strong> is the <strong>order of the subgroups</strong> (the number of points in each subgroup, including the <strong><em>infinity</em></strong> point for each subgroup)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">In other words, the points over an elliptic curve stay in one or several non-overlapping subsets, called cyclic subgroups. </span><br><span class="line">The number of subgroups is called &quot;cofactor&quot;. </span><br><span class="line">The total number of points in all subgroups is called &quot;order&quot; of the curve </span><br><span class="line">and is usually denoted by n. </span><br><span class="line">If the curve consists of only one cyclic subgroup, its cofactor h &#x3D; 1. If the curve consists of several subgroups, its cofactor &gt; 1.</span><br></pre></td></tr></table></figure>

<ul>
<li>Example of elliptic curve having <strong>cofactor</strong> = <strong>1</strong> is <code>secp256k1</code>.</li>
<li>Example of elliptic curve having <strong>cofactor</strong> = <strong>8</strong> is <code>Curve25519</code>.</li>
<li>Example of elliptic curve having <strong>cofactor</strong> = <strong>4</strong> is <code>Curve448</code>.</li>
</ul>
<p>Generator</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">For the elliptic curves over finite fields, </span><br><span class="line">the ECC cryptosystems define a special pre-defined (constant) EC point called generator point G (base point), </span><br><span class="line">which can generate any other point in its subgroup over the elliptic curve by multiplying G by some integer in the range [0...r]. </span><br><span class="line">The number r is called &quot;order&quot; of the cyclic subgroup (the total number of all points in the subgroup).</span><br></pre></td></tr></table></figure>

<p>Why “ if the group is small, the security is weak. “</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">go through</span><br></pre></td></tr></table></figure>



<p>How to get new point on the curve</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">add to itself</span><br><span class="line">G+G &#x3D; 2G</span><br></pre></td></tr></table></figure>

<p>Base point</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">y²&#x3D;x³+ax+b (mod p)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a&#x3D; 2</span><br><span class="line">b&#x3D; 3</span><br><span class="line">p&#x3D; 97</span><br><span class="line">n&#x3D; 18</span><br><span class="line">x-point&#x3D; 3</span><br><span class="line">P (3,91) Point is on curve</span><br><span class="line">2P (80,87) Point is on curve</span><br><span class="line">3P (80,10) Point is on curve</span><br><span class="line">4P (3,6) Point is on curve</span><br><span class="line">5P&#x3D;0</span><br><span class="line">6P (3,91) Point is on curve</span><br><span class="line">7P (80,87) Point is on curve</span><br><span class="line">8P (80,10) Point is on curve</span><br><span class="line">9P (3,6) Point is on curve</span><br><span class="line">10P&#x3D;0</span><br><span class="line">11P (3,91) Point is on curve</span><br><span class="line">12P (80,87) Point is on curve</span><br><span class="line">13P (80,10) Point is on curve</span><br><span class="line">14P (3,6) Point is on curve</span><br><span class="line">15P&#x3D;0</span><br><span class="line">16P (3,91) Point is on curve</span><br><span class="line">17P (80,87) Point is on curve</span><br><span class="line">18P (80,10) Point is on curve</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">We can see that this is a bad base point, as it will cycle.</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">So, in real-life, when we select a base point, we make sure that it has a high order value, so that it does not cycle. </span><br></pre></td></tr></table></figure>

<p>For SEPC256k1, we have a base point and prime number of:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x &#x3D; 0x79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798</span><br><span class="line">y &#x3D; 0x483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8</span><br><span class="line">p &#x3D; 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F</span><br><span class="line">order &#x3D; FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Note</p>
<p>(x,y) is a base point</p>
<p>p is for mod</p>
<p>order is the total amount of the points in a group</p>
</blockquote>
<p>Select generator</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Note</span><br><span class="line">that if we take the point &#123;5, 9&#125; as generator, </span><br><span class="line">it will generate just 3 EC points: &#123;5, 8&#125;, &#123;5, 9&#125; and infinity. </span><br><span class="line">Because the curve order is not prime number, different generators may generate subgroups of different order. </span><br><span class="line">This is a good example why we should not &quot;invent&quot; our own elliptic curves for cryptographic purposes and we should use proven curves.</span><br></pre></td></tr></table></figure>

<p>Public key and private key</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> tinyec <span class="keyword">import</span> registry</span><br><span class="line"><span class="keyword">import</span> secrets</span><br><span class="line"></span><br><span class="line">curve = registry.get_curve(<span class="string">&#x27;secp192r1&#x27;</span>)</span><br><span class="line"></span><br><span class="line">privKey = secrets.randbelow(curve.field.n)</span><br><span class="line">pubKey = privKey * curve.g</span><br><span class="line">print(<span class="string">&quot;private key:&quot;</span>, privKey)</span><br><span class="line">print(<span class="string">&quot;public key:&quot;</span>, pubKey)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">output:</span><br><span class="line">private key: 4225655318977962031264230130242180748818603147467615868902</span><br><span class="line"></span><br><span class="line">public key: (5396030834456770190396776530938374882273836179487834152291, 3422160588166914010077732710830109086004758012634997793937) </span><br><span class="line">on &quot;secp192r1&quot; &#x3D;&gt; y^2 &#x3D; x^3 + 6277101735386680763835789423207666416083908700390324961276x + 2455155546008943817740293915197451784769108058161191238065 </span><br><span class="line">(mod 6277101735386680763835789423207666416083908700390324961279)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Note</p>
<p>private key is really just a integer (and you will get it with different value every time)</p>
<p>don’t worry about the memory it allocated and it’s calculation </p>
<p>private is just a random integer from 0 to 2^256</p>
<p>“g” is the base point – generator according to the standard like ‘secp192r1’</p>
<p>base point is fixed</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(<span class="built_in">type</span>(privKey))</span><br><span class="line"></span><br><span class="line">output:</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">int</span>&#x27;&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Note that in real projects, 192-bit curves are considered weak, so 256-bit curves are recommended (or more bits), where the keys are also 256-bits (or respectively more). We use 192-bit curve in the above example just to make the sample output smaller.</span><br><span class="line"></span><br><span class="line">---&#39;secp192r1&#39; and secp256k1&#39;</span><br></pre></td></tr></table></figure>

<p>How to get my own private key</p>
<p>What is RSA</p>
<p>How public and private encrypt data</p>
]]></content>
  </entry>
  <entry>
    <title>Flask Cors</title>
    <url>/2021/01/02/Flask-Cors/</url>
    <content><![CDATA[<p>Cors solution</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from flask_cors import *</span><br><span class="line">CORS(app, supports_credentials&#x3D;True)</span><br></pre></td></tr></table></figure>

<p>Then Note ! ! !</p>
<p>Flask default listen on localhost</p>
<p>if you want to use Flask to deploy an application</p>
<p>do the thing below :</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">5000</span>, debug=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Config</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Config</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Git Basic Commands</title>
    <url>/2021/01/04/Git-Basic-Commands/</url>
    <content><![CDATA[<p>1.Push</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>

<p>push master branch</p>
<hr>
<p>2.Pull</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure>



<p>3.Remote Address</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote show</span><br></pre></td></tr></table></figure>

<p>Add remote address</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote add origin https:&#x2F;&#x2F;github.com&#x2F;fengcangjun&#x2F;learngit.git</span><br></pre></td></tr></table></figure>

<p>Delete origin remote address</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote rm origin</span><br></pre></td></tr></table></figure>

<p>Reset</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git reset --mixed origin&#x2F;main</span><br></pre></td></tr></table></figure>



<hr>
<p>Initialize github </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git init</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;&quot;   (to current branch)</span><br><span class="line">git branch -M main   (switch to main branch)</span><br><span class="line">git remote add orgin main   (origin is a remote address)</span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Git</category>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Tutorial</tag>
        <tag>Git</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>Funny code</title>
    <url>/2021/03/20/Funny-code/</url>
    <content><![CDATA[<p>Python</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(<span class="built_in">bytes</span>(<span class="number">99999999</span>))</span><br></pre></td></tr></table></figure>





]]></content>
  </entry>
  <entry>
    <title>Github Basic Config</title>
    <url>/2021/01/04/Github-Basic-Config/</url>
    <content><![CDATA[<p>1.Usage of “.gitignore “ file</p>
<p>When you push, you can exclude some files using “.gitignore “ </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*.properties</span><br></pre></td></tr></table></figure>

<p>means exclude all “.properties” file</p>
<p>You can also exclude a single file, just type it’s whole file name</p>
<p>Usually, “.gitignore “ file can’t work directly, you need to do this also</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git rm -r --cached .</span><br></pre></td></tr></table></figure>

<p>Then push again</p>
<hr>
<p>error</p>
<blockquote>
<p>OpenSSL SSL_read: Connection was reset, errno 10054</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global http.sslVerify &quot;false&quot;</span><br></pre></td></tr></table></figure>

<hr>
<p>zip 和 git clone 的区别在于是否有.git的隐藏文件</p>
]]></content>
      <categories>
        <category>Config</category>
        <category>Github</category>
      </categories>
      <tags>
        <tag>Tutorial</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>Git Fix Conflict</title>
    <url>/2021/01/04/Git-Fix-Conflict/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;&lt;&lt;&lt;&lt; HEAD</span><br><span class="line"></span><br><span class="line">xxxxxx &#x2F;&#x2F; here is the origin content</span><br><span class="line"></span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">xxxxxx &#x2F;&#x2F; here is the content you pull</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;&gt;&gt;&gt;j43jk2293i23jk2n3</span><br></pre></td></tr></table></figure>

<p>Generally, you just need to delete the origin content , and use the new content</p>
<p>Strongly recommend you to use “Github Desktop”</p>
<p>It will clearly display all conflicts and you can fix them directly</p>
]]></content>
      <categories>
        <category>Git</category>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Tutorial</tag>
        <tag>Git</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>Github SSH Deploy Key</title>
    <url>/2021/01/04/Github-SSH-Deploy-Key/</url>
    <content><![CDATA[<p>With Deploy key you can push directly, do not need to input username and password every time</p>
<p>Generate SSH key</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -f deploy_key_blog -C &quot;1020151695@qq.com&quot;</span><br></pre></td></tr></table></figure>

<p> Then press “Enter” twice is OK</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">E-mail address like an &quot;id&quot;</span><br><span class="line">So that Github repository know who you are</span><br><span class="line">And you don&#39;t need to input username and password again</span><br></pre></td></tr></table></figure>

<p>Then it will create a new file named “deploy_key_blog.pub”</p>
<p>Check it’s content use the command:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">more deploy_key_blog.pub</span><br></pre></td></tr></table></figure>

<p>Then copy the content and go to the project in Github</p>
<p>“Setting”–”Deploy keys”</p>
<p>Just do it !</p>
<p>And SSH key absolutely just support the ssh way</p>
<p>If you use HTTPS remote address, you need to switch it </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote rm origin      &#x2F;&#x2F; delete origin remote address </span><br><span class="line"></span><br><span class="line">git remote add origin git@github.com:nickchou&#x2F;gocode.git  &#x2F;&#x2F; apply new remote address</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Github</category>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Tutorial</tag>
        <tag>Git</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>Google E-mail Gmail</title>
    <url>/2021/03/08/Google-E-mail-Gmail/</url>
    <content><![CDATA[<p>QQ邮箱中选择gmail注册</p>
<p>中国的电话号码前加+86</p>
]]></content>
      <categories>
        <category>Google</category>
      </categories>
      <tags>
        <tag>Tutorial</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML Input</title>
    <url>/2021/05/11/HTML-Input/</url>
    <content><![CDATA[<p>get content</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> area = <span class="built_in">document</span>.getElementById(<span class="string">&quot;area&quot;</span>).value;</span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>HTTP</title>
    <url>/2021/06/03/HTTP/</url>
    <content><![CDATA[<h1 id="Content-Encoding"><a href="#Content-Encoding" class="headerlink" title="Content-Encoding"></a>Content-Encoding</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">浏览器发送请求时，通过 Accept-Encoding 带上自己支持的内容编码格式列表</span><br><span class="line">服务端从中挑选一种用来对正文进行编码，并通过 Content-Encoding 响应头指明选定的格式</span><br><span class="line">浏览器拿到响应正文后，依据 Content-Encoding 进行解压</span><br><span class="line">内容编码目的是优化传输内容大小，通俗地讲就是进行压缩</span><br></pre></td></tr></table></figure>



<p>Cache</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Web页面设计中，建少HTTP请求可以提高页面响应速度。</span><br><span class="line">浏览器在第一次访问页面时下载的资源会缓存起来</span><br><span class="line">第二次访问时会判断在缓存中是否已有该资源并且有没有更新过</span><br><span class="line">如果已有该资源且没有更新过，则去缓存去取</span><br><span class="line">这样减少了下载资源的时间。</span><br><span class="line">原理上是通过HTTP Rquest Header中的 if-modifaders中的last-modified来实现</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Hexo Live2D</title>
    <url>/2021/03/08/Hexo-Live2D/</url>
    <content><![CDATA[<p><a href="https://github.com/EYHN/hexo-helper-live2d">github</a> (You can download model here)</p>
<p>(1) Install hexo-helper-live2d</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure>

<p>(2)prepare model file</p>
<p>put the folder in “node_modules”</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">e.g. folder name &quot;live2d-widget-model-miku&quot;</span><br></pre></td></tr></table></figure>

<p>(2) install model</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install &#123;your model&#39;s package name&#125;</span><br></pre></td></tr></table></figure>

<p>(3) _config.yml in Hexo root folder add:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Live2D</span></span><br><span class="line"><span class="comment">## https://github.com/xiazeyu/live2d-widget.js</span></span><br><span class="line"><span class="comment">## https://l2dwidget.js.org/docs/class/src/index.js~L2Dwidget.html#instance-method-init</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-miku</span></span><br><span class="line">    <span class="attr">scale:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">hHeadPos:</span> <span class="number">0.5</span></span><br><span class="line">    <span class="attr">vHeadPos:</span> <span class="number">0.618</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">superSample:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">    <span class="attr">hOffset:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">vOffset:</span> <span class="number">-20</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">scale:</span> <span class="number">0.5</span></span><br><span class="line">  <span class="attr">react:</span></span><br><span class="line">    <span class="attr">opacityDefault:</span> <span class="number">0.7</span></span><br><span class="line">    <span class="attr">opacityOnHover:</span> <span class="number">0.2</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Theme</title>
    <url>/2021/03/08/Hexo-Theme/</url>
    <content><![CDATA[<p>Next主题</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>



<p>_config.yml新增</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure>



<p>在Next主题的配置文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  # if auto, trigger search by changing input</span><br><span class="line">  # if manual, trigger search by pressing enter key or search button</span><br><span class="line">  trigger: auto</span><br><span class="line">  # show top n results per article, show all results by setting to -1</span><br><span class="line">  top_n_per_article: 1</span><br><span class="line">  # unescape html strings to the readable one</span><br><span class="line">  unescape: false</span><br></pre></td></tr></table></figure>

<p>把local_search enable 置true就好了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo踩坑</title>
    <url>/2020/11/05/Hexo%E8%B8%A9%E5%9D%91/</url>
    <content><![CDATA[<p>1.ssh密匙</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;邮件地址&quot;</span></span><br></pre></td></tr></table></figure>

<p>找到<code>.ssh\id_rsa.pub</code>文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：</p>
<p>将刚复制的内容粘贴到key那里，title随便填，保存。</p>
<p>Win10下的~目录就是对应User下</p>
<p>然后，id_rsa.pub这个文件不能直接打开，需要命令行指令</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">more id_rsa.pub</span><br></pre></td></tr></table></figure>

<p>2.常用指令</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">hexo new &quot;postName&quot; #新建文章</span><br><span class="line">hexo generate #生成静态页面至public目录</span><br><span class="line">hexo server #开启预览访问端口（默认端口4000，&#x27;ctrl + c&#x27;关闭server）</span><br><span class="line">hexo deploy #部署到GitHub</span><br><span class="line">hexo version  #查看Hexo的版本</span><br><span class="line"># 你先执行hexo clean 然后再删除文章就可以了</span><br></pre></td></tr></table></figure>

<p>部署步骤：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>

<p>3.每篇文章的配置</p>
<p>示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: Spring注解是怎么工作的</span><br><span class="line">date: 2020-11-05 17:05:39</span><br><span class="line">tags:</span><br><span class="line">- Spring</span><br><span class="line">- Java</span><br><span class="line">categories:</span><br><span class="line">- [Java,Spring]</span><br></pre></td></tr></table></figure>

<p>4.配置文件的修改</p>
<p>_config.yml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: 藏经阁</span><br><span class="line">subtitle: &#39;&#39;</span><br><span class="line">description: &#39;太多东西要学啦&#39;</span><br><span class="line">keywords: Java</span><br><span class="line">author: FreeJim</span><br><span class="line">language: zh</span><br><span class="line">timezone: &#39;Asia&#x2F;Hong_Kong&#39;</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;a1020151695&#x2F;a1020151695.github.io</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure>

<p>具体可查<a href="https://hexo.io/docs/configuration">官方文档</a></p>
<p>5.自定义域名</p>
<p>Setting中设置自定义域名，然后Save保存</p>
<p>阿里云域名管理，要添加两个纪录</p>
<p>一个是CNAME www 把    把当前域名和xxx.github.io联系起来</p>
<p>其实是把xxx.github.io指向你自己的域名</p>
<p>CNAME content(Just the domain)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">freejim.icu </span><br></pre></td></tr></table></figure>

<p>第二个是@ 你自己的域名指向一个IP（即xxx.github.io的实际IP）</p>
<p>这里我踩了坑！</p>
<p>你不能在你自己电脑上Ping！！！！</p>
<p>拿你的云服务器去ping才有用</p>
<p>或者不需要服务器，直接网上找一个域名解析的网站，去查</p>
<p>例如<a href="https://site.ip138.com/">这个</a></p>
<p>gtihub上看得见的文件都是在“source”文件夹里面的—CNAME–域名配置文件</p>
<p>然后 如果要向google提交验证的话，我们用meta的方式</p>
<p>如果用html的方式的话，hexo部署的时候会修改html文件里的内容</p>
<p>导致google无法验证</p>
<p>然后你也不能直接放到github中</p>
<p>因为github仓库不完全等于hexo部署的服务器</p>
<p>所以我们选择meta</p>
<p>然后hexo是通过各主题模板来修改、生成各网页的</p>
<p>和meta相关的head的模板在这</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">themes\landscape\layout\_partial\head.ejs</span><br></pre></td></tr></table></figure>

<p>把google 给的meta 加进去就好了</p>
<p>添加后可以在这里查看网站数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;search.google.com&#x2F;search-console&#x2F;about</span><br></pre></td></tr></table></figure>

<p>查看是否验证成功</p>
<p>几天后，google搜索：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">site:“你的网站”</span><br></pre></td></tr></table></figure>

<p>之后我看了百度的验证</p>
<p>不行！</p>
<p>github把百度屏蔽掉了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">不到一分钟前freejim.icu使用HTML标签验证</span><br><span class="line">原因：服务器连接超时，请检查服务器设置或者稍后重试。</span><br><span class="line">问题分析&amp;解决办法： 连接网站时超时，可能是网络速度过慢，请检查服务器网络线路，或者稍后再试。</span><br></pre></td></tr></table></figure>

<p>不允许百度去爬</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">对此github官方是这样说的 : 由于百度爬虫爬得太猛烈，已经对很多Github用户造成了可用性的问题了，而禁用百度爬虫这一举措可能会一直持续下去。</span><br></pre></td></tr></table></figure>

<hr>
<blockquote>
<p>Please make sure you have the correct access rights</p>
</blockquote>
<p>原因:</p>
<p>可能无意间动了ssh密钥，id_rsa.pub</p>
<p>rsa， ssh-keygen 等</p>
<p>解决：</p>
<p>在github的setting中新增ssh密钥</p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210609163127564.png" alt="image-20210609163127564"></p>
]]></content>
      <categories>
        <category>Config</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Config</tag>
      </tags>
  </entry>
  <entry>
    <title>Idea shortcut</title>
    <url>/2021/04/26/Idea-shortcut/</url>
    <content><![CDATA[<p>double click “Ctrl” – run any command</p>
]]></content>
  </entry>
  <entry>
    <title>Intellij 使用</title>
    <url>/2021/06/08/Intellij-%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>有些函数没有解释，是需要先下载源码先</p>
<h4 id="lombok报错"><a href="#lombok报错" class="headerlink" title="lombok报错"></a>lombok报错</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">java.lang.IllegalAccessError: class lombok.javac.apt.LombokProcessor cannot access class com.sun.tools.javac.processing.JavacProcessingEnvironment [duplicate]</span><br></pre></td></tr></table></figure>

<p>解决</p>
<p>Switch to at least the <code>1.18.20</code> version of Lombok that contains <a href="https://github.com/rzwitserloot/lombok/issues/2681">the fix</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;org.projectlombok&lt;&#x2F;groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;lombok&lt;&#x2F;artifactId&gt;</span><br><span class="line">  &lt;version&gt;1.18.20&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>JPA error</title>
    <url>/2021/06/16/JPA-error/</url>
    <content><![CDATA[<h4 id="could-not-extract-ResultSet"><a href="#could-not-extract-ResultSet" class="headerlink" title="could not extract ResultSet"></a>could not extract ResultSet</h4><p>原因：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Entity和数据库中的表字段对应不上</span><br></pre></td></tr></table></figure>

<p>我的话是“温度”的字段英文拼错了</p>
<p>一边是temperature，一边是temperture，差了个a</p>
<p>一定要仔细对照一下</p>
<p>下划线是没有影响的，对应好就行</p>
<hr>
<h4 id="could-not-execute-statement"><a href="#could-not-execute-statement" class="headerlink" title="could not execute statement"></a>could not execute statement</h4><p>原因：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">字段定义的类型和@Entity有悖</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="执行updte-delete"><a href="#执行updte-delete" class="headerlink" title="执行updte/delete"></a>执行updte/delete</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Modifying</span></span><br><span class="line"><span class="meta">@Query(value = &quot;update tb_user set role = &#x27;USER&#x27; where name = ?1&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">unLockUser</span><span class="params">(String username)</span></span>;</span><br></pre></td></tr></table></figure>



<hr>
<h4 id="Executing-an-update-delete-query-with-root-cause"><a href="#Executing-an-update-delete-query-with-root-cause" class="headerlink" title="Executing an update/delete query] with root cause"></a>Executing an update/delete query] with root cause</h4><p>添加@Transactional注解</p>
]]></content>
  </entry>
  <entry>
    <title>JPA tutorial</title>
    <url>/2021/06/17/JPA-tutorial/</url>
    <content><![CDATA[<h4 id="Query"><a href="#Query" class="headerlink" title="@Query"></a>@Query</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Query(&quot;SELECT u FROM User u WHERE u.status = ?1&quot;)</span></span><br><span class="line"><span class="function">User <span class="title">findUserByStatus</span><span class="params">(Integer status)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Query(&quot;SELECT u FROM User u WHERE u.status = ?1 and u.name = ?2&quot;)</span></span><br><span class="line"><span class="function">User <span class="title">findUserByStatusAndName</span><span class="params">(Integer status, String name)</span></span>;</span><br></pre></td></tr></table></figure>

<p>For the above queries, the <em>status</em> method parameter will be assigned to the query parameter with index <em>1,</em> and the <em>name</em> method parameter will be assigned to the query parameter with index <em>2</em>.</p>
<hr>
<h4 id="JPA-批量查询id"><a href="#JPA-批量查询id" class="headerlink" title="JPA 批量查询id"></a>JPA 批量查询id</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Query(value = &quot;select * from info where userid in ?1&quot;,nativeQuery = true)</span></span><br><span class="line"><span class="function">List&lt;Info&gt; <span class="title">getInfoByIds</span><span class="params">(List&lt;Integer&gt; userids)</span></span>;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Java 重定向</title>
    <url>/2021/05/25/Java-%E9%87%8D%E5%AE%9A%E5%90%91/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Leetcode Rule</title>
    <url>/2021/03/08/Leetcode-Rule/</url>
    <content><![CDATA[<p>1</p>
<p>don’t</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun</span>(<span class="params">x:<span class="built_in">int</span></span>)</span></span><br></pre></td></tr></table></figure>



<p>2</p>
<p>自定义数据结构</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"># class TreeNode(object):</span></span><br><span class="line"><span class="comment">#     def __init__(self, val=0, left=None, right=None):</span></span><br><span class="line"><span class="comment">#         self.val = val</span></span><br><span class="line"><span class="comment">#         self.left = left</span></span><br><span class="line"><span class="comment">#         self.right = right</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br></pre></td></tr></table></figure>

<p>3</p>
<p>set hash 导致输出导致OJ上不一致</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">太狠了</span><br></pre></td></tr></table></figure>

<p>4</p>
<p>leetcode 全局还是传参</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">传参！</span><br></pre></td></tr></table></figure>

<p>5</p>
<p>库</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> defaultdict</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findOrder</span>(<span class="params">self, numCourses, prerequisites</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type numCourses: int</span></span><br><span class="line"><span class="string">        :type prerequisites: List[List[int]]</span></span><br><span class="line"><span class="string">        :rtype: List[int]</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>Leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux Basic</title>
    <url>/2021/03/27/Linux-Basic/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">unzip wwwroot.zip</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">报错</span><br><span class="line">shell脚本</span><br><span class="line">cd: can&#39;t cd to src&#x2F;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">source xxx.sh</span><br></pre></td></tr></table></figure>

<hr>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">报错</span><br><span class="line">shell脚本</span><br><span class="line">cd src&#x2F;\r</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">字符问题</span><br><span class="line">解决</span><br><span class="line">dos2unix test.file</span><br></pre></td></tr></table></figure>

<hr>
<p>环境变量</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export HOST_ENV&#x3D;&quot;xxx&quot;</span><br></pre></td></tr></table></figure>

<p>pip to pip3</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alias pip&#x3D;pip3</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Linux nodejs</title>
    <url>/2021/06/19/Linux-nodejs/</url>
    <content><![CDATA[<h4 id="Linux-nodejs-安装"><a href="#Linux-nodejs-安装" class="headerlink" title="Linux nodejs 安装"></a>Linux nodejs 安装</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install nodejs</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install npm</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>Load Balance</title>
    <url>/2021/04/26/Load-Balance/</url>
    <content><![CDATA[<p><a href="https://spring.io/guides/gs/spring-cloud-loadbalancer/">Tutorial</a></p>
<ol>
<li><p>New two project</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">say-hello   &#x2F;&#x2F; real-service</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">user   &#x2F;&#x2F; balance-server</span><br></pre></td></tr></table></figure>

<p>with maven</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">say-hello need modules: Spring Web</span><br><span class="line">user   need modules: Cloud Loadbalancer and Spring Reactive Web</span><br></pre></td></tr></table></figure>
</li>
<li><p>Implement</p>
</li>
</ol>
<blockquote>
<p>Note:</p>
<p>refactor package name</p>
</blockquote>
<p>refactor application.properties</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">spring.application.name&#x3D;user</span><br><span class="line">server.port&#x3D;8888  &#x2F;&#x2F; app will run on the port</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>Run App</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mvn spring-boot:run</span><br></pre></td></tr></table></figure>

<p>run on multiple port</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mvn spring-boot:run -Dspring-boot.run.arguments&#x3D;--server.port&#x3D;9999</span><br></pre></td></tr></table></figure>

<p>test in browser (8888 is balance server)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">localhost:8888&#x2F;hi</span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Flux&lt;List&lt;ServiceInstance&gt;&gt; get() &#123;</span><br><span class="line">    <span class="keyword">return</span> Flux.just(Arrays</span><br><span class="line">            .asList(<span class="keyword">new</span> DefaultServiceInstance(serviceId + <span class="string">&quot;1&quot;</span>, serviceId, <span class="string">&quot;localhost&quot;</span>, <span class="number">8090</span>, <span class="keyword">false</span>),</span><br><span class="line">                    <span class="keyword">new</span> DefaultServiceInstance(serviceId + <span class="string">&quot;2&quot;</span>, serviceId, <span class="string">&quot;localhost&quot;</span>, <span class="number">9092</span>, <span class="keyword">false</span>),</span><br><span class="line">                    <span class="keyword">new</span> DefaultServiceInstance(serviceId + <span class="string">&quot;3&quot;</span>, serviceId, <span class="string">&quot;localhost&quot;</span>, <span class="number">9999</span>, <span class="keyword">false</span>)));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>balance server will balance to these three ports</p>
<p>once a target port got some problems, you may see browser will get error</p>
<p>but refresh it, it will be ok, because it is balanced to another ok port</p>
]]></content>
      <tags>
        <tag>Spring-Boot</tag>
      </tags>
  </entry>
  <entry>
    <title>Mining</title>
    <url>/2021/03/22/Mining/</url>
    <content><![CDATA[<p>Mining process</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Jing’s mining node maintains a local copy of the blockchain. </span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Jing’s node is listening for transactions, trying to mine a new block and also listening for blocks discovered by other nodes.</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">As Jing’s node is mining, it receives block 277,315 through the bitcoin network.</span><br><span class="line">and the beginning of the competition to create block 277,316.</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">it was also collecting transactions in preparation for the next block. By now it has collected a few hundred transactions in the memory pool. Upon receiving block 277,315 and validating it, Jing’s node will also compare it against all the transactions in the memory pool and remove any that were included in block 277,315. </span><br><span class="line">Whatever transactions remain in the memory pool are unconfirmed and are waiting to be recorded in a new block.</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Jing’s node immediately constructs a new empty block, a candidate for block 277,316. This block is called a candidate block because it is not yet a valid block, as it does not contain a valid Proof-of-Work. The block becomes valid only if the miner succeeds in finding a solution to the Proof-of-Work algorithm.</span><br></pre></td></tr></table></figure>



<blockquote>
<p>The Coinbase Transaction</p>
<p>The first transaction in any block is a special transaction, called a coinbase transaction. This transaction is constructed by Jing’s node and contains his reward for the mining effort.</p>
<p>Unlike regular transactions, the coinbase transaction does not consume (spend) UTXO as inputs. Instead, it has only one input, called the coinbase, which creates bitcoin from nothing. </p>
</blockquote>
<blockquote>
<p>Note</p>
<p>The answer is that an incorrect reward would result in the block being deemed invalid by everyone else, wasting Jing’s electricity used for Proof-of-Work. </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">To construct the coinbase transaction, Jing’s node first calculates the total amount of transaction fees by adding all the inputs and outputs of the 418 transactions that were added to the block. </span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Mysql bench tutorial</title>
    <url>/2021/06/16/Mysql-bench-tutorial/</url>
    <content><![CDATA[<h4 id="修改表"><a href="#修改表" class="headerlink" title="修改表"></a>修改表</h4><p>Alert好用</p>
<hr>
<h4 id="添加外键"><a href="#添加外键" class="headerlink" title="添加外键"></a>添加外键</h4><p>字段类型对不上是会报错的</p>
]]></content>
  </entry>
  <entry>
    <title>N-TCP</title>
    <url>/2021/05/24/N-TCP/</url>
    <content><![CDATA[<p>Transmission Control Protocol</p>
<p>TCP连接的建立（三次握手）</p>
<p>第一次握手（A发给B）</p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210524084347239.png" alt="image-20210524084347239"></p>
<p>然后SYN置为1（set）</p>
<p>随机初始序号2319633865</p>
<p>然后自己的序号sequence number为0 （自己的序号也可称为相对序号，relative sequence number）</p>
<p>第二次握手（B回复A）</p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210524084547340.png" alt="image-20210524084547340"></p>
<p>首先看Ack部分</p>
<p>ack=A自己序号+1即0+1=1 （relative ack number）</p>
<p>然后下面的ack序号为A的初始随机序号+1即2319633865+1=231963386</p>
<p>再是自己的序号从0开始</p>
<p>又随机生成一个序号670416643发给A</p>
<p>第三次握手（A回复B）</p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210524084814392.png" alt="image-20210524084814392"></p>
<p>A自己的序号=原序号+1即0+1=1</p>
<p>然后随机序号也+1</p>
<p>接下来是Ack部分</p>
<p>ack=B自己的序号+1即0+1=1</p>
<p>然后ack随机序号=B的随即序号+1即670416643+1=670416644</p>
<p>以上数据确认都没问题的话，就可以分配端口资源（套接字）然后正式建立连接了</p>
<p>Conclusion：</p>
<p>随机序号的作用</p>
<p>答：一定程度上防止TCP syn 攻击</p>
<p>建立连接时的标志位</p>
<p>答：涉及连接建立的TCP报文，SYN都置1，回复方的ACK置为1（第二次和第三次握手）</p>
<p>ACK和ack是不一样的，一个是标志位，一个是序号</p>
<p>ACK再标志位中的全称叫 Acknowledgment</p>
<p>关于相对序号</p>
<p>答:初始双方都是0，然后收到对方回复的ack后才有机会增加</p>
<hr>
<p> TCP连接的释放</p>
<p>（1）A发给B（A准备关闭连接）</p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210524212654486.png" alt="image-20210524212654486"></p>
<p>主要是在标志位FIN置为1</p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210524212759858.png"></p>
<p>Ps：SYN在连接释放时置为0</p>
<p>（2）B回复A</p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210524213038001.png" alt="image-20210524213038001"></p>
<p>ack加1</p>
<p>但是！relative sequence number 并未做加1操作</p>
<p>再看标志位</p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210524213208909.png" alt="image-20210524213208909"></p>
<p>FIN置为0，ACK置为1</p>
<p>此时，A的发送通道就关闭了，即A不能主动发送数据包到B了（但是可以被动回复B）</p>
<p>（建立连接后有两条通路，分别是A和B的发送通道）</p>
<p>（3）B发给A（B也准备关闭连接）</p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210524213407417.png" alt="image-20210524213407417"></p>
<p>relative sequence number 仍未做加1操作</p>
<p>ack也没有做加1操作</p>
<p>（也就是说，和之前B回复给A的数据包序号都一样）</p>
<p>再看标志位</p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210524213548780.png" alt="image-20210524213548780"></p>
<p>FIN置为了1</p>
<p>（4）A回复B</p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210524213612152.png" alt="image-20210524213612152"></p>
<p>relative sequence number 未做加1操作</p>
<p>ack加1了</p>
<p>再看标志位</p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210524213917593.png" alt="image-20210524213917593"></p>
<p>关于ack的总结</p>
<p>ack加1表示接收方确实受到了</p>
<p>每次回复时，ack都会加1</p>
<p>但是，连续发送两个TCP数据报，relative sequence number 是不会变化的（因为期间并没有收到对方的ack）</p>
<p>只有收到了对方的ack，相对序号才有加的机会</p>
<hr>
<p>误区</p>
<p>序号每次只会加1</p>
<p>答：不对</p>
<p>举个例子</p>
<p>发送方，此时相对序号为769，发送了一个600字节数据</p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210524214756347.png" alt="image-20210524214756347"></p>
<p>接收方的回复</p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210524214911160.png" alt="image-20210524214911160"></p>
<p>ack=769+600=1369</p>
<p>所以说，序号与发送数据的大小有关</p>
]]></content>
  </entry>
  <entry>
    <title>Network Layer</title>
    <url>/2021/03/14/Network-Layer/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">应用层（Application Layer），主要负责应用与网络之间的通信。</span><br><span class="line">运输层（Transport Layer），主要负责两台主机的进程间通信。</span><br><span class="line">网络层（Network Layer），主要负责网络中不同主机之间的通信。</span><br><span class="line">数据链路层（Data Link Layer），主要负责数据在链路中的传输。</span><br><span class="line">物理层（Physical Layer），主要负责数据与物理媒体之间转换。</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Network</category>
        <category>Basic</category>
      </categories>
      <tags>
        <tag>Network</tag>
      </tags>
  </entry>
  <entry>
    <title>Neural Network Tutorial</title>
    <url>/2021/03/15/Neural-Network-Tutorial/</url>
    <content><![CDATA[<p><img src="/2021/03/15/Neural-Network-Tutorial/image-20210315182943083.png" alt="image-20210315182943083"></p>
<p>Evaluation </p>
<p><img src="/2021/03/15/Neural-Network-Tutorial/image-20210315183210362.png" alt="image-20210315183210362"></p>
<p><img src="/2021/03/15/Neural-Network-Tutorial/image-20210315184205591.png" alt="image-20210315184205591"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Initialize the network with random weights and biases,then adjust them</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Training tells which changes to weights matters the most</span><br></pre></td></tr></table></figure>

<p>Get the cost</p>
<p><img src="/2021/03/15/Neural-Network-Tutorial/image-20210315183527242.png" alt="image-20210315183527242"></p>
<p><img src="/2021/03/15/Neural-Network-Tutorial/image-20210315184433132.png" alt="image-20210315184433132"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The last layer</span><br></pre></td></tr></table></figure>

<p>What does middle layer do?</p>
<p><img src="/2021/03/15/Neural-Network-Tutorial/image-20210315184946375.png" alt="image-20210315184946375"></p>
<p><img src="/2021/03/15/Neural-Network-Tutorial/image-20210315185212933.png" alt="image-20210315185212933"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Random weights and bias, then seems like getting a new data array (mess image)</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Python Class</title>
    <url>/2021/01/02/Python-Class/</url>
    <content><![CDATA[<p>simple example: (within the same package)</p>
<p>Speaker.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Speaker</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sayHello</span>():</span></span><br><span class="line">        print(<span class="string">&#x27;hello&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>Test.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Speaker</span><br><span class="line">speaker = Speaker()</span><br><span class="line">speaker.sayHello()</span><br></pre></td></tr></table></figure>

<p>If in different package:</p>
<p>Test.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> packageName.Speaker <span class="keyword">import</span> Speaker</span><br><span class="line"></span><br><span class="line">speaker = Speaker()</span><br><span class="line">speaker.sayHello()</span><br></pre></td></tr></table></figure>



<p>You can also build a Constructor to initialize the object</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Speaker</span>:</span></span><br><span class="line">	name = <span class="literal">None</span></span><br><span class="line">	<span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,name</span>):</span></span><br><span class="line">    	self.name = name</span><br><span class="line">	</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sayHello</span>():</span></span><br><span class="line">        print(<span class="string">&#x27;hello&#x27;</span>)</span><br></pre></td></tr></table></figure>

<hr>
<p>Generally, we use import like this</p>
<p>Lib.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span>():</span> <span class="comment"># this .py file do not have class, so do not need to instantiate</span></span><br><span class="line">    print(<span class="string">&#x27;hello&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>Test.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Lib</span><br><span class="line"></span><br><span class="line">Lib.hello() </span><br></pre></td></tr></table></figure>

<p>How can we import a class</p>
<p>A class Import other class and use that class’s function</p>
<p>Test.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> packageName.Speaker <span class="keyword">import</span> Speaker</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span>:</span></span><br><span class="line">	speaker = Speaker() <span class="comment"># you need to instantiate the object, so that you can use it</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">testSpeak</span>():</span></span><br><span class="line">        speaker.sayHello()</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Python</category>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Tutorial</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Python Code</title>
    <url>/2021/01/03/Python-Code/</url>
    <content><![CDATA[<ol>
<li><p>The Name of variable</p>
<p>Not like Java — “dataSet”</p>
<p>Python always use “data_set”</p>
</li>
<li><p>Comments</p>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(<span class="string">&#x27;hello world&#x27;</span>)   <span class="comment"># note the blank space</span></span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>Python</category>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>Tutorial</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Python Dict</title>
    <url>/2021/01/02/Python-Dict/</url>
    <content><![CDATA[<p>Traverse</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">&#x27;a&#x27;</span>: <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;b&#x27;</span>: <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;c&#x27;</span>: <span class="string">&#x27;3&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> key <span class="keyword">in</span> a:</span><br><span class="line">       print(key+<span class="string">&#x27;:&#x27;</span>+a[key])</span><br><span class="line"></span><br><span class="line">output:</span><br><span class="line">a:<span class="number">1</span></span><br><span class="line">b:<span class="number">2</span></span><br><span class="line">c:<span class="number">3</span></span><br></pre></td></tr></table></figure>

<p>Reverse</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a=<span class="built_in">range</span>(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">reversed</span>(a):</span><br><span class="line">print(i)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4 3 2 1 0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>,<span class="number">-1</span>,<span class="number">-1</span>):</span><br><span class="line">print(i)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4 3 2 1 0</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Python</category>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Tutorial</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Python File Operation</title>
    <url>/2021/01/02/Python-File-Operation/</url>
    <content><![CDATA[<p>Add content to file</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">file = <span class="built_in">open</span>(<span class="string">&#x27;xxx.txt&#x27;</span>,<span class="string">&#x27;a&#x27;</span>) <span class="comment"># &#x27;a&#x27; mean append</span></span><br></pre></td></tr></table></figure>

<p>Read content</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">text = file.read() <span class="comment"># read the whole file</span></span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Python</category>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Tutorial</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Python Flask</title>
    <url>/2021/03/08/Python-Flask/</url>
    <content><![CDATA[<p>1.Listener </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>2.Template</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span>():</span></span><br><span class="line">   <span class="keyword">return</span> <span class="string">&#x27;Hello World&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">   app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>)</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Python</category>
        <category>Flask</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Flask</tag>
      </tags>
  </entry>
  <entry>
    <title>Python JSON</title>
    <url>/2021/01/02/Python-JSON/</url>
    <content><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">file = <span class="built_in">open</span>(<span class="string">&quot;xxx.json&quot;</span>)</span><br><span class="line">jsonString = file.read()</span><br><span class="line">file.close()</span><br><span class="line">jsons=json.loads(jsonString)</span><br><span class="line"><span class="keyword">for</span> json <span class="keyword">in</span> jsons:</span><br><span class="line">	...</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Python</category>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Tutorial</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Python List</title>
    <url>/2021/01/02/Python-List/</url>
    <content><![CDATA[<p>1.Don’t forget the comma</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">          [<span class="string">&#x27;j1&#x27;</span>,<span class="string">&#x27;m1&#x27;</span>,<span class="string">&#x27;x1&#x27;</span>,<span class="string">&#x27;s1&#x27;</span>,<span class="string">&#x27;k&#x27;</span>,<span class="string">&#x27;s2&#x27;</span>,<span class="string">&#x27;x2&#x27;</span>,<span class="string">&#x27;m2&#x27;</span>,<span class="string">&#x27;j2&#x27;</span>],</span><br><span class="line">          [<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>],</span><br><span class="line">          [<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;p1&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;p2&#x27;</span>,<span class="string">&#x27;&#x27;</span>],</span><br><span class="line">          [<span class="string">&#x27;b1&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;b2&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;b3&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;b4&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;b5&#x27;</span>],</span><br><span class="line">          [<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>],</span><br><span class="line">          [<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>],</span><br><span class="line">          [<span class="string">&#x27;B1&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;B2&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;B3&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;B4&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;B5&#x27;</span>],</span><br><span class="line">          [<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;P1&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;P2&#x27;</span>, <span class="string">&#x27;&#x27;</span>],</span><br><span class="line">          [<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>],</span><br><span class="line">          [<span class="string">&#x27;J1&#x27;</span>,<span class="string">&#x27;M1&#x27;</span>,<span class="string">&#x27;X1&#x27;</span>,<span class="string">&#x27;S1&#x27;</span>,<span class="string">&#x27;K&#x27;</span>,<span class="string">&#x27;S2&#x27;</span>,<span class="string">&#x27;X2&#x27;</span>,<span class="string">&#x27;M2&#x27;</span>,<span class="string">&#x27;J2&#x27;</span>]</span><br><span class="line">      ]</span><br></pre></td></tr></table></figure>

<hr>
<p>2.delete element</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="keyword">del</span>(a[<span class="number">2</span>]) <span class="comment"># arg is address</span></span><br><span class="line">print(a)</span><br><span class="line"></span><br><span class="line">output:</span><br><span class="line">[<span class="number">1</span>,<span class="number">2</span>]</span><br></pre></td></tr></table></figure>

<hr>
<p>3.Deep copy</p>
<p>When you put a Object in a List</p>
<p>You actually store a address in List</p>
<p>So it’s easily to make a mistake</p>
<p>You think you put different object in the List</p>
<p>But actually, you just put an address in List for many time</p>
<p>And all address in a List point to the same memory</p>
<p>The solution is use deep copy</p>
<p>And new a Object every time, not just use setter or assign</p>
<p>Remember:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Setter will not create a new object</span><br><span class="line">Assignment will not create a new object </span><br><span class="line">(assignment just change the variable&#39;s address to the target)</span><br></pre></td></tr></table></figure>

<p>Wrong Example</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">nextState = State(self.player, self.agent)</span><br><span class="line">nextState.board = current_state.board </span><br><span class="line"><span class="comment"># will not create a new board, just point to the same memory</span></span><br></pre></td></tr></table></figure>

<p>Right Example</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> copy</span><br><span class="line"></span><br><span class="line">nextState = State(self.player, self.agent) <span class="comment"># create a new object</span></span><br><span class="line">nextState.board = copy.deepcopy(current_state.board) </span><br><span class="line"><span class="comment"># create it&#x27;s own board instead of point to the same memory</span></span><br></pre></td></tr></table></figure>

<hr>
<ol start="4">
<li>  2 dimension array</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">matrix = []</span><br><span class="line"> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">      matrix.append([<span class="number">0</span>] * <span class="number">3</span>)</span><br></pre></td></tr></table></figure>

<p>Or</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n = <span class="number">3</span></span><br><span class="line">m = <span class="number">3</span></span><br><span class="line">dp = [[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)] <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(m)]</span><br></pre></td></tr></table></figure>







]]></content>
      <categories>
        <category>Python</category>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Tutorial</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Python Log</title>
    <url>/2021/01/03/Python-Log/</url>
    <content><![CDATA[<p>Sometimes the error messages will be to long </p>
<p>Then the console is not big enough to display all messages</p>
<p>And we can’t see the root cause</p>
<p>The solution is output the error messages to a log file</p>
<p>Here is the example</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"> </span><br><span class="line">logging.basicConfig(filename=<span class="string">&#x27;log.log&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">error_func</span>():</span></span><br><span class="line">  b = <span class="number">1</span> / <span class="number">0</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">  <span class="keyword">try</span>:</span><br><span class="line">    error_func()</span><br><span class="line">  <span class="keyword">except</span>:</span><br><span class="line">    s = traceback.format_exc()</span><br><span class="line">    logging.error(s)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Python</category>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Tutorial</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Python Project</title>
    <url>/2021/03/27/Python-Project/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Python String</title>
    <url>/2021/01/02/Python-String/</url>
    <content><![CDATA[<p>List to String</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(<span class="string">&#x27;&#x27;</span>.join(xxList))</span><br></pre></td></tr></table></figure>

<p>String to List</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">list</span>=text.split(<span class="string">&#x27;,&#x27;</span>) <span class="comment"># split String by &#x27;,&#x27; to List</span></span><br><span class="line">    print(<span class="built_in">list</span>)</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Python</category>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Tutorial</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Python module version</title>
    <url>/2021/01/02/Python-module-version/</url>
    <content><![CDATA[<p>Sometimes we will meet a situation:</p>
<p>The version of project’s modules are lower than what we current installed</p>
<p>Then shall we uninstall the current modules ?</p>
<p>That’s not a good idea</p>
<p>Actually, we can create a “Vitualenv” (Vitual Environment)</p>
<p>Pycharm help us easily deal with it</p>
<p>You can create a “Vitualenv “ in “Setting - Python Interpreter”</p>
<p>Add a “New Environment”</p>
<p>This Environment is totally pure </p>
<p>You can install the module as you want </p>
<p>And this  “Vitualenv” will not affect the modules you have installed</p>
<p>It’s a separate Python environment just use for the project</p>
<p>The new modules will be install in the project’s folder</p>
<p>And more convenient thing is </p>
<p>After you create a “Pure Environment”</p>
<p>You can let Pycharm install the modules the project needed ! ! !</p>
]]></content>
      <categories>
        <category>Config</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Tutorial</tag>
        <tag>Config</tag>
      </tags>
  </entry>
  <entry>
    <title>RSA加密</title>
    <url>/2021/06/08/RSA%E5%8A%A0%E5%AF%86/</url>
    <content><![CDATA[<p><a href="https://zhuanlan.zhihu.com/p/48249182">解释</a></p>
<p><a href="https://blog.csdn.net/weixin_43461520/article/details/107941983">demo</a></p>
<h4 id="生成RSA文件"><a href="#生成RSA文件" class="headerlink" title="生成RSA文件"></a>生成RSA文件</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>Qin App Conclusion</title>
    <url>/2021/01/04/Qin-App-Conclusion/</url>
    <content><![CDATA[<p>1.API document</p>
<p>Make a standard document of the request and response</p>
<p>So that the Client and Server side can be isolated</p>
<p>You can write your code as you like, but just follow the API document</p>
<hr>
<p>2.Modified API document</p>
<p>The first version of API document may not be so perfect</p>
<p>As the work beginning, we will found that the API document should be modified</p>
<p>But don’t worry, if you do enough job in the first version of API document</p>
<p>It’s not a big deal</p>
<hr>
<p>3.How to deal with API document</p>
<p>For my team, we first step is to work out a flow chart according to our requirement </p>
<p>With a basic flow chart, we can figure out the data we need</p>
<p>Then we talk about the data base structure</p>
<p>After these work, we can almost formulate the API</p>
<hr>
<p>4.Trouble with API document</p>
<p>Even though my team make a API document</p>
<p>But sometimes, my teammate still do not follow the document</p>
<p>Even though I make a comment there </p>
<p>But still miss that </p>
<p>Ah..</p>
<p>Then I meet with some strange bugs because of the wrong data I received</p>
<hr>
<p>5.Refactor and Lifecycle In Android</p>
<p>It’s a funny thing that the most of time I spend is not for implement the function</p>
<p>It’s for refactor</p>
<p>Oh..</p>
<p>Maybe my experience is not enough, not so familiar with Android and Kotlin</p>
<p>I wrote some repeat code for Student-side and Teacher-side</p>
<p>Actually, some repeat codes can be integrate into a util class</p>
<p>And that’s the problem, I spend a lot of time when I am doing integration</p>
<p>Almost every time I integrate the codes, the app will breakdown  </p>
<p>Because I am not familiar with the lifecycle of Android </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The lifecycle is really important in Android</span><br></pre></td></tr></table></figure>

<p>My teacher say it a long time ago, but I miss it</p>
<p>Oh..</p>
<p>I didn’t pay much attention to lifecycle of Activity</p>
<p>That make a lot problems</p>
<p>And I use Fragment also, I still not familiar with the lifecycle with Fragment</p>
<p>They comes together ! ! </p>
<p>And that’s why I almost go crazy when I deal with the bugs</p>
<hr>
<p>6.Record</p>
<p>I got a good habit when working with this project</p>
<p>That is record ! </p>
<p>I record the bugs I meet, and put them in a file named “Bugs waiting to solve”</p>
<p>And after I fix it I will commit in git and record the solution of it in another file named “Bugs”</p>
<p>With these file I really feel I learn something from this project</p>
<hr>
<p>7.Github</p>
<p>This is the first time I use Github work with a team (actually there are just 2 people in my team haha)</p>
<p>Github is so cool ! ! </p>
<p>You can see every commits</p>
<p>You can see how many codes you have wrote</p>
<p>When merge the code, you can easily deal with the conflict</p>
<p>Perfect ! !</p>
<p>And ssh key is important</p>
<p>With ssh key you can push you code directly,</p>
<p>Don’t need to input the username and password again and again</p>
<hr>
<p>8.Git</p>
<p>With git, you don’t need to worry missing your code you just wrote</p>
<p>Every time after you fix a bug or implement a function commit it to git !</p>
<hr>
<p>9.Android Document</p>
<p>See official document ! !</p>
<p>Please ! ! </p>
<p>That’s the most correct way to solve the problem</p>
<p>The other important thing is “Use you brain”</p>
<p>Do not just follow the solutions other people provided</p>
<p>That solutions just give us advices</p>
<p>You need to learn from that</p>
<p>Not just follow that</p>
<p>And what’s more, pay you all attention to the Note!</p>
<p>Every “Note” in document is pretty important ! !</p>
<hr>
<p>10.How to use a new function</p>
<p>When you meet with unfamiliar function and don’t know how to use it </p>
<p>And you can’t find it’s document (not official module)</p>
<p>You can go to see it’s source code</p>
<p>Maybe you can got you answer there</p>
<p>Don’t be afraid of source code</p>
<p>Generally, the source code is clean code</p>
<p>And they are easily to read ~</p>
<hr>
]]></content>
      <categories>
        <category>Project Conclusion</category>
      </categories>
      <tags>
        <tag>Project Conclusion</tag>
      </tags>
  </entry>
  <entry>
    <title>Refactor Notes</title>
    <url>/2021/01/03/Refactor-Notes/</url>
    <content><![CDATA[<p>1.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code will be more clear if you use keyword &quot;else if&quot;</span><br></pre></td></tr></table></figure>

<p>2.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Use more of constant</span><br><span class="line"></span><br><span class="line">example:(Kotlin)</span><br><span class="line"></span><br><span class="line">const val FAIL &#x3D; 0</span><br><span class="line">if(state &#x3D;&#x3D; FAIL)&#123;</span><br><span class="line">	...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Code will be much more clear</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Refactor</category>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>Refactor</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot Cofiguration</title>
    <url>/2021/03/30/Spring-Boot-Cofiguration/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Spring Boot Lib</title>
    <url>/2021/03/30/Spring-Boot-Lib/</url>
    <content><![CDATA[<p>1.CommandLineRunner</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import org.springframework.boot.CommandLineRunner;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Interface used to indicate that a bean should run when it is contained within a SpringApplication. </span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CommandLineRunner <span class="title">commandLineRunner</span><span class="params">(ApplicationContext context)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> args -&gt;&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Beans in container :&quot;</span>);</span><br><span class="line">            String [] beanNames = context.getBeanDefinitionNames();</span><br><span class="line">            <span class="keyword">for</span>(String beanName:beanNames)&#123;</span><br><span class="line">                System.out.println(beanName);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210330112109868.png" alt="image-20210330112109868"></p>
]]></content>
  </entry>
  <entry>
    <title>Spring Boot Return</title>
    <url>/2021/05/11/Spring-Boot-Return/</url>
    <content><![CDATA[<p>Map to Json</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">objectMapper.writeValueAsString(map);</span><br></pre></td></tr></table></figure>

<p>error:</p>
<blockquote>
<p>Check your ViewResolver setup!</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@ResponseBody</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="返回实体类-Vue-数据传输"><a href="#返回实体类-Vue-数据传输" class="headerlink" title="返回实体类 Vue 数据传输"></a>返回实体类 Vue 数据传输</h4><p>实体类的id你不另外赋值他也会传过去</p>
<p>结合vue </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;el-button @click&#x3D;&quot;handleClick(scope.row)&quot; type&#x3D;&quot;text&quot; size&#x3D;&quot;small&quot;&gt;详细信息&lt;&#x2F;el-button&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(row.id)</span><br></pre></td></tr></table></figure>

<p>很棒</p>
]]></content>
  </entry>
  <entry>
    <title>Spring Boot Static Page</title>
    <url>/2021/05/11/Spring-Boot-Static-Page/</url>
    <content><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">/META-INF/resources/  </span><br><span class="line">/resources/  </span><br><span class="line">/<span class="keyword">static</span>/  </span><br><span class="line">/<span class="keyword">public</span>/</span><br></pre></td></tr></table></figure>

<p>Then access directly</p>
]]></content>
  </entry>
  <entry>
    <title>Spring Boot cmd</title>
    <url>/2021/03/30/Spring-Boot-cmd/</url>
    <content><![CDATA[<p>run app</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mvn spring-boot:run</span><br></pre></td></tr></table></figure>

<p>get jar</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mvn clean package</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Tip:</p>
<p>execute mvn goal or configure env</p>
</blockquote>
<p>run jar</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>Spring Boot Test</title>
    <url>/2021/03/30/Spring-Boot-Test/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">error</span><br><span class="line">MockMvc null pointer</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">solution</span><br><span class="line">add @RunWith(SpringRunner.class) before the class</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> freejim.icu.exp1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.web.servlet.MockMvc;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.web.servlet.request.MockMvcRequestBuilders;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.hamcrest.Matchers.equalTo;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;</span><br><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="meta">@AutoConfigureMockMvc</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MvcTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MockMvc mvc;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hello</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        mvc.perform(MockMvcRequestBuilders.get(<span class="string">&quot;/&quot;</span>).accept(MediaType.APPLICATION_JSON))</span><br><span class="line">                .andExpect(status().isOk())</span><br><span class="line">                .andExpect(content().string(equalTo(<span class="string">&quot;Hello, world&quot;</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Spring Boot_exp2</title>
    <url>/2021/04/28/Spring-Boot-exp2/</url>
    <content><![CDATA[<p>list元素重复</p>
<p>list元素数量不对</p>
]]></content>
  </entry>
  <entry>
    <title>Spring Boot with Docker</title>
    <url>/2021/04/26/Spring-Boot-with-Docker/</url>
    <content><![CDATA[<ol>
<li>Jar</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mvn clean install</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>Dockerfile</li>
</ol>
<p>new a “Dockerfile”</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">FROM openjdk:16-jdk-alpine</span><br><span class="line">EXPOSE 8080</span><br><span class="line">ADD docker_demo-0.0.1-SNAPSHOT.jar app.jar</span><br><span class="line">ENTRYPOINT [&quot;java&quot;,&quot;-jar&quot;,&quot;app.jar&quot;]</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>Build images</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker build -t demo&#x2F;hello .</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>Run App</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -p 8080:8080 demo&#x2F;hello</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot fthl</title>
    <url>/2021/06/01/Spring-Boot-fthl/</url>
    <content><![CDATA[<p>数据传输</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">userIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ModelAndView mv = <span class="keyword">new</span> ModelAndView(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">    String info=<span class="string">&quot;abc&quot;</span>;</span><br><span class="line">    mv.addObject(<span class="string">&quot;logInfo&quot;</span>, info);</span><br><span class="line">    <span class="keyword">return</span> mv;</span><br><span class="line">    <span class="comment">//return &quot;user&quot;;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Spring Boot 前端</title>
    <url>/2021/06/08/Spring-Boot-%E5%89%8D%E7%AB%AF/</url>
    <content><![CDATA[<h4 id="spring-boot-Cannot-resolve-MVC-View"><a href="#spring-boot-Cannot-resolve-MVC-View" class="headerlink" title="spring boot Cannot resolve MVC View"></a>spring boot Cannot resolve MVC View</h4><p>添加依赖</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-freemarker&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Spring Boot 目录结构</title>
    <url>/2021/06/20/Spring-Boot-%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<h4 id="Spring-Boot保存文件"><a href="#Spring-Boot保存文件" class="headerlink" title="Spring Boot保存文件"></a>Spring Boot保存文件</h4><p>/ 根目录在static内</p>
<p>不加的话，新建的文件在项目根目录</p>
<p>外部请求文件</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">http://localhost:8080/data.csv</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Spring Boot 返回CSV</title>
    <url>/2021/06/20/Spring-Boot-%E8%BF%94%E5%9B%9ECSV/</url>
    <content><![CDATA[<p>最需要明确的一点: 不同于浏览器，axois是无法直接通过请求进行文件下载的</p>
<p>正确方式:</p>
<p>前端：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">axios(&#123;</span><br><span class="line">        withCredentials: <span class="literal">true</span>,</span><br><span class="line">        method: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">        url: <span class="string">&#x27;/admin/data.csv&#x27;</span>,</span><br><span class="line">        responseType: <span class="string">&#x27;blob&#x27;</span>,</span><br><span class="line">        timeout: <span class="number">4000</span>,</span><br><span class="line">        data: <span class="built_in">this</span>.tableData</span><br><span class="line">      &#125;).then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(res)</span><br><span class="line">        <span class="keyword">let</span> url = <span class="built_in">window</span>.URL.createObjectURL(<span class="keyword">new</span> Blob([res.data]))</span><br><span class="line">        <span class="keyword">let</span> link = <span class="built_in">document</span>.createElement(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">        link.style.display = <span class="string">&#x27;none&#x27;</span></span><br><span class="line">        link.href = url</span><br><span class="line">        link.setAttribute(<span class="string">&#x27;download&#x27;</span>, <span class="string">&#x27;data.csv&#x27;</span>)</span><br><span class="line">        <span class="built_in">document</span>.body.appendChild(link)</span><br><span class="line">        link.click()</span><br><span class="line">      &#125;, <span class="function"><span class="params">ErrorEvent</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.$message(<span class="string">&#x27;请求数据失败&#x27;</span>)</span><br><span class="line">      &#125;)</span><br></pre></td></tr></table></figure>

<p>后端</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/admin/data.csv&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getExcel</span><span class="params">(<span class="meta">@RequestBody</span> JSONArray array, HttpServletResponse response)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        System.out.println(array);</span><br><span class="line">        String csvContent = analyseService.buildCSV(array);</span><br><span class="line">        response.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        response.setContentType(<span class="string">&quot;multipart/form-data&quot;</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment;fileName=data.csv&quot;</span>);</span><br><span class="line">        OutputStream out = response.getOutputStream();</span><br><span class="line">        out.write(csvContent.getBytes());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Spring Boot 部署</title>
    <url>/2021/06/19/Spring-Boot-%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h4 id="Spring-Boot打包"><a href="#Spring-Boot打包" class="headerlink" title="Spring Boot打包"></a>Spring Boot打包</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mvn clean</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mvn package</span><br></pre></td></tr></table></figure>

<hr>
<p><a href="http://freejim.icu/2021/04/26/Spring-Boot-with-Docker/">Docker Spring Boot</a></p>
<h4 id="Spring-Boot-云服务器-Mysql"><a href="#Spring-Boot-云服务器-Mysql" class="headerlink" title="Spring Boot 云服务器 Mysql"></a>Spring Boot 云服务器 Mysql</h4><p>docker拉镜像建立MySQL方便</p>
]]></content>
  </entry>
  <entry>
    <title>Spring MVC Tutorial</title>
    <url>/2021/01/07/Spring-MVC-Tutorial/</url>
    <content><![CDATA[<p>1.New a Empty Maven project</p>
<p>2.Add “Web” module</p>
<p>Go to “Project Structure” – “Modules”</p>
<p>3.Config dependencies</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<hr>
<p>4.New “ApplicationContext.xml” in classpath</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;xxx&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>Description</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">annotation-driven --  Spring MVC Controller programming model</span><br><span class="line">default-servlet-handler -- Configures a handler for serving static resources</span><br></pre></td></tr></table></figure>

<hr>
<p>5.Config “web.xml”</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:ApplicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<hr>
<p>6.Build Artifact</p>
<p>Go to “Project Structure”</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Web Application exploded</span><br></pre></td></tr></table></figure>

<p>Introduction</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The dependencies will be put in a folder named &quot;lib&quot; in &quot;WEB-INF&quot;</span><br></pre></td></tr></table></figure>

<hr>
<p>7.Configure Tomcat</p>
<p>Go to “Deployment” </p>
<p>Put war in it</p>
<p>Then change the “Application context” to “/“</p>
<p>So that you can access your application directly </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost:8080</span><br></pre></td></tr></table></figure>

<hr>
<p>END</p>
]]></content>
      <categories>
        <category>SpringMVC</category>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Tutorial</tag>
        <tag>SpringMVC</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Security Fliter</title>
    <url>/2021/05/25/Spring-Security-Fliter/</url>
    <content><![CDATA[<p>Difference from addBefore and addAfter</p>
<h4 id="Security-拦截多请求"><a href="#Security-拦截多请求" class="headerlink" title="Security 拦截多请求"></a>Security 拦截多请求</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">http.antMatcher(<span class="string">&quot;/user/**&quot;</span>).antMatcher(<span class="string">&quot;/login/dgut&quot;</span>).authorizeRequests()...</span><br></pre></td></tr></table></figure>

<p>xxxxxxxxxxxxxxxxxx</p>
]]></content>
  </entry>
  <entry>
    <title>Spring Security Tutorial</title>
    <url>/2021/05/25/Spring-Security-Tutorial/</url>
    <content><![CDATA[<p>创建项目时导入相关依赖，会有默认的http认证界面</p>
<h4 id="禁用默认Security登录"><a href="#禁用默认Security登录" class="headerlink" title="禁用默认Security登录"></a>禁用默认Security登录</h4><p>找到Spring Boot启动类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableAutoConfiguration(exclude = &#123;SecurityAutoConfiguration.class&#125;)</span></span><br></pre></td></tr></table></figure>



<p><a href="https://blog.csdn.net/qq_43647821/article/details/111628821">数据库demo</a></p>
<hr>
<h4 id="密码有问题"><a href="#密码有问题" class="headerlink" title="密码有问题"></a>密码有问题</h4><p>密码的编码问题</p>
<p>解决</p>
<p>Add password storage format</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">     </span><br><span class="line">        auth.inMemoryAuthentication()</span><br><span class="line">                .withUser(<span class="string">&quot;user&quot;</span>).password(<span class="string">&quot;&#123;noop&#125;password&quot;</span>).roles(<span class="string">&quot;USER&quot;</span>)</span><br><span class="line">                .and()</span><br><span class="line">                .withUser(<span class="string">&quot;admin&quot;</span>).password(<span class="string">&quot;&#123;noop&#125;password&quot;</span>).roles(<span class="string">&quot;ADMIN&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>



<hr>
<h4 id="Spring-Security-配置数据库验证用户登录"><a href="#Spring-Security-配置数据库验证用户登录" class="headerlink" title="Spring Security 配置数据库验证用户登录"></a>Spring Security 配置数据库验证用户登录</h4><p><a href="https://github.com/a1020151695/Spring-Security-DEMO">Demo</a></p>
<p>1.Security 过滤链</p>
<p>继承WebSecurityConfigurerAdapter 重写其中的configure进行配置</p>
<p>总共3种configure可重写</p>
<p>1.HttpSecurity， 配置路由</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    http.csrf().disable();</span><br><span class="line">    http.apply(<span class="keyword">new</span> JLoginConfigurer&lt;&gt;());</span><br><span class="line">    http.authorizeRequests()</span><br><span class="line">            .antMatchers(<span class="string">&quot;/user/login_frontend&quot;</span>).permitAll()</span><br><span class="line">            .anyRequest()</span><br><span class="line">            .hasAuthority(<span class="string">&quot;USER&quot;</span>).and()</span><br><span class="line">            .formLogin()</span><br><span class="line">            .loginPage(<span class="string">&quot;/user/login_frontend&quot;</span>)</span><br><span class="line">            .defaultSuccessUrl(<span class="string">&quot;http://localhost:8081/?state=user&quot;</span>,<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.AuthenticationManagerBuilder， 配置认证</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">//        auth.inMemoryAuthentication().withUser(&quot;user&quot;).password(passwordEncoder.encode(&quot;123456&quot;)).roles(&quot;USER&quot;).authorities(&quot;USER&quot;);  </span></span><br><span class="line"><span class="comment">//        auth.inMemoryAuthentication().withUser(&quot;user1&quot;).password(passwordEncoder.encode(&quot;123456&quot;)).roles(&quot;USER&quot;).authorities(&quot;USER&quot;);</span></span><br><span class="line">          auth.userDetailsService(userService);</span><br><span class="line">          auth.jdbcAuthentication().passwordEncoder(passwordEncoder).rolePrefix(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>3.WebSecurity， 配置静态资源的访问</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(WebSecurity web)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">// static resource</span></span><br><span class="line">    web.ignoring().antMatchers(<span class="string">&quot;/css/**&quot;</span>, <span class="string">&quot;/img/**&quot;</span>, <span class="string">&quot;/**/*.png&quot;</span>); <span class="comment">// 忽略对这些请求的拦截</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>重点在对于认证的configure</p>
<p>其中另外涉及到了两个东西</p>
<p>UserService，PasswordEncoder</p>
<p>UserService实现UserDetailsService接口，实现loadUserByUsername方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> freejim.icu.security_demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetails;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetailsService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UsernameNotFoundException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.password.PasswordEncoder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService</span> <span class="keyword">implements</span> <span class="title">UserDetailsService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    UserRepository userRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    PasswordEncoder passwordEncoder;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">insert</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//存在数据库中的密码应该为密文</span></span><br><span class="line">        <span class="comment">// 不可少！不然密码编码错误，会导致正确的密码也无法登录</span></span><br><span class="line">        user.setPassword(passwordEncoder.encode(user.getPassword())); </span><br><span class="line">        <span class="keyword">return</span> userRepository.save(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserDetails <span class="title">loadUserByUsername</span><span class="params">(String name)</span> <span class="keyword">throws</span> UsernameNotFoundException </span>&#123;</span><br><span class="line">        User user = userRepository.findByName(name);</span><br><span class="line">        System.out.println(<span class="string">&quot;认证中...&quot;</span>);</span><br><span class="line">        List&lt;SimpleGrantedAuthority&gt; authorities = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        authorities.add(<span class="keyword">new</span> SimpleGrantedAuthority(user.getRole()));</span><br><span class="line">        <span class="keyword">if</span> (user == <span class="keyword">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;nobody&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> org.springframework.security.core.userdetails.User(user.getUsername(), user.getPassword(), authorities);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>PasswordEncoder</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> freejim.icu.security_demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.password.PasswordEncoder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span>  <span class="comment">// 自动装配</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PasswordUtil</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">PasswordEncoder <span class="title">passwordEncoder</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>上面又涉及到和数据库的交互</p>
<p>即UserRepository 和User</p>
<p>UserRepository 完成与数据库的交互</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> freejim.icu.security_demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Repository</span>  <span class="comment">// 注解实现，依赖于jpa</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">User</span>,<span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line">    <span class="function">User <span class="title">findByName</span><span class="params">(String name)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>User 其实不只是实体类那么简单，其实现了很重要的UserDetails接口</p>
<p>UserDetails 是在认证过程中负责用户信息储存的接口</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> freejim.icu.security_demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.GrantedAuthority;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.authority.SimpleGrantedAuthority;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetails;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.Entity;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.GeneratedValue;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.GenerationType;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Id;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Entity(name = &quot;tb_user&quot;)</span>  <span class="comment">// tb_user 为表名</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">UserDetails</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span> <span class="comment">//标识为主键</span></span><br><span class="line">    <span class="meta">@GeneratedValue(strategy = GenerationType.IDENTITY)</span>  <span class="comment">//主键自增</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String role;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Collection&lt;? extends GrantedAuthority&gt; getAuthorities() &#123;</span><br><span class="line">        List&lt;SimpleGrantedAuthority&gt; simpleGrantedAuthorities = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        simpleGrantedAuthorities.add(<span class="keyword">new</span> SimpleGrantedAuthority(<span class="string">&quot;role&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> simpleGrantedAuthorities;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isAccountNonExpired</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isAccountNonLocked</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isCredentialsNonExpired</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEnabled</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>然后是数据库的配置</p>
<p>application.properties</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">spring.datasource.driver-class-name&#x3D;com.mysql.cj.jdbc.Driver</span><br><span class="line">spring.datasource.url&#x3D;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;db_authority?serverTimezone&#x3D;GMT%2B8</span><br><span class="line">spring.datasource.username&#x3D;root</span><br><span class="line">spring.datasource.password&#x3D;123456</span><br></pre></td></tr></table></figure>

<p>mysql语句</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`tb_user`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;用户名&#x27;</span>,</span><br><span class="line">  <span class="string">`password`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;用户密码&#x27;</span>,</span><br><span class="line">  <span class="string">`role`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;用户角色，所拥有的权限&#x27;</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p>配置完成</p>
<hr>
<p>认证后只通过Cookie</p>
<p>hasRole is the Key</p>
<hr>
<h4 id="Spring-Security-定制认证"><a href="#Spring-Security-定制认证" class="headerlink" title="Spring Security 定制认证"></a>Spring Security 定制认证</h4><p>整合vue</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    http.authorizeRequests()</span><br><span class="line">            .antMatchers(<span class="string">&quot;/user/**&quot;</span>)  <span class="comment">// 匹配所有请求</span></span><br><span class="line">            .hasAnyRole(<span class="string">&quot;USER&quot;</span>).and()</span><br><span class="line">            .formLogin()</span><br><span class="line">            .loginPage(<span class="string">&quot;http://localhost:8081/loginpage&quot;</span>).permitAll()  <span class="comment">// 自定义登录页面</span></span><br><span class="line">            .loginProcessingUrl(<span class="string">&quot;/auth&quot;</span>)</span><br><span class="line">   .defaultSuccessUrl(<span class="string">&quot;http://localhost:8081/&quot;</span>).and()  <span class="comment">// 配置登陆成功后的跳转页面</span></span><br><span class="line">            .logout()</span><br><span class="line">            .logoutUrl(<span class="string">&quot;/user/logout&quot;</span>)</span><br><span class="line">            .logoutSuccessUrl(<span class="string">&quot;/user/login_frontend?logout&quot;</span>);</span><br><span class="line">    http.csrf().disable();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="defaultSuccessUrl"><a href="#defaultSuccessUrl" class="headerlink" title="defaultSuccessUrl"></a>defaultSuccessUrl</h4><p>通过表单登录的走这个</p>
<p>而且注意，其分为继续访问和指定访问模式</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">.defaultSuccessUrl(<span class="string">&quot;http://localhost:8081/?state=user&quot;</span>,<span class="keyword">true</span>);</span><br></pre></td></tr></table></figure>

<p>true 为alwaysUse</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Spring Security error</title>
    <url>/2021/06/12/Spring-Security-error/</url>
    <content><![CDATA[<h4 id="Encoded-password-does-not-look-like-BCrypt"><a href="#Encoded-password-does-not-look-like-BCrypt" class="headerlink" title="Encoded password does not look like BCrypt"></a>Encoded password does not look like BCrypt</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">PasswordEncoder passwordEncoder;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;       auth.inMemoryAuthentication().withUser(<span class="string">&quot;user&quot;</span>).password(passwordEncoder.encode(<span class="string">&quot;123456&quot;</span>)).roles(<span class="string">&quot;USER&quot;</span>).authorities(<span class="string">&quot;USER&quot;</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PasswordUtil</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">PasswordEncoder <span class="title">passwordEncoder</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="Spring-Security-认证之后还是403"><a href="#Spring-Security-认证之后还是403" class="headerlink" title="Spring Security 认证之后还是403"></a>Spring Security 认证之后还是403</h4><p>除了的csrf问题，有可能是userDetailsService没写好</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">http.csrf().disable();</span><br></pre></td></tr></table></figure>

<p>userDetailsService一定要把认证用户对应的权限加进去</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> UserDetails <span class="title">loadUserByUsername</span><span class="params">(String name)</span> <span class="keyword">throws</span> UsernameNotFoundException </span>&#123;</span><br><span class="line">    User user = userRepository.findByName(name);</span><br><span class="line">    System.out.println(<span class="string">&quot;认证中...&quot;</span>);</span><br><span class="line">    List&lt;SimpleGrantedAuthority&gt; authorities = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    authorities.add(<span class="keyword">new</span> SimpleGrantedAuthority(user.getRole()));</span><br><span class="line">    <span class="keyword">if</span> (user == <span class="keyword">null</span>)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;nobody&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> org.springframework.security.core.userdetails.User(user.getUsername(), user.getPassword(), authorities);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="Spring-Security-不起作用"><a href="#Spring-Security-不起作用" class="headerlink" title="Spring Security 不起作用"></a>Spring Security 不起作用</h4><p>只处理POST请求，GET请求无效</p>
]]></content>
  </entry>
  <entry>
    <title>Spring packing</title>
    <url>/2021/04/26/Spring-packing/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mvn clean install</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Spring1重构</title>
    <url>/2020/11/05/Spring1%E9%87%8D%E6%9E%84/</url>
    <content><![CDATA[<p>​    1.javax 是由Tomcat提供的</p>
<p>2.Context 养成好习惯，用完记得close()</p>
<p>3.“一次性”的变量能省就省</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">	WebApplicationContext context=WebApplicationContextUtils.getWebApplicationContext(request.getServletContext());</span><br><span class="line">	context.getBean(<span class="string">&quot;helloImpl&quot;</span>,Hello.class).sayHello();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>4.Spring DI Bean之间是由依赖关系的，被引用的那个Bean应该先被创建</p>
<p>XML的构建是按从上到下顺序的</p>
<p>5.Static Factory 方法获取Bean</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;bean1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.dgut.factory.StaticFactory&quot;</span> <span class="attr">factory-method</span>=<span class="string">&quot;createBean&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- you can set properties here  --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- you can also set constructor-arg here  --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dgut.factory;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaticFactory</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MyBean <span class="title">createBean</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> MyBean(<span class="string">&quot;Alice&quot;</span>,<span class="number">15</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testStaticFactory</span><span class="params">()</span> </span>&#123;<span class="comment">//static </span></span><br><span class="line">	ConfigurableApplicationContext context =<span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;StaticFactory.xml&quot;</span>);</span><br><span class="line">	System.out.print(context.getBean(<span class="string">&quot;bean1&quot;</span>,MyBean.class));</span><br><span class="line">	context.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>只要beans.xsd</p>
<p>7.BeanFactory 方法获取Bean</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dgut.factory;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FactoryBean</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> MyBean <span class="title">createBean</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> MyBean();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- factory instance to get bean --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;BeanFactory1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.dgut.factory.FactoryBean&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;bean1&quot;</span> <span class="attr">factory-bean</span>=<span class="string">&quot;BeanFactory1&quot;</span> <span class="attr">factory-method</span>=<span class="string">&quot;createBean&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>只要beans.xsd</p>
<p>8.由方法返回的像context这样的对象是会自动close()的</p>
<p>也就是说，可立即使用，但不能二次使用</p>
<p>9.在XML中的properties—对应的是getter和setter</p>
<p>构造函数另有constructor-arg</p>
<p>但特殊情况下，properties可以代替constructor-arg，不写constructor-arg</p>
<p>原因是缺省constructor-arg时调用不含参的构造函数</p>
<p>10.当prototype和singleton都指向同一个类时</p>
<p>prototype 就没有意义了</p>
<p>11.singleton的意义是在容启启动之初检查Bean是否有问题，很有必要</p>
<p>所有，Bean 的默认加载方式是singleton</p>
<p>12.XML中的autowire</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;Jim&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.dgut.autowire.Person&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byName&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Jim&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;address&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.dgut.autowire.Address&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;city&quot;</span> <span class="attr">value</span>=<span class="string">&quot;meizhou&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dgut.autowire;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line">	Address address;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name, Address address)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>();</span><br><span class="line">		<span class="keyword">this</span>.name = name;</span><br><span class="line">		<span class="keyword">this</span>.address = address;</span><br><span class="line">	&#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line">----------------------------------------------------------</span><br><span class="line"><span class="keyword">package</span> com.dgut.autowire;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Address</span> </span>&#123;</span><br><span class="line">	String city;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Address</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Address</span><span class="params">(String city)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>();</span><br><span class="line">		<span class="keyword">this</span>.city = city;</span><br><span class="line">	&#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>byName对应Field(也可以说property)名</p>
<p>byType </p>
<blockquote>
<p>“byType” Autowiring if there is exactly one bean of the property type in the container. If there is<br>more than one, a fatal error is raised, and you cannot use byType autowiring for that bean. </p>
</blockquote>
<hr>
<p>第一次重构就到这里啦</p>
<p>重构追求精简，清晰，但难免也会又进死胡同</p>
<p>重构完一个地方就要进行单元测试，不然到时候全部写完测出错误很麻烦</p>
<p>这次只展示了重构后的代码</p>
<p>重构前的代码。。忘记存了，下次重构不会漏了</p>
]]></content>
      <categories>
        <category>Java</category>
        <category>Spring</category>
      </categories>
      <tags>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring注解是怎么工作的</title>
    <url>/2020/11/05/Spring%E6%B3%A8%E8%A7%A3%E6%98%AF%E6%80%8E%E4%B9%88%E5%B7%A5%E4%BD%9C%E7%9A%84/</url>
    <content><![CDATA[<p>版本说明：Spring 5.2.9 </p>
<p>本文侧重于源码的解读</p>
<p>这里以@Autowired为例</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AutowiredAnnotationBeanPostProcessor</span></span></span><br><span class="line"><span class="class"><span class="keyword">extends</span> <span class="title">Object</span></span></span><br><span class="line"><span class="class"><span class="keyword">implements</span> <span class="title">SmartInstantiationAwareBeanPostProcessor</span>, <span class="title">MergedBeanDefinitionPostProcessor</span>, <span class="title">PriorityOrdered</span>, <span class="title">BeanFactoryAware</span></span></span><br></pre></td></tr></table></figure>

<p><a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/config/BeanPostProcessor.html"><code>BeanPostProcessor</code></a> implementation that autowires annotated fields, setter methods, and arbitrary config methods. Such members to be injected are detected through annotations: by default, Spring’s <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/annotation/Autowired.html"><code>@Autowired</code></a> and <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/annotation/Value.html"><code>@Value</code></a> annotations.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">processInjection</span><span class="params">(Object bean)</span> <span class="keyword">throws</span> BeanCreationException </span>&#123;</span><br><span class="line">		Class&lt;?&gt; clazz = bean.getClass();</span><br><span class="line">		InjectionMetadata metadata = findAutowiringMetadata(clazz.getName(), clazz, <span class="keyword">null</span>);</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			metadata.inject(bean, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">catch</span> (BeanCreationException ex) &#123;</span><br><span class="line">			<span class="keyword">throw</span> ex;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">catch</span> (Throwable ex) &#123;</span><br><span class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> BeanCreationException(</span><br><span class="line">					<span class="string">&quot;Injection of autowired dependencies failed for class [&quot;</span> + clazz + <span class="string">&quot;]&quot;</span>, ex);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>



<p>获取AutowiringMetadata后，做inject</p>
<p>其中的AutowiringMetadata，简单的说就是@Autowired</p>
<blockquote>
<p>an <strong>annotation</strong> is a form of syntactic <a href="https://en.wikipedia.org/wiki/Metadata">metadata</a> that can be added to Java <a href="https://en.wikipedia.org/wiki/Source_code">source code</a>.</p>
</blockquote>
<p>这是维基百科上的解释</p>
<p>那Spring又是怎么确定是否存在@Autowired的呢</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> MergedAnnotation&lt;?&gt; findAutowiredAnnotation(AccessibleObject ao) &#123;</span><br><span class="line">	MergedAnnotations annotations = MergedAnnotations.from(ao);</span><br><span class="line">	<span class="keyword">for</span> (Class&lt;? extends Annotation&gt; type : <span class="keyword">this</span>.autowiredAnnotationTypes) &#123;</span><br><span class="line">		MergedAnnotation&lt;?&gt; annotation = annotations.get(type);</span><br><span class="line">		<span class="keyword">if</span> (annotation.isPresent()) &#123;</span><br><span class="line">			<span class="keyword">return</span> annotation;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中的</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> Set&lt;Class&lt;? extends Annotation&gt;&gt; autowiredAnnotationTypes = <span class="keyword">new</span> LinkedHashSet&lt;&gt;(<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.autowiredAnnotationTypes</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">AutowiredAnnotationBeanPostProcessor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.autowiredAnnotationTypes.add(Autowired.class);</span><br><span class="line">		<span class="keyword">this</span>.autowiredAnnotationTypes.add(Value.class);</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="keyword">this</span>.autowiredAnnotationTypes.add((Class&lt;? extends Annotation&gt;)</span><br><span class="line">					ClassUtils.forName(<span class="string">&quot;javax.inject.Inject&quot;</span>, AutowiredAnnotationBeanPostProcessor.class.getClassLoader()));</span><br><span class="line">			logger.trace(<span class="string">&quot;JSR-330 &#x27;javax.inject.Inject&#x27; annotation found and supported for autowiring&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">catch</span> (ClassNotFoundException ex) &#123;</span><br><span class="line">			<span class="comment">// JSR-330 API not available - simply skip.</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>



<p>已经很清晰了，存放了Autowired.class</p>
<p>则回到findAutowiredAnnotation()中，如果</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">MergedAnnotations annotations = MergedAnnotations.from(ao);</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MergedAnnotations</span></span></span><br><span class="line"><span class="class"><span class="keyword">extends</span> <span class="title">Iterable</span>&lt;<span class="title">MergedAnnotation</span>&lt;<span class="title">Annotation</span>&gt;&gt;</span></span><br></pre></td></tr></table></figure>

<p>Provides access to a collection of merged annotations, usually obtained from a source such as a <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html?is-external=true"><code>Class</code></a> or <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Method.html?is-external=true"><code>Method</code></a>.</p>
<p>获取这个Bean 的Annotations</p>
<p>然后看其中是否存在Autowired</p>
<p>那么确定是否有Autowired的问题解决了，之后就是inject了</p>
<hr>
<p>首先来看看调用inject()的InjectionMetadata</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InjectionMetadata</span></span></span><br><span class="line"><span class="class"><span class="keyword">extends</span> <span class="title">Object</span></span></span><br></pre></td></tr></table></figure>

<p>Internal class for managing injection metadata. Not intended for direct use in applications.</p>
<p>对的，这个就是依赖注入里的inject</p>
<p>不过，我暂时没有想法去了解，有兴趣的同学可以继续往下了解</p>
<hr>
<p><a href="http://www.avajava.com/tutorials/lessons/how-do-i-list-the-declared-fields-of-a-class.html">Field</a></p>
]]></content>
      <categories>
        <category>Java</category>
        <category>Spring</category>
      </categories>
      <tags>
        <tag>Spring</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue Cookie</title>
    <url>/2021/06/11/Vue-Cookie/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Tensorflow Error Messages</title>
    <url>/2021/01/03/Tensorflow-Error-Messages/</url>
    <content><![CDATA[<p>1.</p>
<p>Error</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ValueError: (&#39;Error when checking model target: expected no data, but got:&#39;, array([&#39;6947&#39;, &#39;7232&#39;, &#39;7967&#39;, ..., &#39;5646&#39;, &#39;3554&#39;, &#39;4656&#39;], dtype&#x3D;&#39;&lt;U4&#39;))</span><br></pre></td></tr></table></figure>

<p>Reason</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">When using model.fit() the training data is not matching to the label array</span><br><span class="line">In other words, the length of training data array should be the same as label array</span><br></pre></td></tr></table></figure>



<p>2.</p>
<p>Error</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ValueError: Please provide as model inputs either a single array or a list of arrays.</span><br></pre></td></tr></table></figure>

<p>Solution</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">training_data&#x3D;np.array(training_ataset)</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Machine Learn</category>
        <category>Tensorflow</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Machine Learn</tag>
      </tags>
  </entry>
  <entry>
    <title>Typora Shortcut</title>
    <url>/2021/03/08/Typora-Shortcut/</url>
    <content><![CDATA[<p>编辑</p>
<table>
<thead>
<tr>
<th><a href="https://defkey.com/what-means/ctrl-h">Ctrl + H</a></th>
<th>Replace</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://defkey.com/what-means/ctrl-d">Ctrl + D</a></td>
<td>Select Word</td>
</tr>
<tr>
<td><a href="https://defkey.com/what-means/ctrl-l">Ctrl + L</a></td>
<td>Select Line/Sentence</td>
</tr>
<tr>
<td><a href="https://defkey.com/what-means/ctrl-home">Ctrl + Home</a></td>
<td>Jump to Top</td>
</tr>
<tr>
<td><a href="https://defkey.com/what-means/ctrl-end">Ctrl + End</a></td>
<td>Jump to Bottom</td>
</tr>
<tr>
<td><a href="https://defkey.com/what-means/f3">F3</a></td>
<td>Find Next</td>
</tr>
<tr>
<td><a href="https://defkey.com/what-means/shift-f3">↑  Shift + F3</a></td>
<td>Find Previous</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<p>段落</p>
<table>
<thead>
<tr>
<th><a href="https://defkey.com/what-means/ctrl-1">Ctrl + 1</a>~6</th>
<th>set Heading 1</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://defkey.com/what-means/ctrl-t">Ctrl + T</a></td>
<td>Table</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<p>格式</p>
<table>
<thead>
<tr>
<th>[Ctrl + ↑  Shift + <code>](https://defkey.com/what-means/ctrl-shift-</code>)</th>
<th>Code</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://defkey.com/what-means/ctrl-k">Ctrl + K</a></td>
<td>Hyperlink</td>
</tr>
<tr>
<td>``</td>
<td>代码</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<p>视图</p>
<table>
<thead>
<tr>
<th><a href="https://defkey.com/what-means/ctrl-shift-minus">Ctrl + ↑  Shift + -</a></th>
<th>缩放</th>
</tr>
</thead>
<tbody><tr>
<td>Ctrl+shift+l</td>
<td>侧边栏</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Shortcut</category>
      </categories>
      <tags>
        <tag>Shortcut</tag>
        <tag>Typora</tag>
      </tags>
  </entry>
  <entry>
    <title>VS Error</title>
    <url>/2021/03/08/VS-Error/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Warning: The following VS instances are excluded because the English language pack is unavailable.</span><br></pre></td></tr></table></figure>

<p>Solve </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I have re-installed vs2017 with English language pack to solve this problem.</span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/08/VS-Error/image-20201115190024960.png" alt="img1"></p>
]]></content>
  </entry>
  <entry>
    <title>Vue Spring Security 整合</title>
    <url>/2021/06/12/Vue-Spring-Security-%E6%95%B4%E5%90%88/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Vue Tutorial</title>
    <url>/2021/06/01/Vue-Tutorial/</url>
    <content><![CDATA[<p><a href="https://blog.jetbrains.com/webstorm/2019/03/get-started-building-apps-with-vue-js-in-webstorm/">官方介绍</a></p>
<h2 id="Vue目录结构"><a href="#Vue目录结构" class="headerlink" title="Vue目录结构"></a>Vue目录结构</h2><p><img src="https://www.runoob.com/wp-content/uploads/2017/01/B6E593E3-F284-4C58-A610-94C6ACDAD485.jpg" alt="img"></p>
<table>
<thead>
<tr>
<th>build</th>
<th>项目构建(webpack)相关代码</th>
</tr>
</thead>
<tbody><tr>
<td>config</td>
<td>配置目录，包括端口号等。我们初学可以使用默认的。</td>
</tr>
<tr>
<td>node_modules</td>
<td>npm 加载的项目依赖模块</td>
</tr>
<tr>
<td>src</td>
<td>这里是我们要开发的目录，基本上要做的事情都在这个目录里。里面包含了几个目录及文件：assets: 放置一些图片，如logo等。components: 目录里面放了一个组件文件，可以不用。App.vue: 项目入口文件，我们也可以直接将组件写这里，而不使用 components 目录。main.js: 项目的核心文件。</td>
</tr>
<tr>
<td>static</td>
<td>静态资源目录，如图片、字体等。</td>
</tr>
<tr>
<td>test</td>
<td>初始测试目录，可删除</td>
</tr>
<tr>
<td>.xxxx文件</td>
<td>这些是一些配置文件，包括语法配置，git配置等。</td>
</tr>
<tr>
<td>index.html</td>
<td>首页入口文件，你可以添加一些 meta 信息或统计代码啥的。</td>
</tr>
<tr>
<td>package.json</td>
<td>项目配置文件。</td>
</tr>
</tbody></table>
<p>Webstorm项目构建工具</p>
<blockquote>
<p>By default, all the apps generated with the Vue CLI use the webpack dev server</p>
</blockquote>
<p>Components</p>
<blockquote>
<p>Vue is a framework for building modularized front-end apps, so it considers files with the .vue extension as components.</p>
</blockquote>
<blockquote>
<p>Components contain three sections for code: template (HTML), script (JavaScript or TypeScript), and styles (CSS or any stylesheet language).</p>
</blockquote>
<p>App.vue</p>
<blockquote>
<p>The project template creates a file called <em>App.vue</em> which is the primary component that is attached to the root element defined in the Vue instance.</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;img alt&#x3D;&quot;Vue logo&quot; src&#x3D;&quot;.&#x2F;assets&#x2F;logo.png&quot;&gt;</span><br><span class="line">    &lt;HelloWorld&#x2F;&gt;  &#x2F;&#x2F; 创建好的组件可以当作自定义标签使用</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;  &#x2F;&#x2F; 导入Helloworld组件，下面两步都不可少</span><br><span class="line">import HelloWorld from &#39;.&#x2F;components&#x2F;HelloWorld.vue&#39; </span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;App&#39;,</span><br><span class="line">  components: &#123;  </span><br><span class="line">    HelloWorld</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<p>Helloworld.vue</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;HelloWorld&#39;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    msg: String</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>reveals the <code>msg</code> variable as a property (called <code>props</code>) of the component, and that is how the message data is passed into the HelloWorld component.</p>
</blockquote>
<p>How to pass data</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;img alt&#x3D;&quot;Vue logo&quot; src&#x3D;&quot;.&#x2F;assets&#x2F;logo.png&quot;&gt;</span><br><span class="line">    &lt;HelloWorld msg&#x3D;&quot;Jim&quot;&#x2F;&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br></pre></td></tr></table></figure>



<p>访问assert内的文件</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./assets/logo.png&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure>



<hr>
<p>export</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">&#x27;App&#x27;</span>,  <span class="comment">// 其他文件import当前vue时用的名字</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>main.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span>  <span class="comment">// 从文件中导入App组件</span></span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span>  <span class="comment">// 关闭生产模式</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;  <span class="comment">// 创建了vue实例</span></span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App),</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p>The call to $mount(‘#app’); attaches the Vue instance to the root DOM element, which is an element with an id of “app”. You can find the root element inside of public\index.html</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">noscript</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>We&#x27;re sorry but <span class="tag">&lt;<span class="name">%=</span> <span class="attr">htmlWebpackPlugin.options.title</span> %&gt;</span> doesn&#x27;t work properly without JavaScript enabled. Please enable it to continue.<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- built files will be auto injected --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<hr>
<p>method</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;HelloWorld&#39;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    &#x2F;&#x2F; msg: String</span><br><span class="line">  &#125;,</span><br><span class="line">  data: function () &#123;</span><br><span class="line">    return &#123;msg:&quot;Welcome!&quot;&#125;;  &#x2F;&#x2F; msg is like variable name</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    changeMessage:function () &#123;  &#x2F;&#x2F; changeMessage is like method name, which is used for invoke</span><br><span class="line">      this.msg&#x3D;&quot;Welcome man&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;button v-on:click&#x3D;&quot;changeMessage&quot;&gt;Change Message&lt;&#x2F;button&gt;</span><br></pre></td></tr></table></figure>







<p>localhost显示的首页</p>
<h2 id="默认首页"><a href="#默认首页" class="headerlink" title="默认首页"></a>默认首页</h2><p>其实就是 public 文件夹中的index.html</p>
<p>然后其用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="WebStorm与Vue"><a href="#WebStorm与Vue" class="headerlink" title="WebStorm与Vue"></a>WebStorm与Vue</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">虽然最新版的前端开发利器WebStorm支持了Vue，但是大部分人的WebStorm依然是默认不支持Vue的老版本（比如之前的我），所以需要手动添加WebStorm对Vue的支持。要想让WebStorm支持Vue主要分两步，第一步是安装Vue.js插件，使得WebStorm能够对Vue语法进行提示；第二步是配置Vue模板，即快速创建Vue文件。</span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>Vue error</title>
    <url>/2021/06/09/Vue-error/</url>
    <content><![CDATA[<blockquote>
<p>Component template should contain exactly one root element</p>
</blockquote>
<p>解决</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用一个div把template内的多个标签包起来就行</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="vue-没有错误信息"><a href="#vue-没有错误信息" class="headerlink" title="vue 没有错误信息"></a>vue 没有错误信息</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm run build  //可以显示详细信息</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Vue js</title>
    <url>/2021/06/12/Vue-js/</url>
    <content><![CDATA[<h4 id="Vue-页面加载时执行函数"><a href="#Vue-页面加载时执行函数" class="headerlink" title="Vue 页面加载时执行函数"></a>Vue 页面加载时执行函数</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;Redirect&#39;,</span><br><span class="line">  mounted: function () &#123;</span><br><span class="line">    this.$router.push(&#39;&#x2F;&#39;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>





]]></content>
  </entry>
  <entry>
    <title>Vue model</title>
    <url>/2021/06/07/Vue-model/</url>
    <content><![CDATA[<blockquote>
<p>子组件和父组件数据的双向绑定</p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>Vue localhost</title>
    <url>/2021/06/06/Vue-localhost/</url>
    <content><![CDATA[<h2 id="只能通过localhost访问"><a href="#只能通过localhost访问" class="headerlink" title="只能通过localhost访问"></a>只能通过localhost访问</h2><p>解决:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.查看&#96;config&#96;文件夹下的 &#96;index.js&#96;，将&#96;dev&#96;中将&#96;host&#96;重新定义为：&#96;0.0.0.0&#96;即可</span><br><span class="line"></span><br><span class="line">2.修改&#96;package.json&#96;中&#96;script&#96;下&#96;dev&#96;的值，在后面加入&#96;--host 0.0.0.0&#96; 也可以解决</span><br></pre></td></tr></table></figure>

<p>Note</p>
<blockquote>
<p>别忘了把防火墙给关了</p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>Vue 数据传输</title>
    <url>/2021/06/11/Vue-%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93/</url>
    <content><![CDATA[<h4 id="页面刷新后，prototype挂载的全局变量消失"><a href="#页面刷新后，prototype挂载的全局变量消失" class="headerlink" title="页面刷新后，prototype挂载的全局变量消失"></a>页面刷新后，prototype挂载的全局变量消失</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在页面刷新时</span><br><span class="line">vue实例对象被重新构造</span><br><span class="line">所有变量都被初始化</span><br></pre></td></tr></table></figure>

<p>解决：</p>
<hr>
<h4 id="Vue-路由传递数据"><a href="#Vue-路由传递数据" class="headerlink" title="Vue 路由传递数据"></a>Vue 路由传递数据</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">handleClick (row) &#123;</span><br><span class="line">      <span class="built_in">this</span>.$router.push(&#123;</span><br><span class="line">        path: <span class="string">&#x27;/unpostInfo&#x27;</span>,</span><br><span class="line">        query: &#123;</span><br><span class="line">          unpostInfoId: <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>数据获取</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">this</span>.$route.query.unpostInfoId</span><br></pre></td></tr></table></figure>

<p>Ps:是$route而不是router</p>
<hr>
<h4 id="Vue-表格传递数据-一行的全部数据"><a href="#Vue-表格传递数据-一行的全部数据" class="headerlink" title="Vue 表格传递数据(一行的全部数据)"></a>Vue 表格传递数据(一行的全部数据)</h4><p>scope</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">slot-scope</span>=<span class="string">&quot;scope&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;handleClick(scope.row)&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">size</span>=<span class="string">&quot;small&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;scope.row.role === &#x27;USER&#x27;&quot;</span> <span class="attr">:id</span>=<span class="string">&quot;scope.row.username&quot;</span>&gt;</span>锁定<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;handleClick(scope.row)&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">size</span>=<span class="string">&quot;small&quot;</span> <span class="attr">v-else</span> <span class="attr">:id</span>=<span class="string">&quot;scope.row.username&quot;</span>&gt;</span>取消锁定<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure>



<hr>
<h4 id="Vue-设置id"><a href="#Vue-设置id" class="headerlink" title="Vue 设置id"></a>Vue 设置id</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:id</span>=<span class="string">&quot;scop.row.username&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<hr>
]]></content>
  </entry>
  <entry>
    <title>Vue 权限管理</title>
    <url>/2021/06/12/Vue-%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Vue 组件之间交互</title>
    <url>/2021/06/15/Vue-%E7%BB%84%E4%BB%B6%E4%B9%8B%E9%97%B4%E4%BA%A4%E4%BA%92/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Vue 跨域</title>
    <url>/2021/06/07/Vue-%E8%B7%A8%E5%9F%9F/</url>
    <content><![CDATA[<p>找到devServer配置项</p>
<p>其所在位置分两种情况</p>
<p>1.如果使用</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vue init webpack projectName</span><br></pre></td></tr></table></figure>

<p>构建vue项目，则再/build/webpack.dev.conf.js中</p>
<p>然后其引用了/config/index中的value</p>
<p>2.如果使用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vue create &lt;project-name&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">devServer: &#123;</span><br><span class="line">   	port:<span class="number">8081</span>,  <span class="comment">// 代理端口</span></span><br><span class="line">   	host: <span class="string">&#x27;0.0.0.0&#x27;</span>,</span><br><span class="line">       proxy:&#123;</span><br><span class="line">           <span class="string">&#x27;/health-post&#x27;</span>:&#123;</span><br><span class="line">       		target:<span class="string">&#x27;http://localhost:8080/&#x27;</span>,  <span class="comment">//目标服务器端口</span></span><br><span class="line">       		changeOrigin:<span class="literal">true</span>,</span><br><span class="line">       		pathRewrite: &#123;</span><br><span class="line">         		<span class="string">&#x27;^/health-post&#x27;</span>: <span class="string">&#x27;/health-post&#x27;</span>  <span class="comment">// 不可省</span></span><br><span class="line">       &#125;</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>请求成功的url</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost:8081&#x2F;health-post</span><br></pre></td></tr></table></figure>

<p>就是vue的端口，而不是目标服务器端口（8080）</p>
<p>真正和服务器交互的是vue的代理</p>
]]></content>
  </entry>
  <entry>
    <title>Vue 组件库使用</title>
    <url>/2021/06/06/Vue-%E7%BB%84%E4%BB%B6%E5%BA%93%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h3 id="Element"><a href="#Element" class="headerlink" title="Element"></a>Element</h3><ol>
<li>npm安装</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm i element-ui -S</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>main.js</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">&#x27;element-ui&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;element-ui/lib/theme-chalk/index.css&#x27;</span></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span></span><br><span class="line">Vue.use(ElementUI)</span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">  router,</span><br><span class="line">  components: &#123; App &#125;,</span><br><span class="line">  template: <span class="string">&#x27;&lt;App/&gt;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="3">
<li><p>使用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;el-container style&#x3D;&quot;height: 500px; border: 1px solid #eee&quot;&gt;</span><br><span class="line">  &lt;el-aside width&#x3D;&quot;200px&quot; style&#x3D;&quot;background-color: rgb(238, 241, 246)&quot;&gt;</span><br><span class="line">    &lt;el-menu :default-openeds&#x3D;&quot;[&#39;1&#39;, &#39;3&#39;]&quot;&gt;</span><br><span class="line">      &lt;el-submenu index&#x3D;&quot;1&quot;&gt;</span><br><span class="line">        &lt;template slot&#x3D;&quot;title&quot;&gt;&lt;i class&#x3D;&quot;el-icon-s-data&quot;&gt;&lt;&#x2F;i&gt;主面板&lt;&#x2F;template&gt;</span><br><span class="line">        &lt;el-menu-item-group&gt;</span><br><span class="line">          &lt;template slot&#x3D;&quot;title&quot;&gt;分组一&lt;&#x2F;template&gt;</span><br><span class="line">          &lt;el-menu-item index&#x3D;&quot;1-1&quot;&gt;选项1&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index&#x3D;&quot;1-2&quot;&gt;选项2&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">        &lt;&#x2F;el-menu-item-group&gt;</span><br><span class="line">        &lt;el-menu-item-group title&#x3D;&quot;分组2&quot;&gt;</span><br><span class="line">          &lt;el-menu-item index&#x3D;&quot;1-3&quot;&gt;选项3&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">        &lt;&#x2F;el-menu-item-group&gt;</span><br><span class="line">        &lt;el-submenu index&#x3D;&quot;1-4&quot;&gt;</span><br><span class="line">          &lt;template slot&#x3D;&quot;title&quot;&gt;选项4&lt;&#x2F;template&gt;</span><br><span class="line">          &lt;el-menu-item index&#x3D;&quot;1-4-1&quot;&gt;选项4-1&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">        &lt;&#x2F;el-submenu&gt;</span><br><span class="line">      &lt;&#x2F;el-submenu&gt;</span><br><span class="line">      &lt;el-submenu index&#x3D;&quot;2&quot;&gt;</span><br><span class="line">        &lt;template slot&#x3D;&quot;title&quot;&gt;&lt;i class&#x3D;&quot;el-icon-menu&quot;&gt;&lt;&#x2F;i&gt;导航二&lt;&#x2F;template&gt;</span><br><span class="line">        &lt;el-menu-item-group&gt;</span><br><span class="line">          &lt;template slot&#x3D;&quot;title&quot;&gt;分组一&lt;&#x2F;template&gt;</span><br><span class="line">          &lt;el-menu-item index&#x3D;&quot;2-1&quot;&gt;选项1&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index&#x3D;&quot;2-2&quot;&gt;选项2&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">        &lt;&#x2F;el-menu-item-group&gt;</span><br><span class="line">        &lt;el-menu-item-group title&#x3D;&quot;分组2&quot;&gt;</span><br><span class="line">          &lt;el-menu-item index&#x3D;&quot;2-3&quot;&gt;选项3&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">        &lt;&#x2F;el-menu-item-group&gt;</span><br><span class="line">        &lt;el-submenu index&#x3D;&quot;2-4&quot;&gt;</span><br><span class="line">          &lt;template slot&#x3D;&quot;title&quot;&gt;选项4&lt;&#x2F;template&gt;</span><br><span class="line">          &lt;el-menu-item index&#x3D;&quot;2-4-1&quot;&gt;选项4-1&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">        &lt;&#x2F;el-submenu&gt;</span><br><span class="line">      &lt;&#x2F;el-submenu&gt;</span><br><span class="line">      &lt;el-submenu index&#x3D;&quot;3&quot;&gt;</span><br><span class="line">        &lt;template slot&#x3D;&quot;title&quot;&gt;&lt;i class&#x3D;&quot;el-icon-setting&quot;&gt;&lt;&#x2F;i&gt;导航三&lt;&#x2F;template&gt;</span><br><span class="line">        &lt;el-menu-item-group&gt;</span><br><span class="line">          &lt;template slot&#x3D;&quot;title&quot;&gt;分组一&lt;&#x2F;template&gt;</span><br><span class="line">          &lt;el-menu-item index&#x3D;&quot;3-1&quot;&gt;选项1&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index&#x3D;&quot;3-2&quot;&gt;选项2&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">        &lt;&#x2F;el-menu-item-group&gt;</span><br><span class="line">        &lt;el-menu-item-group title&#x3D;&quot;分组2&quot;&gt;</span><br><span class="line">          &lt;el-menu-item index&#x3D;&quot;3-3&quot;&gt;选项3&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">        &lt;&#x2F;el-menu-item-group&gt;</span><br><span class="line">        &lt;el-submenu index&#x3D;&quot;3-4&quot;&gt;</span><br><span class="line">          &lt;template slot&#x3D;&quot;title&quot;&gt;选项4&lt;&#x2F;template&gt;</span><br><span class="line">          &lt;el-menu-item index&#x3D;&quot;3-4-1&quot;&gt;选项4-1&lt;&#x2F;el-menu-item&gt;</span><br><span class="line">        &lt;&#x2F;el-submenu&gt;</span><br><span class="line">      &lt;&#x2F;el-submenu&gt;</span><br><span class="line">    &lt;&#x2F;el-menu&gt;</span><br><span class="line">  &lt;&#x2F;el-aside&gt;</span><br><span class="line"></span><br><span class="line">  &lt;el-container&gt;</span><br><span class="line">    &lt;el-header style&#x3D;&quot;text-align: right; font-size: 12px&quot;&gt;</span><br><span class="line">      &lt;el-dropdown&gt;</span><br><span class="line">        &lt;i class&#x3D;&quot;el-icon-setting&quot; style&#x3D;&quot;margin-right: 15px&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">        &lt;el-dropdown-menu slot&#x3D;&quot;dropdown&quot;&gt;</span><br><span class="line">          &lt;el-dropdown-item&gt;查看&lt;&#x2F;el-dropdown-item&gt;</span><br><span class="line">          &lt;el-dropdown-item&gt;新增&lt;&#x2F;el-dropdown-item&gt;</span><br><span class="line">          &lt;el-dropdown-item&gt;删除&lt;&#x2F;el-dropdown-item&gt;</span><br><span class="line">        &lt;&#x2F;el-dropdown-menu&gt;</span><br><span class="line">      &lt;&#x2F;el-dropdown&gt;</span><br><span class="line">      &lt;span&gt;王小虎&lt;&#x2F;span&gt;</span><br><span class="line">    &lt;&#x2F;el-header&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-main&gt;</span><br><span class="line">      &lt;el-table :data&#x3D;&quot;tableData&quot;&gt;</span><br><span class="line">        &lt;el-table-column prop&#x3D;&quot;date&quot; label&#x3D;&quot;日期&quot; width&#x3D;&quot;140&quot;&gt;</span><br><span class="line">        &lt;&#x2F;el-table-column&gt;</span><br><span class="line">        &lt;el-table-column prop&#x3D;&quot;name&quot; label&#x3D;&quot;姓名&quot; width&#x3D;&quot;120&quot;&gt;</span><br><span class="line">        &lt;&#x2F;el-table-column&gt;</span><br><span class="line">        &lt;el-table-column prop&#x3D;&quot;address&quot; label&#x3D;&quot;地址&quot;&gt;</span><br><span class="line">        &lt;&#x2F;el-table-column&gt;</span><br><span class="line">      &lt;&#x2F;el-table&gt;</span><br><span class="line">    &lt;&#x2F;el-main&gt;</span><br><span class="line">  &lt;&#x2F;el-container&gt;</span><br><span class="line">&lt;&#x2F;el-container&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  .el-header &#123;</span><br><span class="line">    background-color: #B3C0D1;</span><br><span class="line">    color: #333;</span><br><span class="line">    line-height: 60px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .el-aside &#123;</span><br><span class="line">    color: #333;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;Mainpage&#39;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    const item &#x3D; &#123;</span><br><span class="line">      date: &#39;2016-05-02&#39;,</span><br><span class="line">      name: &#39;王小虎&#39;,</span><br><span class="line">      address: &#39;上海市普陀区金沙江路 1518 弄&#39;</span><br><span class="line">    &#125;</span><br><span class="line">    return &#123;</span><br><span class="line">      tableData: Array(20).fill(item)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Vue 路由</title>
    <url>/2021/06/04/Vue-%E8%B7%AF%E7%94%B1/</url>
    <content><![CDATA[<h2 id="页面跳转"><a href="#页面跳转" class="headerlink" title="页面跳转"></a>页面跳转</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;hello.html&quot;</span>&gt;</span>Hello<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>hello.html和index.html同级</p>
<hr>
<h4 id="直接的页面跳转"><a href="#直接的页面跳转" class="headerlink" title="直接的页面跳转"></a>直接的页面跳转</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">this</span>.$router.push(<span class="string">&#x27;/url&#x27;</span>)</span><br></pre></td></tr></table></figure>



<hr>
<h2 id="组件切换-初始化时没有routers-js的情况"><a href="#组件切换-初始化时没有routers-js的情况" class="headerlink" title="组件切换(初始化时没有routers.js的情况)"></a>组件切换(初始化时没有routers.js的情况)</h2><p><a href="https://github.com/a1020151695/vue-component-shift">DEMO</a></p>
<p>1.引入VueRouter，统一管理路由</p>
<p>main.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> routers <span class="keyword">from</span> <span class="string">&#x27;./routers&#x27;</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App&#x27;</span></span><br><span class="line"></span><br><span class="line">Vue.use(VueRouter)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  mode: <span class="string">&#x27;history&#x27;</span>,</span><br><span class="line">  routes: routers</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">  router,</span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>2.新建routers.js（和main.js同级）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Home <span class="keyword">from</span> <span class="string">&#x27;./components/Home.vue&#x27;</span>  <span class="comment">// 引入要显示的组件</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routers = [</span><br><span class="line">    &#123;</span><br><span class="line">        path: <span class="string">&#x27;/home&#x27;</span>,  <span class="comment">// 设置好route</span></span><br><span class="line">        name: <span class="string">&#x27;home&#x27;</span>,</span><br><span class="line">        component: Home</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> routers</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>4.自定义组件 Home.vue（在components/）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;p&gt;xxxxxx&lt;&#x2F;p&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">        name: &quot;Home&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>3.App.vue</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;img alt&#x3D;&quot;Vue logo&quot; src&#x3D;&quot;.&#x2F;assets&#x2F;logo.png&quot;&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;router-link to&#x3D;&quot;&#x2F;home&quot;&gt;Test&lt;&#x2F;router-link&gt;</span><br><span class="line">    &lt;router-view&#x2F;&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br></pre></td></tr></table></figure>

<hr>
<blockquote>
<p>初始化有router的话，直接在其index.js下改就行了</p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>Vue-项目创建-VsCode</title>
    <url>/2021/06/06/Vue-%E9%A1%B9%E7%9B%AE%E5%88%9B%E5%BB%BA-VsCode/</url>
    <content><![CDATA[<p>所需插件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Vetur  &#x2F;&#x2F; Vue开发插件</span><br><span class="line">ESLint &#x2F;&#x2F; 代码校验</span><br></pre></td></tr></table></figure>

<p>工具：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g vue-cli</span><br></pre></td></tr></table></figure>

<p>命令:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vue init webpack projectName</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></table></figure>

<hr>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">You seem to be using old vue-cli and </span><br><span class="line">scaffolded your project using vue init webpack &lt;project-name&gt;.</span><br><span class="line"></span><br><span class="line">Since it all evolved into vue cli 3</span><br><span class="line">old vue-cli is deprecated</span><br><span class="line">we are now using @vue&#x2F;cli</span><br><span class="line">vue create &lt;project-name&gt; for scaffolding out projects.</span><br><span class="line"></span><br><span class="line">It&#39;s perfectly fine for you to use the old way(and I still do sometimes)</span><br><span class="line">vue.config.js is the global configuration file for your project </span><br><span class="line">when you are using @vue&#x2F;cli. Check more about it here.</span><br><span class="line"></span><br><span class="line">For webpack configurations when using vue-cli</span><br><span class="line">in projects scaffolded using npm init command</span><br><span class="line">check the &#x2F;build directory in the root of the project folder.</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>WSL Mysql</title>
    <url>/2021/03/27/WSL-Mysql/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install mysql-server</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql --version</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo &#x2F;etc&#x2F;init.d&#x2F;mysql start</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">root</span><br><span class="line">root</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>WSL Basic</title>
    <url>/2021/03/27/WSL-Basic/</url>
    <content><![CDATA[<p>switch to root</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo passwd root</span><br><span class="line"></span><br><span class="line">su</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>WSL Ngnix</title>
    <url>/2021/03/27/WSL-Ngnix/</url>
    <content><![CDATA[<p>以Ubuntu为例，它的软件库中已有Nginx安装包，可通过控制台安装，输入以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install nginx</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>WSL conflict</title>
    <url>/2021/03/08/WSL-conflict/</url>
    <content><![CDATA[<p>“cmd” with “administrator”</p>
<p>(Some simulator(e.g. Android simulator ) need to close hp-v virtual machine in win10)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bcdedit &#x2F;set hypervisorlaunchtype off</span><br></pre></td></tr></table></figure>

<p>open WSL(WSL base on hp-v virtual machine in win10)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bcdedit &#x2F;set hypervisorlaunchtype auto</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>X86,ARM and M1</title>
    <url>/2021/03/13/X86-ARM-and-M1/</url>
    <content><![CDATA[<p>simple instruction set</p>
<p>complex instruction set</p>
<p>GPU inside M1</p>
]]></content>
      <categories>
        <category>Computer</category>
        <category>Chip</category>
      </categories>
      <tags>
        <tag>Computer</tag>
        <tag>Chips</tag>
        <tag>Apple</tag>
        <tag>Intel</tag>
      </tags>
  </entry>
  <entry>
    <title>axois</title>
    <url>/2021/06/07/axois/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">        name: &quot;Register&quot;,</span><br><span class="line">        data()&#123;</span><br><span class="line">            return&#123;</span><br><span class="line">                messageInfo:&quot;&quot;,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line">            register()&#123;</span><br><span class="line">                axios.post(&#39;&#x2F;register&#39;, &#123;</span><br><span class="line">                    &quot;username&quot;:this.username,</span><br><span class="line">                    &quot;password&quot;:this.password,</span><br><span class="line">                    &quot;password1&quot;:this.password,</span><br><span class="line">                &#125;).then((res)&#x3D;&gt;&#123;</span><br><span class="line">                    console.log(res)</span><br><span class="line">                    this.messageInfo&#x3D;res.data.message</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;script&gt;	</span><br></pre></td></tr></table></figure>

<h4 id="Post指定form-data"><a href="#Post指定form-data" class="headerlink" title="Post指定form-data"></a>Post指定form-data</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">	axios(&#123;</span><br><span class="line">        method: &#39;post&#39;,</span><br><span class="line">        url: &#39;http:&#x2F;&#x2F;localhost:8080&#x2F;health-post&#39;,</span><br><span class="line">        headers: &#123;</span><br><span class="line">          &#39;Content-Type&#39;: &#39;multipart&#x2F;form-data&#39;</span><br><span class="line">        &#125;,</span><br><span class="line">        withCredentials: true,</span><br><span class="line">        data: formData</span><br><span class="line">      &#125;).then((res) &#x3D;&gt; &#123;</span><br><span class="line">      &#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>



<p>Spring Boot 接收数据</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/health-post&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">healthPost</span><span class="params">(<span class="meta">@RequestParam</span> Map&lt;String,String&gt; params)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (String key : params.keySet())&#123;</span><br><span class="line">        System.out.println(key+<span class="string">&quot;is&quot;</span>+params.get(key));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Good&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<hr>
<h4 id="axios-headers"><a href="#axios-headers" class="headerlink" title="axios headers"></a>axios headers</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">Axios.request(&#123;</span><br><span class="line">     url: <span class="string">&quot;http://example.com&quot;</span>,</span><br><span class="line">     method: <span class="string">&quot;get&quot;</span>,</span><br><span class="line">     headers:&#123;</span><br><span class="line">         Cookie: <span class="string">&quot;cookie1=value; cookie2=value; cookie3=value;&quot;</span></span><br><span class="line">     &#125; </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>



<p>axios统一添加headers</p>
<p>在main.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line">axios.interceptors.request.use(</span><br><span class="line">  config =&gt; &#123;</span><br><span class="line">    config.headers.common = &#123;</span><br><span class="line">      <span class="string">&#x27;xxxxxxxxxx&#x27;</span>: <span class="string">&#x27;oooooooooooooo&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> config</span><br><span class="line">  &#125;,</span><br><span class="line">  err =&gt; &#123;&#125;)</span><br></pre></td></tr></table></figure>

<hr>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">axios(&#123;</span><br><span class="line">       withCredentials: <span class="literal">true</span>,</span><br><span class="line">       maxRedirects: <span class="number">0</span>,</span><br><span class="line">       method: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">       url: <span class="string">&#x27;/admin/getExcel&#x27;</span>,</span><br><span class="line">       timeout: <span class="number">4000</span></span><br><span class="line">     &#125;).then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">       <span class="built_in">console</span>.log(res)</span><br><span class="line">     &#125;, <span class="function"><span class="params">ErrorEvent</span> =&gt;</span> &#123;</span><br><span class="line">       <span class="built_in">this</span>.$message(<span class="string">&#x27;请求数据失败&#x27;</span>)</span><br><span class="line">     &#125;)</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="axois-post-列表-json-Array"><a href="#axois-post-列表-json-Array" class="headerlink" title="axois post 列表 json Array"></a>axois post 列表 json Array</h4><p>前端</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">axios(&#123;</span><br><span class="line">       withCredentials: <span class="literal">true</span>,</span><br><span class="line">       method: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">       url: <span class="string">&#x27;/admin/getExcel&#x27;</span>,</span><br><span class="line">       headers: &#123;</span><br><span class="line">         <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span></span><br><span class="line">       &#125;,</span><br><span class="line">       timeout: <span class="number">4000</span>,</span><br><span class="line">       data: <span class="built_in">this</span>.tableData</span><br><span class="line">     &#125;).then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">       <span class="built_in">console</span>.log(res)</span><br><span class="line">     &#125;, <span class="function"><span class="params">ErrorEvent</span> =&gt;</span> &#123;</span><br><span class="line">       <span class="built_in">this</span>.$message(<span class="string">&#x27;请求数据失败&#x27;</span>)</span><br><span class="line">     &#125;)</span><br></pre></td></tr></table></figure>

<p>后端 Spring Boot</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/admin/getExcel&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">getExcel</span><span class="params">(<span class="meta">@RequestBody</span> JSONArray re)</span> </span>&#123;</span><br><span class="line">    System.out.println(re);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;ok&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>cmd Shortcut</title>
    <url>/2021/03/08/cmd-Shortcut/</url>
    <content><![CDATA[<p>1.源文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\OpenCMDHere]</span><br><span class="line">&quot;ShowBasedOnVelocityId&quot;&#x3D;dword:00639bc8</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\OpenCMDHere\command]</span><br><span class="line">@&#x3D;&quot;cmd.exe &#x2F;s &#x2F;k pushd \&quot;%V\&quot;&quot;</span><br></pre></td></tr></table></figure>

<p>2.想要Windows Terminal </p>
<p>把其快捷方式放到System32下（即和cmd.exe一起）</p>
<p>然后</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\OpenCMDHere]</span><br><span class="line">&quot;ShowBasedOnVelocityId&quot;&#x3D;dword:00639bc8</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\OpenCMDHere\command]</span><br><span class="line">@&#x3D;&quot;wt.exe cmd.exe &#x2F;s &#x2F;k pushd \&quot;%V\&quot;&quot;</span><br></pre></td></tr></table></figure>

<p>pushd 相当于cd</p>
<p>你也可以在cmd下输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cmd pushd g:</span><br></pre></td></tr></table></figure>

<p>相当于</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd g:</span><br></pre></td></tr></table></figure>

<p>具体原理我不是很想研究。。</p>
<p>会用就好了 这玩意儿</p>
<p>3.进入注册表</p>
<p>win+r</p>
<p>regedit </p>
<p>你可以根据源代码找到注册表的对应位置</p>
<p>4.这里是微软介绍reg的<a href="https://support.microsoft.com/en-us/help/310516/how-to-add-modify-or-delete-registry-subkeys-and-values-by-using-a-reg">文档</a></p>
<p>虽然我看不太懂</p>
<p>简单地说了最上面的version不是简单的注释</p>
<p>而是对应了不同的windows版本</p>
<p>然后下面的是具体的值的设置</p>
<p>你也可以一GUI的形式到regedit下修改</p>
]]></content>
      <categories>
        <category>Shortcut</category>
      </categories>
      <tags>
        <tag>Shortcut</tag>
      </tags>
  </entry>
  <entry>
    <title>docker mysql</title>
    <url>/2021/06/19/docker-mysql/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># docker 中下载 mysql</span><br><span class="line">docker pull mysql</span><br><span class="line"></span><br><span class="line">#启动</span><br><span class="line">docker run --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD&#x3D;Lzslov123! -d mysql</span><br><span class="line"></span><br><span class="line">#进入容器</span><br><span class="line">docker exec -it mysql bash</span><br><span class="line"></span><br><span class="line">#登录mysql</span><br><span class="line">mysql -u root -p</span><br><span class="line">ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;Lzslov123!&#39;;</span><br><span class="line"></span><br><span class="line">#添加远程登录用户</span><br><span class="line">CREATE USER &#39;liaozesong&#39;@&#39;%&#39; IDENTIFIED WITH mysql_native_password BY &#39;Lzslov123!&#39;;</span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#39;liaozesong&#39;@&#39;%&#39;;</span><br></pre></td></tr></table></figure>



<p>说是mysql镜像，但是其实还是依赖于linux</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>docker tutorial</title>
    <url>/2021/06/19/docker-tutorial/</url>
    <content><![CDATA[<h4 id="docker-install"><a href="#docker-install" class="headerlink" title="docker install"></a>docker install</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br><span class="line">DRY_RUN=1 sh ./get-docker.sh</span><br><span class="line">sudo sh get-docker.sh</span><br></pre></td></tr></table></figure>



<hr>
<h4 id="docker-导入文件"><a href="#docker-导入文件" class="headerlink" title="docker 导入文件"></a>docker 导入文件</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker cp 你的文件路径 容器长ID:docker容器路径</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker cp /var/backup/nginx.zip 68b99:/cert</span><br></pre></td></tr></table></figure>

<hr>
<p>Docker 部署使用localhost时，一定要注意容器与容器，容器与主机之间的关系</p>
]]></content>
  </entry>
  <entry>
    <title>html width</title>
    <url>/2021/06/06/html-width/</url>
    <content><![CDATA[<p>有些标签自带width属性，可以直接设置</p>
<p>但是有些标签需要借助style才可以设置宽度</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width:400px;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>js 请求</title>
    <url>/2021/06/18/js-%E8%AF%B7%E6%B1%82/</url>
    <content><![CDATA[<h4 id="POST-请求"><a href="#POST-请求" class="headerlink" title="POST 请求"></a>POST 请求</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> username = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;username&#x27;</span>).value</span><br><span class="line">       <span class="keyword">let</span> password = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;password&#x27;</span>).value</span><br><span class="line">       <span class="keyword">var</span> httpRequest = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">       httpRequest.open(<span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;http://localhost:8080/user/login_frontend&#x27;</span>, <span class="literal">true</span>)</span><br><span class="line">       <span class="keyword">var</span> formData = <span class="keyword">new</span> FormData()</span><br><span class="line">       formData.append(<span class="string">&quot;username&quot;</span>,username)</span><br><span class="line">       formData.append(<span class="string">&quot;password&quot;</span>,password)</span><br><span class="line">       httpRequest.send(formData);</span><br></pre></td></tr></table></figure>



<h4 id="重定向和转发"><a href="#重定向和转发" class="headerlink" title="重定向和转发"></a>重定向和转发</h4><p>重定向：服务器向浏览器发送一个302状态码以及一个location消息头，浏览器收到请求后会向重定向地址发出请求。</p>
<p>转发：一个web组件将未完成的处理通过容器转交给另一个web组件继续完成</p>
<hr>
<h4 id="Preflight"><a href="#Preflight" class="headerlink" title="Preflight"></a>Preflight</h4><p>跨域请求可以正常发起，但是返回的结果被浏览器拦截了</p>
<p>为了防止这种情况的发生，规范要求，对这种可能对服务器数据产生副作用的HTTP请求方法，浏览器必须先使用<code>OPTIONS</code>方法发起一个预检请求，从而获知服务器是否允许该跨域请求：如果允许，就发送带数据的真实请求；如果不允许，则阻止发送带数据的真实请求。</p>
<hr>
<p>####　jsonp</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addScriptTag</span>(<span class="params">src</span>) </span>&#123;</span><br><span class="line">       <span class="keyword">var</span> script = <span class="built_in">document</span>.createElement(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">       script.setAttribute(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;text/javascript&quot;</span>);</span><br><span class="line">       script.src = src;</span><br><span class="line">       <span class="built_in">document</span>.body.appendChild(script);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>



<p>通过插入script标签实现GET请求（不可POST）</p>
<p>src为请求地址，可携带params</p>
]]></content>
  </entry>
  <entry>
    <title>lms docker</title>
    <url>/2021/03/28/lms-docker/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -p 8080:80 -it lms:v1 &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>





]]></content>
  </entry>
  <entry>
    <title>js 页面跳转</title>
    <url>/2021/06/18/js-%E9%A1%B5%E9%9D%A2%E8%B7%B3%E8%BD%AC/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>pip</title>
    <url>/2021/03/27/pip/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure>



<p>update pip</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python -m pip install --upgrade pip</span><br></pre></td></tr></table></figure>

<p>use mirror</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install scrapy -i https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install -r .&#x2F;requirements.txt -i https:&#x2F;&#x2F;pypi.douban.com&#x2F;simple&#x2F;</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">报错</span><br><span class="line">The repository located at pypi.douban.com is not a trusted or secure host and is being ignored. If this repository is available via HTTPS it is recommended to use HTTPS instead, otherwise you may silence this warning and allow it anyways with &#39;--trusted-host pypi.douban.com&#39;.</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">解决</span><br><span class="line">将url中的http修改为https</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Linux 下pip无法安装的，pip3支持</span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>vue 版本</title>
    <url>/2021/06/19/vue-%E7%89%88%E6%9C%AC/</url>
    <content><![CDATA[<p>安装新的版本前，需要先把之前安装的版本卸载掉。</p>
<p>vue卸载：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm uninstall vue-cli -g（3.0以下版本卸载）</span><br><span class="line">npm uninstall -g @vue/cli（3.0以上版本卸载）</span><br></pre></td></tr></table></figure>



<p>vue安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g @vue/cli （安装的是最新版）</span><br><span class="line">npm install vue-cli@2.9.6 （指定版本安装【指定版本为3.0以下版本】，其中2.9.6为版本号）</span><br><span class="line">npm install -g @vue/cli@3.11.0（指定版本安装【指定版本为3.0以上版本】，其中3.11.0为版本号）</span><br></pre></td></tr></table></figure>



<p>vue版本查看：vue -V<br>————————————————<br>版权声明：本文为CSDN博主「IT_ms」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/IT_moshang/article/details/106470754">https://blog.csdn.net/IT_moshang/article/details/106470754</a></p>
]]></content>
  </entry>
  <entry>
    <title>不定积分</title>
    <url>/2021/05/31/%E4%B8%8D%E5%AE%9A%E7%A7%AF%E5%88%86/</url>
    <content><![CDATA[<p><strong>二类换元</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x&#x3D;sint</span><br></pre></td></tr></table></figure>

<hr>
<p><strong>一类换元</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">其实就是直接法，只是重在观察</span><br><span class="line">主要针对对数，三角函数</span><br></pre></td></tr></table></figure>

<p>对数</p>
<p>三角函数</p>
]]></content>
  </entry>
  <entry>
    <title>三角函数日常</title>
    <url>/2021/05/30/%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0%E6%97%A5%E5%B8%B8/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>云服务器 tutorial</title>
    <url>/2021/06/19/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8-tutorial/</url>
    <content><![CDATA[<h4 id="云服务器文件传输"><a href="#云服务器文件传输" class="headerlink" title="云服务器文件传输"></a>云服务器文件传输</h4><p>Windows到Linux</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scp D:\Resource\hello.txt root@192.168.0.1:&#x2F;home&#x2F;admin</span><br></pre></td></tr></table></figure>

<p>Linux到Windows</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scp root@:&#x2F;home&#x2F;admin&#x2F;hello.txt D:\resource\</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="云服务器-Connect-timed-out"><a href="#云服务器-Connect-timed-out" class="headerlink" title="云服务器 Connect timed out"></a>云服务器 Connect timed out</h4><p>mysql Connect timed out</p>
<p>安全组得配置</p>
<p>开放3306端口</p>
<hr>
<h4 id="云服务器和校园网"><a href="#云服务器和校园网" class="headerlink" title="云服务器和校园网"></a>云服务器和校园网</h4><p>云服务器是访问不到校园网的主机的</p>
<hr>
<h4 id="云服务器简陋部署vue"><a href="#云服务器简陋部署vue" class="headerlink" title="云服务器简陋部署vue"></a>云服务器简陋部署vue</h4><p>如果想要最快部署vue 的话</p>
<p>利用git把项目部署到服务器是最快的</p>
]]></content>
  </entry>
  <entry>
    <title>定积分</title>
    <url>/2021/06/23/%E5%AE%9A%E7%A7%AF%E5%88%86/</url>
    <content><![CDATA[<h4 id="导定积分"><a href="#导定积分" class="headerlink" title="导定积分"></a>导定积分</h4><p><img src="https://gitee.com/simple_one1/pic/raw/master/IMG_0219.png" alt="IMG_0219"></p>
<h4 id="定积分x和t"><a href="#定积分x和t" class="headerlink" title="定积分x和t"></a>定积分x和t</h4><p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210623172504701.png" alt="image-20210623172504701"></p>
<h4 id="定积分常识"><a href="#定积分常识" class="headerlink" title="定积分常识"></a>定积分常识</h4><h4 id="定积分特殊性质"><a href="#定积分特殊性质" class="headerlink" title="定积分特殊性质"></a>定积分特殊性质</h4>]]></content>
  </entry>
  <entry>
    <title>定积分总结</title>
    <url>/2021/05/30/%E5%AE%9A%E7%A7%AF%E5%88%86%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p>s</p>
<p>基础法：拆</p>
<p>三角函数的积分</p>
<hr>
<p>变积分限：分部积分消x，先上再分部</p>
<p>分部一下，直接大杀四方</p>
<hr>
<p>什么时候用换元x=sint</p>
]]></content>
  </entry>
  <entry>
    <title>成都信息工程大学</title>
    <url>/2021/05/30/%E6%88%90%E9%83%BD%E4%BF%A1%E6%81%AF%E5%B7%A5%E7%A8%8B%E5%A4%A7%E5%AD%A6/</url>
    <content><![CDATA[<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210530092023694.png" alt="image-20210530092023694"></p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210530092044306.png" alt="image-20210530092044306"></p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210530092106506.png" alt="image-20210530092106506"></p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210530092202161.png" alt="image-20210530092202161"></p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210530091910920.png" alt="image-20210530091910920"></p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210530091926951.png" alt="image-20210530091926951"></p>
]]></content>
  </entry>
  <entry>
    <title>成都理工大学</title>
    <url>/2021/05/30/%E6%88%90%E9%83%BD%E7%90%86%E5%B7%A5%E5%A4%A7%E5%AD%A6/</url>
    <content><![CDATA[<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210530090057651.png" alt="image-20210530090057651"></p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210530090116490.png" alt="image-20210530090116490"></p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210530090331200.png" alt="image-20210530090331200"></p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210530090340075.png" alt="image-20210530090340075"></p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210530090348067.png" alt="image-20210530090348067"></p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210530090357204.png" alt="image-20210530090357204"></p>
]]></content>
  </entry>
  <entry>
    <title>物理层</title>
    <url>/2021/06/23/%E7%89%A9%E7%90%86%E5%B1%82/</url>
    <content><![CDATA[<p>x香农公式：</p>
<p>奈氏准则</p>
]]></content>
  </entry>
  <entry>
    <title>网络层</title>
    <url>/2021/05/29/%E7%BD%91%E7%BB%9C%E5%B1%82/</url>
    <content><![CDATA[<p>网络层功能</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">异构网络互联</span><br><span class="line"></span><br><span class="line">网络层的目的是实现两个端系统之间的数据透明传送，具体功能包括寻址和路由选择、连接的建立、保持和终止</span><br></pre></td></tr></table></figure>

<p>中继设备</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">物理层的中继系统：中继器，集线器Hub</span><br><span class="line"></span><br><span class="line">数据链路层的中继系统：网桥，交换机</span><br><span class="line"></span><br><span class="line">网络层的中继系统：路由器</span><br><span class="line"></span><br><span class="line">网络层以上的中继系统：网关</span><br></pre></td></tr></table></figure>



<p>流量控制</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">接收方告诉发送方，我接收不了那么多了，你待会再发</span><br></pre></td></tr></table></figure>



<p>拥塞控制</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">首先是拥塞————网络负载增加但是吞吐量减小</span><br><span class="line">基于储存转发的机制而出现的现象</span><br></pre></td></tr></table></figure>

<p>路由算法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">距离-向量路由算法 例如：RIP</span><br><span class="line">链路状态路由算法 例如：OSPF</span><br></pre></td></tr></table></figure>

<p>路由收敛</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">路由链路自学习到稳定</span><br></pre></td></tr></table></figure>



<p>RIP</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">路由表:</span><br><span class="line">&lt; 目的网络，距离，下一跳路由器 &gt;</span><br><span class="line"></span><br><span class="line">简述：</span><br><span class="line">每30秒广播一次更新路由（只传给相邻的路由）</span><br><span class="line">对于从X传来的RIP报文，把所有下一跳的地址都改为X，并且距离都加1</span><br><span class="line">注意：</span><br><span class="line">1.是修改传过来的报文，而不是修改自己的表</span><br><span class="line">2.RIP报文中的内容其实是发送方的路由表</span><br><span class="line"></span><br><span class="line">接下来才是更新接收方的路由表：</span><br><span class="line">（1）如果RIP报文中有新的目的网络，则直接添加到路由表</span><br><span class="line">（2）如果RIP报文中出现已有目的网络，而且路由表中下一跳地址是X，则直接替换（更新状态）</span><br><span class="line">（3）如果RIP报文中出现已有目的网络，但是下一跳地址不是X，则路由表取最小值</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210529125158034.png" alt="image-20210529125158034"></p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210529125236146.png" alt="image-20210529125236146"></p>
<p>RIP特点</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">优点：</span><br><span class="line">实现简单，开销小，收敛快</span><br><span class="line"></span><br><span class="line">缺点:</span><br><span class="line">当出现故障时，坏消息传播得慢，收敛慢</span><br><span class="line">（故障信息只能一跳一跳地传，远处路由知道得慢）</span><br><span class="line">最大距离为15（16表示不可达）</span><br><span class="line">储存的是完整的路由表，如果网络规模大的话，开销大</span><br><span class="line">RIP不管开销，认为跳数最少得就是最优</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>OSPF</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">使用Dijkstra算法构建最优链路</span><br><span class="line">每10秒发送一个Hello分组，验证可达性</span><br><span class="line">如果40秒没有收到某路由的Hello分组，则表示其不可达了</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>报文</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">不用UDP，直接用IP数据报传输</span><br></pre></td></tr></table></figure>



<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210529125328527.png" alt="image-20210529125328527"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">区域标识符：看下图理解区域</span><br><span class="line">路由器标识符：发送方的IP</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210529125541423.png" alt="image-20210529125541423"></p>
<p>OSPF特殊路由器</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">R6：自治系统边界路由器——与外界别的自治系统联系</span><br><span class="line">R3，R7，R4：区域边界路由器——把各区域与主干区域连接起来</span><br><span class="line">主干区域内的都叫主干路由器（包括上面提到的四个特殊路由器）</span><br></pre></td></tr></table></figure>





<p>OSPF种类</p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210529125831974.png" alt="image-20210529125831974"></p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210529125841175.png" alt="image-20210529125841175"></p>
]]></content>
  </entry>
  <entry>
    <title>腾讯防水墙</title>
    <url>/2021/06/19/%E8%85%BE%E8%AE%AF%E9%98%B2%E6%B0%B4%E5%A2%99/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>西南科技大学</title>
    <url>/2021/05/30/%E8%A5%BF%E5%8D%97%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6/</url>
    <content><![CDATA[<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210530090901098.png" alt="image-20210530090901098"></p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210530091022080.png" alt="image-20210530091022080"></p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210530091033354.png" alt="image-20210530091033354"></p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210530091052640.png" alt="image-20210530091052640"></p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210530091102542.png" alt="image-20210530091102542"></p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210530091431085.png" alt="image-20210530091431085"></p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210530195405472.png" alt="image-20210530195405472"></p>
<p><img src="/2021/05/30/%E8%A5%BF%E5%8D%97%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6/Users\Jimmy\AppData\Roaming\Typora\typora-user-images\image-20210530195428120.png" alt="image-20210530195422207"></p>
]]></content>
  </entry>
  <entry>
    <title>计算机网络期末复习</title>
    <url>/2021/06/23/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/</url>
    <content><![CDATA[<h4 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h4><p><img src="https://gitee.com/simple_one1/pic/raw/master/IMG_0204.PNG" alt="IMG_0204"></p>
<h4 id="5层网络体系结构"><a href="#5层网络体系结构" class="headerlink" title="5层网络体系结构"></a>5层网络体系结构</h4><h4 id="TCP-IP-4层协议"><a href="#TCP-IP-4层协议" class="headerlink" title="TCP/IP 4层协议"></a>TCP/IP 4层协议</h4><p><img src="https://gitee.com/simple_one1/pic/raw/master/IMG_0202.PNG" alt="IMG_0202"></p>
<h4 id="OSI-7层协议"><a href="#OSI-7层协议" class="headerlink" title="OSI 7层协议"></a>OSI 7层协议</h4><h4 id="协议三要素"><a href="#协议三要素" class="headerlink" title="协议三要素"></a>协议三要素</h4><p>语法、语义、同步（事件顺序）</p>
<h4 id="标准化工作"><a href="#标准化工作" class="headerlink" title="标准化工作"></a>标准化工作</h4><p>互联网草案==建议标准==互联网标准</p>
<h2 id="一、物理层"><a href="#一、物理层" class="headerlink" title="一、物理层"></a>一、物理层</h2><h4 id="分组交换"><a href="#分组交换" class="headerlink" title="分组交换"></a>分组交换</h4><p><img src="https://gitee.com/simple_one1/pic/raw/master/IMG_0200.PNG" alt="IMG_0200"></p>
<h4 id="数据传输相参数"><a href="#数据传输相参数" class="headerlink" title="数据传输相参数"></a>数据传输相参数</h4><p><img src="https://gitee.com/simple_one1/pic/raw/master/IMG_0201.PNG" alt="IMG_0201"></p>
<p>总时延=发送时延+传播时延+处理时延+排队时延</p>
<p>RTU 往返时间（Round-Trip Time）</p>
<h4 id="香农公式"><a href="#香农公式" class="headerlink" title="香农公式"></a>香农公式</h4><p><img src="https://gitee.com/simple_one1/pic/raw/master/IMG_0199.PNG" alt="IMG_0199"></p>
<h4 id="调制和编码"><a href="#调制和编码" class="headerlink" title="调制和编码"></a>调制和编码</h4><h4 id="曼彻斯特编码"><a href="#曼彻斯特编码" class="headerlink" title="曼彻斯特编码"></a>曼彻斯特编码</h4><p><img src="https://gitee.com/simple_one1/pic/raw/master/IMG_0205.PNG" alt="IMG_0205"></p>
<h2 id="三、数据链路层"><a href="#三、数据链路层" class="headerlink" title="三、数据链路层"></a>三、数据链路层</h2><h4 id="信道复用技术"><a href="#信道复用技术" class="headerlink" title="信道复用技术"></a>信道复用技术</h4><p><img src="https://gitee.com/simple_one1/pic/raw/master/image-20210623173902101.png" alt="image-20210623173902101"></p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/IMG_0207.PNG" alt="IMG_0207"></p>
<h4 id="CRC"><a href="#CRC" class="headerlink" title="CRC"></a>CRC</h4><p><img src="https://gitee.com/simple_one1/pic/raw/master/IMG_0208.PNG" alt="IMG_0208"></p>
<h4 id="PPP协议"><a href="#PPP协议" class="headerlink" title="PPP协议"></a>PPP协议</h4><h4 id="CSMA-CD"><a href="#CSMA-CD" class="headerlink" title="CSMA/CD"></a>CSMA/CD</h4><p><img src="https://gitee.com/simple_one1/pic/raw/master/IMG_0209.PNG" alt="IMG_0209"></p>
<h4 id="CSMA-CA"><a href="#CSMA-CA" class="headerlink" title="CSMA/CA"></a>CSMA/CA</h4><p><img src="https://gitee.com/simple_one1/pic/raw/master/IMG_0210.PNG" alt="IMG_0210"></p>
<h4 id="交换机和Hub"><a href="#交换机和Hub" class="headerlink" title="交换机和Hub"></a>交换机和Hub</h4><h4 id="更快的以太网"><a href="#更快的以太网" class="headerlink" title="更快的以太网"></a>更快的以太网</h4><h2 id="四、网络层"><a href="#四、网络层" class="headerlink" title="四、网络层"></a>四、网络层</h2><h4 id="MTU"><a href="#MTU" class="headerlink" title="MTU"></a>MTU</h4><p>最大传送单元</p>
<h4 id="片偏移"><a href="#片偏移" class="headerlink" title="片偏移"></a>片偏移</h4><p>每一分片的长度是8字节的整数倍</p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/IMG_0213.PNG" alt="IMG_0213"></p>
<h3 id="子网划分"><a href="#子网划分" class="headerlink" title="子网划分"></a>子网划分</h3><h4 id="三级IP地址"><a href="#三级IP地址" class="headerlink" title="三级IP地址"></a>三级IP地址</h4><h4 id="子网掩码"><a href="#子网掩码" class="headerlink" title="子网掩码"></a>子网掩码</h4><h4 id="CIDR"><a href="#CIDR" class="headerlink" title="CIDR"></a>CIDR</h4><h4 id="特殊IP"><a href="#特殊IP" class="headerlink" title="特殊IP"></a>特殊IP</h4><h4 id="路由转发"><a href="#路由转发" class="headerlink" title="路由转发"></a>路由转发</h4><p>目的地址、子网掩码、下一跳地址</p>
<p>题</p>
<h4 id="RIP"><a href="#RIP" class="headerlink" title="RIP"></a>RIP</h4><p>题</p>
<p>好消息传播快，坏消息传播慢</p>
<p>16</p>
<p>定期交换路由表信息</p>
<h4 id="OSPF"><a href="#OSPF" class="headerlink" title="OSPF"></a>OSPF</h4><p>洪泛法</p>
<p>链路状态发生改变的时候交换路由表</p>
<h2 id="五、传输层"><a href="#五、传输层" class="headerlink" title="五、传输层"></a>五、传输层</h2><h4 id="熟知端口号"><a href="#熟知端口号" class="headerlink" title="熟知端口号"></a>熟知端口号</h4><h4 id="TCP"><a href="#TCP" class="headerlink" title="TCP"></a>TCP</h4><h4 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a>UDP</h4><h4 id="停止等待协议"><a href="#停止等待协议" class="headerlink" title="停止等待协议"></a>停止等待协议</h4><p>超时重传</p>
<h4 id="流量控制"><a href="#流量控制" class="headerlink" title="流量控制"></a>流量控制</h4><p>滑动窗口</p>
<h4 id="拥塞"><a href="#拥塞" class="headerlink" title="拥塞"></a>拥塞</h4><p>负载越来越大，但是吞吐量反而越来越小</p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/IMG_0215.PNG" alt="IMG_0215"></p>
<h4 id="拥塞控制"><a href="#拥塞控制" class="headerlink" title="拥塞控制"></a>拥塞控制</h4><p>满开始</p>
<p>拥塞避免</p>
<p>快重传</p>
<p>快恢复</p>
<h2 id="六、应用层"><a href="#六、应用层" class="headerlink" title="六、应用层"></a>六、应用层</h2><h4 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h4><p>过程</p>
<p>HTTP</p>
<p>FTP</p>
<p><img src="https://gitee.com/simple_one1/pic/raw/master/IMG_0214.PNG" alt="IMG_0214"></p>
<p>SMTP</p>
<p>DHCP</p>
]]></content>
  </entry>
  <entry>
    <title>计组-存储系统</title>
    <url>/2021/05/29/%E8%AE%A1%E7%BB%84-%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>RAM和ROM</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Random Access Memory</span><br><span class="line">Read-Only Memory</span><br><span class="line"></span><br><span class="line">此外，还有一种串行访问存储器，分为两类：顺序存取存储器（磁带）和直接存取存储器（磁盘）</span><br></pre></td></tr></table></figure>

<p>SRAM和DRAM</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Static</span><br><span class="line">——常作Cache</span><br><span class="line">——触发器</span><br><span class="line"></span><br><span class="line">Dynamic</span><br><span class="line">——常作主存</span><br><span class="line">——电容</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
</search>
